var rg=Object.defineProperty;var ng=(is,ii,Xr)=>ii in is?rg(is,ii,{enumerable:!0,configurable:!0,writable:!0,value:Xr}):is[ii]=Xr;var Se=(is,ii,Xr)=>ng(is,typeof ii!="symbol"?ii+"":ii,Xr);(function(){"use strict";function is(De){return De&&De.__esModule&&Object.prototype.hasOwnProperty.call(De,"default")?De.default:De}var ii={exports:{}},Xr=ii.exports={},si,oi;function Ic(){throw new Error("setTimeout has not been defined")}function Fc(){throw new Error("clearTimeout has not been defined")}(function(){try{typeof setTimeout=="function"?si=setTimeout:si=Ic}catch{si=Ic}try{typeof clearTimeout=="function"?oi=clearTimeout:oi=Fc}catch{oi=Fc}})();function Ap(De){if(si===setTimeout)return setTimeout(De,0);if((si===Ic||!si)&&setTimeout)return si=setTimeout,setTimeout(De,0);try{return si(De,0)}catch{try{return si.call(null,De,0)}catch{return si.call(this,De,0)}}}function tm(De){if(oi===clearTimeout)return clearTimeout(De);if((oi===Fc||!oi)&&clearTimeout)return oi=clearTimeout,clearTimeout(De);try{return oi(De)}catch{try{return oi.call(null,De)}catch{return oi.call(this,De)}}}var yi=[],As=!1,ss,Fd=-1;function rm(){!As||!ss||(As=!1,ss.length?yi=ss.concat(yi):Fd=-1,yi.length&&Ip())}function Ip(){if(!As){var De=Ap(rm);As=!0;for(var ae=yi.length;ae;){for(ss=yi,yi=[];++Fd<ae;)ss&&ss[Fd].run();Fd=-1,ae=yi.length}ss=null,As=!1,tm(De)}}Xr.nextTick=function(De){var ae=new Array(arguments.length-1);if(arguments.length>1)for(var z=1;z<arguments.length;z++)ae[z-1]=arguments[z];yi.push(new Fp(De,ae)),yi.length===1&&!As&&Ap(Ip)};function Fp(De,ae){this.fun=De,this.array=ae}Fp.prototype.run=function(){this.fun.apply(null,this.array)},Xr.title="browser",Xr.browser=!0,Xr.env={},Xr.argv=[],Xr.version="",Xr.versions={};function bi(){}Xr.on=bi,Xr.addListener=bi,Xr.once=bi,Xr.off=bi,Xr.removeListener=bi,Xr.removeAllListeners=bi,Xr.emit=bi,Xr.prependListener=bi,Xr.prependOnceListener=bi,Xr.listeners=function(De){return[]},Xr.binding=function(De){throw new Error("process.binding is not supported")},Xr.cwd=function(){return"/"},Xr.chdir=function(De){throw new Error("process.chdir is not supported")},Xr.umask=function(){return 0};var nm=ii.exports;const Hn=is(nm);var Op={},Od={};Od.byteLength=om,Od.toByteArray=lm,Od.fromByteArray=cm;for(var ai=[],Rn=[],im=typeof Uint8Array<"u"?Uint8Array:Array,Oc="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Is=0,sm=Oc.length;Is<sm;++Is)ai[Is]=Oc[Is],Rn[Oc.charCodeAt(Is)]=Is;Rn[45]=62,Rn[95]=63;function zp(De){var ae=De.length;if(ae%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var z=De.indexOf("=");z===-1&&(z=ae);var F=z===ae?0:4-z%4;return[z,F]}function om(De){var ae=zp(De),z=ae[0],F=ae[1];return(z+F)*3/4-F}function am(De,ae,z){return(ae+z)*3/4-z}function lm(De){var ae,z=zp(De),F=z[0],ue=z[1],oe=new im(am(De,F,ue)),de=0,Ee=ue>0?F-4:F,j;for(j=0;j<Ee;j+=4)ae=Rn[De.charCodeAt(j)]<<18|Rn[De.charCodeAt(j+1)]<<12|Rn[De.charCodeAt(j+2)]<<6|Rn[De.charCodeAt(j+3)],oe[de++]=ae>>16&255,oe[de++]=ae>>8&255,oe[de++]=ae&255;return ue===2&&(ae=Rn[De.charCodeAt(j)]<<2|Rn[De.charCodeAt(j+1)]>>4,oe[de++]=ae&255),ue===1&&(ae=Rn[De.charCodeAt(j)]<<10|Rn[De.charCodeAt(j+1)]<<4|Rn[De.charCodeAt(j+2)]>>2,oe[de++]=ae>>8&255,oe[de++]=ae&255),oe}function um(De){return ai[De>>18&63]+ai[De>>12&63]+ai[De>>6&63]+ai[De&63]}function dm(De,ae,z){for(var F,ue=[],oe=ae;oe<z;oe+=3)F=(De[oe]<<16&16711680)+(De[oe+1]<<8&65280)+(De[oe+2]&255),ue.push(um(F));return ue.join("")}function cm(De){for(var ae,z=De.length,F=z%3,ue=[],oe=16383,de=0,Ee=z-F;de<Ee;de+=oe)ue.push(dm(De,de,de+oe>Ee?Ee:de+oe));return F===1?(ae=De[z-1],ue.push(ai[ae>>2]+ai[ae<<4&63]+"==")):F===2&&(ae=(De[z-2]<<8)+De[z-1],ue.push(ai[ae>>10]+ai[ae>>4&63]+ai[ae<<2&63]+"=")),ue.join("")}var zc={};/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */zc.read=function(De,ae,z,F,ue){var oe,de,Ee=ue*8-F-1,j=(1<<Ee)-1,I=j>>1,M=-7,R=z?ue-1:0,Q=z?-1:1,ne=De[ae+R];for(R+=Q,oe=ne&(1<<-M)-1,ne>>=-M,M+=Ee;M>0;oe=oe*256+De[ae+R],R+=Q,M-=8);for(de=oe&(1<<-M)-1,oe>>=-M,M+=F;M>0;de=de*256+De[ae+R],R+=Q,M-=8);if(oe===0)oe=1-I;else{if(oe===j)return de?NaN:(ne?-1:1)*(1/0);de=de+Math.pow(2,F),oe=oe-I}return(ne?-1:1)*de*Math.pow(2,oe-F)},zc.write=function(De,ae,z,F,ue,oe){var de,Ee,j,I=oe*8-ue-1,M=(1<<I)-1,R=M>>1,Q=ue===23?Math.pow(2,-24)-Math.pow(2,-77):0,ne=F?0:oe-1,xe=F?1:-1,we=ae<0||ae===0&&1/ae<0?1:0;for(ae=Math.abs(ae),isNaN(ae)||ae===1/0?(Ee=isNaN(ae)?1:0,de=M):(de=Math.floor(Math.log(ae)/Math.LN2),ae*(j=Math.pow(2,-de))<1&&(de--,j*=2),de+R>=1?ae+=Q/j:ae+=Q*Math.pow(2,1-R),ae*j>=2&&(de++,j/=2),de+R>=M?(Ee=0,de=M):de+R>=1?(Ee=(ae*j-1)*Math.pow(2,ue),de=de+R):(Ee=ae*Math.pow(2,R-1)*Math.pow(2,ue),de=0));ue>=8;De[z+ne]=Ee&255,ne+=xe,Ee/=256,ue-=8);for(de=de<<ue|Ee,I+=ue;I>0;De[z+ne]=de&255,ne+=xe,de/=256,I-=8);De[z+ne-xe]|=we*128};/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */(function(De){const ae=Od,z=zc,F=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;De.Buffer=M,De.SlowBuffer=H,De.INSPECT_MAX_BYTES=50;const ue=2147483647;De.kMaxLength=ue;const{Uint8Array:oe,ArrayBuffer:de,SharedArrayBuffer:Ee}=globalThis;M.TYPED_ARRAY_SUPPORT=j(),!M.TYPED_ARRAY_SUPPORT&&typeof console<"u"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function j(){try{const x=new oe(1),d={foo:function(){return 42}};return Object.setPrototypeOf(d,oe.prototype),Object.setPrototypeOf(x,d),x.foo()===42}catch{return!1}}Object.defineProperty(M.prototype,"parent",{enumerable:!0,get:function(){if(M.isBuffer(this))return this.buffer}}),Object.defineProperty(M.prototype,"offset",{enumerable:!0,get:function(){if(M.isBuffer(this))return this.byteOffset}});function I(x){if(x>ue)throw new RangeError('The value "'+x+'" is invalid for option "size"');const d=new oe(x);return Object.setPrototypeOf(d,M.prototype),d}function M(x,d,f){if(typeof x=="number"){if(typeof d=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return xe(x)}return R(x,d,f)}M.poolSize=8192;function R(x,d,f){if(typeof x=="string")return we(x,d);if(de.isView(x))return ie(x);if(x==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof x);if(ot(x,de)||x&&ot(x.buffer,de)||typeof Ee<"u"&&(ot(x,Ee)||x&&ot(x.buffer,Ee)))return Me(x,d,f);if(typeof x=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');const V=x.valueOf&&x.valueOf();if(V!=null&&V!==x)return M.from(V,d,f);const fe=J(x);if(fe)return fe;if(typeof Symbol<"u"&&Symbol.toPrimitive!=null&&typeof x[Symbol.toPrimitive]=="function")return M.from(x[Symbol.toPrimitive]("string"),d,f);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof x)}M.from=function(x,d,f){return R(x,d,f)},Object.setPrototypeOf(M.prototype,oe.prototype),Object.setPrototypeOf(M,oe);function Q(x){if(typeof x!="number")throw new TypeError('"size" argument must be of type number');if(x<0)throw new RangeError('The value "'+x+'" is invalid for option "size"')}function ne(x,d,f){return Q(x),x<=0?I(x):d!==void 0?typeof f=="string"?I(x).fill(d,f):I(x).fill(d):I(x)}M.alloc=function(x,d,f){return ne(x,d,f)};function xe(x){return Q(x),I(x<0?0:Z(x)|0)}M.allocUnsafe=function(x){return xe(x)},M.allocUnsafeSlow=function(x){return xe(x)};function we(x,d){if((typeof d!="string"||d==="")&&(d="utf8"),!M.isEncoding(d))throw new TypeError("Unknown encoding: "+d);const f=O(x,d)|0;let V=I(f);const fe=V.write(x,d);return fe!==f&&(V=V.slice(0,fe)),V}function N(x){const d=x.length<0?0:Z(x.length)|0,f=I(d);for(let V=0;V<d;V+=1)f[V]=x[V]&255;return f}function ie(x){if(ot(x,oe)){const d=new oe(x);return Me(d.buffer,d.byteOffset,d.byteLength)}return N(x)}function Me(x,d,f){if(d<0||x.byteLength<d)throw new RangeError('"offset" is outside of buffer bounds');if(x.byteLength<d+(f||0))throw new RangeError('"length" is outside of buffer bounds');let V;return d===void 0&&f===void 0?V=new oe(x):f===void 0?V=new oe(x,d):V=new oe(x,d,f),Object.setPrototypeOf(V,M.prototype),V}function J(x){if(M.isBuffer(x)){const d=Z(x.length)|0,f=I(d);return f.length===0||x.copy(f,0,0,d),f}if(x.length!==void 0)return typeof x.length!="number"||at(x.length)?I(0):N(x);if(x.type==="Buffer"&&Array.isArray(x.data))return N(x.data)}function Z(x){if(x>=ue)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+ue.toString(16)+" bytes");return x|0}function H(x){return+x!=x&&(x=0),M.alloc(+x)}M.isBuffer=function(d){return d!=null&&d._isBuffer===!0&&d!==M.prototype},M.compare=function(d,f){if(ot(d,oe)&&(d=M.from(d,d.offset,d.byteLength)),ot(f,oe)&&(f=M.from(f,f.offset,f.byteLength)),!M.isBuffer(d)||!M.isBuffer(f))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(d===f)return 0;let V=d.length,fe=f.length;for(let Pe=0,Xe=Math.min(V,fe);Pe<Xe;++Pe)if(d[Pe]!==f[Pe]){V=d[Pe],fe=f[Pe];break}return V<fe?-1:fe<V?1:0},M.isEncoding=function(d){switch(String(d).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},M.concat=function(d,f){if(!Array.isArray(d))throw new TypeError('"list" argument must be an Array of Buffers');if(d.length===0)return M.alloc(0);let V;if(f===void 0)for(f=0,V=0;V<d.length;++V)f+=d[V].length;const fe=M.allocUnsafe(f);let Pe=0;for(V=0;V<d.length;++V){let Xe=d[V];if(ot(Xe,oe))Pe+Xe.length>fe.length?(M.isBuffer(Xe)||(Xe=M.from(Xe)),Xe.copy(fe,Pe)):oe.prototype.set.call(fe,Xe,Pe);else if(M.isBuffer(Xe))Xe.copy(fe,Pe);else throw new TypeError('"list" argument must be an Array of Buffers');Pe+=Xe.length}return fe};function O(x,d){if(M.isBuffer(x))return x.length;if(de.isView(x)||ot(x,de))return x.byteLength;if(typeof x!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof x);const f=x.length,V=arguments.length>2&&arguments[2]===!0;if(!V&&f===0)return 0;let fe=!1;for(;;)switch(d){case"ascii":case"latin1":case"binary":return f;case"utf8":case"utf-8":return E(x).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return f*2;case"hex":return f>>>1;case"base64":return ee(x).length;default:if(fe)return V?-1:E(x).length;d=(""+d).toLowerCase(),fe=!0}}M.byteLength=O;function G(x,d,f){let V=!1;if((d===void 0||d<0)&&(d=0),d>this.length||((f===void 0||f>this.length)&&(f=this.length),f<=0)||(f>>>=0,d>>>=0,f<=d))return"";for(x||(x="utf8");;)switch(x){case"hex":return gt(this,d,f);case"utf8":case"utf-8":return Te(this,d,f);case"ascii":return Ie(this,d,f);case"latin1":case"binary":return Ze(this,d,f);case"base64":return wt(this,d,f);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ce(this,d,f);default:if(V)throw new TypeError("Unknown encoding: "+x);x=(x+"").toLowerCase(),V=!0}}M.prototype._isBuffer=!0;function P(x,d,f){const V=x[d];x[d]=x[f],x[f]=V}M.prototype.swap16=function(){const d=this.length;if(d%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let f=0;f<d;f+=2)P(this,f,f+1);return this},M.prototype.swap32=function(){const d=this.length;if(d%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let f=0;f<d;f+=4)P(this,f,f+3),P(this,f+1,f+2);return this},M.prototype.swap64=function(){const d=this.length;if(d%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let f=0;f<d;f+=8)P(this,f,f+7),P(this,f+1,f+6),P(this,f+2,f+5),P(this,f+3,f+4);return this},M.prototype.toString=function(){const d=this.length;return d===0?"":arguments.length===0?Te(this,0,d):G.apply(this,arguments)},M.prototype.toLocaleString=M.prototype.toString,M.prototype.equals=function(d){if(!M.isBuffer(d))throw new TypeError("Argument must be a Buffer");return this===d?!0:M.compare(this,d)===0},M.prototype.inspect=function(){let d="";const f=De.INSPECT_MAX_BYTES;return d=this.toString("hex",0,f).replace(/(.{2})/g,"$1 ").trim(),this.length>f&&(d+=" ... "),"<Buffer "+d+">"},F&&(M.prototype[F]=M.prototype.inspect),M.prototype.compare=function(d,f,V,fe,Pe){if(ot(d,oe)&&(d=M.from(d,d.offset,d.byteLength)),!M.isBuffer(d))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof d);if(f===void 0&&(f=0),V===void 0&&(V=d?d.length:0),fe===void 0&&(fe=0),Pe===void 0&&(Pe=this.length),f<0||V>d.length||fe<0||Pe>this.length)throw new RangeError("out of range index");if(fe>=Pe&&f>=V)return 0;if(fe>=Pe)return-1;if(f>=V)return 1;if(f>>>=0,V>>>=0,fe>>>=0,Pe>>>=0,this===d)return 0;let Xe=Pe-fe,sr=V-f;const tt=Math.min(Xe,sr),U=this.slice(fe,Pe),ge=d.slice(f,V);for(let ke=0;ke<tt;++ke)if(U[ke]!==ge[ke]){Xe=U[ke],sr=ge[ke];break}return Xe<sr?-1:sr<Xe?1:0};function ye(x,d,f,V,fe){if(x.length===0)return-1;if(typeof f=="string"?(V=f,f=0):f>2147483647?f=2147483647:f<-2147483648&&(f=-2147483648),f=+f,at(f)&&(f=fe?0:x.length-1),f<0&&(f=x.length+f),f>=x.length){if(fe)return-1;f=x.length-1}else if(f<0)if(fe)f=0;else return-1;if(typeof d=="string"&&(d=M.from(d,V)),M.isBuffer(d))return d.length===0?-1:$e(x,d,f,V,fe);if(typeof d=="number")return d=d&255,typeof oe.prototype.indexOf=="function"?fe?oe.prototype.indexOf.call(x,d,f):oe.prototype.lastIndexOf.call(x,d,f):$e(x,[d],f,V,fe);throw new TypeError("val must be string, number or Buffer")}function $e(x,d,f,V,fe){let Pe=1,Xe=x.length,sr=d.length;if(V!==void 0&&(V=String(V).toLowerCase(),V==="ucs2"||V==="ucs-2"||V==="utf16le"||V==="utf-16le")){if(x.length<2||d.length<2)return-1;Pe=2,Xe/=2,sr/=2,f/=2}function tt(ge,ke){return Pe===1?ge[ke]:ge.readUInt16BE(ke*Pe)}let U;if(fe){let ge=-1;for(U=f;U<Xe;U++)if(tt(x,U)===tt(d,ge===-1?0:U-ge)){if(ge===-1&&(ge=U),U-ge+1===sr)return ge*Pe}else ge!==-1&&(U-=U-ge),ge=-1}else for(f+sr>Xe&&(f=Xe-sr),U=f;U>=0;U--){let ge=!0;for(let ke=0;ke<sr;ke++)if(tt(x,U+ke)!==tt(d,ke)){ge=!1;break}if(ge)return U}return-1}M.prototype.includes=function(d,f,V){return this.indexOf(d,f,V)!==-1},M.prototype.indexOf=function(d,f,V){return ye(this,d,f,V,!0)},M.prototype.lastIndexOf=function(d,f,V){return ye(this,d,f,V,!1)};function Fe(x,d,f,V){f=Number(f)||0;const fe=x.length-f;V?(V=Number(V),V>fe&&(V=fe)):V=fe;const Pe=d.length;V>Pe/2&&(V=Pe/2);let Xe;for(Xe=0;Xe<V;++Xe){const sr=parseInt(d.substr(Xe*2,2),16);if(at(sr))return Xe;x[f+Xe]=sr}return Xe}function Ve(x,d,f,V){return ve(E(d,x.length-f),x,f,V)}function Ne(x,d,f,V){return ve(Y(d),x,f,V)}function _t(x,d,f,V){return ve(ee(d),x,f,V)}function ct(x,d,f,V){return ve(A(d,x.length-f),x,f,V)}M.prototype.write=function(d,f,V,fe){if(f===void 0)fe="utf8",V=this.length,f=0;else if(V===void 0&&typeof f=="string")fe=f,V=this.length,f=0;else if(isFinite(f))f=f>>>0,isFinite(V)?(V=V>>>0,fe===void 0&&(fe="utf8")):(fe=V,V=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");const Pe=this.length-f;if((V===void 0||V>Pe)&&(V=Pe),d.length>0&&(V<0||f<0)||f>this.length)throw new RangeError("Attempt to write outside buffer bounds");fe||(fe="utf8");let Xe=!1;for(;;)switch(fe){case"hex":return Fe(this,d,f,V);case"utf8":case"utf-8":return Ve(this,d,f,V);case"ascii":case"latin1":case"binary":return Ne(this,d,f,V);case"base64":return _t(this,d,f,V);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ct(this,d,f,V);default:if(Xe)throw new TypeError("Unknown encoding: "+fe);fe=(""+fe).toLowerCase(),Xe=!0}},M.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function wt(x,d,f){return d===0&&f===x.length?ae.fromByteArray(x):ae.fromByteArray(x.slice(d,f))}function Te(x,d,f){f=Math.min(x.length,f);const V=[];let fe=d;for(;fe<f;){const Pe=x[fe];let Xe=null,sr=Pe>239?4:Pe>223?3:Pe>191?2:1;if(fe+sr<=f){let tt,U,ge,ke;switch(sr){case 1:Pe<128&&(Xe=Pe);break;case 2:tt=x[fe+1],(tt&192)===128&&(ke=(Pe&31)<<6|tt&63,ke>127&&(Xe=ke));break;case 3:tt=x[fe+1],U=x[fe+2],(tt&192)===128&&(U&192)===128&&(ke=(Pe&15)<<12|(tt&63)<<6|U&63,ke>2047&&(ke<55296||ke>57343)&&(Xe=ke));break;case 4:tt=x[fe+1],U=x[fe+2],ge=x[fe+3],(tt&192)===128&&(U&192)===128&&(ge&192)===128&&(ke=(Pe&15)<<18|(tt&63)<<12|(U&63)<<6|ge&63,ke>65535&&ke<1114112&&(Xe=ke))}}Xe===null?(Xe=65533,sr=1):Xe>65535&&(Xe-=65536,V.push(Xe>>>10&1023|55296),Xe=56320|Xe&1023),V.push(Xe),fe+=sr}return be(V)}const K=4096;function be(x){const d=x.length;if(d<=K)return String.fromCharCode.apply(String,x);let f="",V=0;for(;V<d;)f+=String.fromCharCode.apply(String,x.slice(V,V+=K));return f}function Ie(x,d,f){let V="";f=Math.min(x.length,f);for(let fe=d;fe<f;++fe)V+=String.fromCharCode(x[fe]&127);return V}function Ze(x,d,f){let V="";f=Math.min(x.length,f);for(let fe=d;fe<f;++fe)V+=String.fromCharCode(x[fe]);return V}function gt(x,d,f){const V=x.length;(!d||d<0)&&(d=0),(!f||f<0||f>V)&&(f=V);let fe="";for(let Pe=d;Pe<f;++Pe)fe+=Ut[x[Pe]];return fe}function ce(x,d,f){const V=x.slice(d,f);let fe="";for(let Pe=0;Pe<V.length-1;Pe+=2)fe+=String.fromCharCode(V[Pe]+V[Pe+1]*256);return fe}M.prototype.slice=function(d,f){const V=this.length;d=~~d,f=f===void 0?V:~~f,d<0?(d+=V,d<0&&(d=0)):d>V&&(d=V),f<0?(f+=V,f<0&&(f=0)):f>V&&(f=V),f<d&&(f=d);const fe=this.subarray(d,f);return Object.setPrototypeOf(fe,M.prototype),fe};function Ge(x,d,f){if(x%1!==0||x<0)throw new RangeError("offset is not uint");if(x+d>f)throw new RangeError("Trying to access beyond buffer length")}M.prototype.readUintLE=M.prototype.readUIntLE=function(d,f,V){d=d>>>0,f=f>>>0,V||Ge(d,f,this.length);let fe=this[d],Pe=1,Xe=0;for(;++Xe<f&&(Pe*=256);)fe+=this[d+Xe]*Pe;return fe},M.prototype.readUintBE=M.prototype.readUIntBE=function(d,f,V){d=d>>>0,f=f>>>0,V||Ge(d,f,this.length);let fe=this[d+--f],Pe=1;for(;f>0&&(Pe*=256);)fe+=this[d+--f]*Pe;return fe},M.prototype.readUint8=M.prototype.readUInt8=function(d,f){return d=d>>>0,f||Ge(d,1,this.length),this[d]},M.prototype.readUint16LE=M.prototype.readUInt16LE=function(d,f){return d=d>>>0,f||Ge(d,2,this.length),this[d]|this[d+1]<<8},M.prototype.readUint16BE=M.prototype.readUInt16BE=function(d,f){return d=d>>>0,f||Ge(d,2,this.length),this[d]<<8|this[d+1]},M.prototype.readUint32LE=M.prototype.readUInt32LE=function(d,f){return d=d>>>0,f||Ge(d,4,this.length),(this[d]|this[d+1]<<8|this[d+2]<<16)+this[d+3]*16777216},M.prototype.readUint32BE=M.prototype.readUInt32BE=function(d,f){return d=d>>>0,f||Ge(d,4,this.length),this[d]*16777216+(this[d+1]<<16|this[d+2]<<8|this[d+3])},M.prototype.readBigUInt64LE=Mt(function(d){d=d>>>0,ft(d,"offset");const f=this[d],V=this[d+7];(f===void 0||V===void 0)&&bt(d,this.length-8);const fe=f+this[++d]*2**8+this[++d]*2**16+this[++d]*2**24,Pe=this[++d]+this[++d]*2**8+this[++d]*2**16+V*2**24;return BigInt(fe)+(BigInt(Pe)<<BigInt(32))}),M.prototype.readBigUInt64BE=Mt(function(d){d=d>>>0,ft(d,"offset");const f=this[d],V=this[d+7];(f===void 0||V===void 0)&&bt(d,this.length-8);const fe=f*2**24+this[++d]*2**16+this[++d]*2**8+this[++d],Pe=this[++d]*2**24+this[++d]*2**16+this[++d]*2**8+V;return(BigInt(fe)<<BigInt(32))+BigInt(Pe)}),M.prototype.readIntLE=function(d,f,V){d=d>>>0,f=f>>>0,V||Ge(d,f,this.length);let fe=this[d],Pe=1,Xe=0;for(;++Xe<f&&(Pe*=256);)fe+=this[d+Xe]*Pe;return Pe*=128,fe>=Pe&&(fe-=Math.pow(2,8*f)),fe},M.prototype.readIntBE=function(d,f,V){d=d>>>0,f=f>>>0,V||Ge(d,f,this.length);let fe=f,Pe=1,Xe=this[d+--fe];for(;fe>0&&(Pe*=256);)Xe+=this[d+--fe]*Pe;return Pe*=128,Xe>=Pe&&(Xe-=Math.pow(2,8*f)),Xe},M.prototype.readInt8=function(d,f){return d=d>>>0,f||Ge(d,1,this.length),this[d]&128?(255-this[d]+1)*-1:this[d]},M.prototype.readInt16LE=function(d,f){d=d>>>0,f||Ge(d,2,this.length);const V=this[d]|this[d+1]<<8;return V&32768?V|4294901760:V},M.prototype.readInt16BE=function(d,f){d=d>>>0,f||Ge(d,2,this.length);const V=this[d+1]|this[d]<<8;return V&32768?V|4294901760:V},M.prototype.readInt32LE=function(d,f){return d=d>>>0,f||Ge(d,4,this.length),this[d]|this[d+1]<<8|this[d+2]<<16|this[d+3]<<24},M.prototype.readInt32BE=function(d,f){return d=d>>>0,f||Ge(d,4,this.length),this[d]<<24|this[d+1]<<16|this[d+2]<<8|this[d+3]},M.prototype.readBigInt64LE=Mt(function(d){d=d>>>0,ft(d,"offset");const f=this[d],V=this[d+7];(f===void 0||V===void 0)&&bt(d,this.length-8);const fe=this[d+4]+this[d+5]*2**8+this[d+6]*2**16+(V<<24);return(BigInt(fe)<<BigInt(32))+BigInt(f+this[++d]*2**8+this[++d]*2**16+this[++d]*2**24)}),M.prototype.readBigInt64BE=Mt(function(d){d=d>>>0,ft(d,"offset");const f=this[d],V=this[d+7];(f===void 0||V===void 0)&&bt(d,this.length-8);const fe=(f<<24)+this[++d]*2**16+this[++d]*2**8+this[++d];return(BigInt(fe)<<BigInt(32))+BigInt(this[++d]*2**24+this[++d]*2**16+this[++d]*2**8+V)}),M.prototype.readFloatLE=function(d,f){return d=d>>>0,f||Ge(d,4,this.length),z.read(this,d,!0,23,4)},M.prototype.readFloatBE=function(d,f){return d=d>>>0,f||Ge(d,4,this.length),z.read(this,d,!1,23,4)},M.prototype.readDoubleLE=function(d,f){return d=d>>>0,f||Ge(d,8,this.length),z.read(this,d,!0,52,8)},M.prototype.readDoubleBE=function(d,f){return d=d>>>0,f||Ge(d,8,this.length),z.read(this,d,!1,52,8)};function pt(x,d,f,V,fe,Pe){if(!M.isBuffer(x))throw new TypeError('"buffer" argument must be a Buffer instance');if(d>fe||d<Pe)throw new RangeError('"value" argument is out of bounds');if(f+V>x.length)throw new RangeError("Index out of range")}M.prototype.writeUintLE=M.prototype.writeUIntLE=function(d,f,V,fe){if(d=+d,f=f>>>0,V=V>>>0,!fe){const sr=Math.pow(2,8*V)-1;pt(this,d,f,V,sr,0)}let Pe=1,Xe=0;for(this[f]=d&255;++Xe<V&&(Pe*=256);)this[f+Xe]=d/Pe&255;return f+V},M.prototype.writeUintBE=M.prototype.writeUIntBE=function(d,f,V,fe){if(d=+d,f=f>>>0,V=V>>>0,!fe){const sr=Math.pow(2,8*V)-1;pt(this,d,f,V,sr,0)}let Pe=V-1,Xe=1;for(this[f+Pe]=d&255;--Pe>=0&&(Xe*=256);)this[f+Pe]=d/Xe&255;return f+V},M.prototype.writeUint8=M.prototype.writeUInt8=function(d,f,V){return d=+d,f=f>>>0,V||pt(this,d,f,1,255,0),this[f]=d&255,f+1},M.prototype.writeUint16LE=M.prototype.writeUInt16LE=function(d,f,V){return d=+d,f=f>>>0,V||pt(this,d,f,2,65535,0),this[f]=d&255,this[f+1]=d>>>8,f+2},M.prototype.writeUint16BE=M.prototype.writeUInt16BE=function(d,f,V){return d=+d,f=f>>>0,V||pt(this,d,f,2,65535,0),this[f]=d>>>8,this[f+1]=d&255,f+2},M.prototype.writeUint32LE=M.prototype.writeUInt32LE=function(d,f,V){return d=+d,f=f>>>0,V||pt(this,d,f,4,4294967295,0),this[f+3]=d>>>24,this[f+2]=d>>>16,this[f+1]=d>>>8,this[f]=d&255,f+4},M.prototype.writeUint32BE=M.prototype.writeUInt32BE=function(d,f,V){return d=+d,f=f>>>0,V||pt(this,d,f,4,4294967295,0),this[f]=d>>>24,this[f+1]=d>>>16,this[f+2]=d>>>8,this[f+3]=d&255,f+4};function qe(x,d,f,V,fe){Ke(d,V,fe,x,f,7);let Pe=Number(d&BigInt(4294967295));x[f++]=Pe,Pe=Pe>>8,x[f++]=Pe,Pe=Pe>>8,x[f++]=Pe,Pe=Pe>>8,x[f++]=Pe;let Xe=Number(d>>BigInt(32)&BigInt(4294967295));return x[f++]=Xe,Xe=Xe>>8,x[f++]=Xe,Xe=Xe>>8,x[f++]=Xe,Xe=Xe>>8,x[f++]=Xe,f}function yt(x,d,f,V,fe){Ke(d,V,fe,x,f,7);let Pe=Number(d&BigInt(4294967295));x[f+7]=Pe,Pe=Pe>>8,x[f+6]=Pe,Pe=Pe>>8,x[f+5]=Pe,Pe=Pe>>8,x[f+4]=Pe;let Xe=Number(d>>BigInt(32)&BigInt(4294967295));return x[f+3]=Xe,Xe=Xe>>8,x[f+2]=Xe,Xe=Xe>>8,x[f+1]=Xe,Xe=Xe>>8,x[f]=Xe,f+8}M.prototype.writeBigUInt64LE=Mt(function(d,f=0){return qe(this,d,f,BigInt(0),BigInt("0xffffffffffffffff"))}),M.prototype.writeBigUInt64BE=Mt(function(d,f=0){return yt(this,d,f,BigInt(0),BigInt("0xffffffffffffffff"))}),M.prototype.writeIntLE=function(d,f,V,fe){if(d=+d,f=f>>>0,!fe){const tt=Math.pow(2,8*V-1);pt(this,d,f,V,tt-1,-tt)}let Pe=0,Xe=1,sr=0;for(this[f]=d&255;++Pe<V&&(Xe*=256);)d<0&&sr===0&&this[f+Pe-1]!==0&&(sr=1),this[f+Pe]=(d/Xe>>0)-sr&255;return f+V},M.prototype.writeIntBE=function(d,f,V,fe){if(d=+d,f=f>>>0,!fe){const tt=Math.pow(2,8*V-1);pt(this,d,f,V,tt-1,-tt)}let Pe=V-1,Xe=1,sr=0;for(this[f+Pe]=d&255;--Pe>=0&&(Xe*=256);)d<0&&sr===0&&this[f+Pe+1]!==0&&(sr=1),this[f+Pe]=(d/Xe>>0)-sr&255;return f+V},M.prototype.writeInt8=function(d,f,V){return d=+d,f=f>>>0,V||pt(this,d,f,1,127,-128),d<0&&(d=255+d+1),this[f]=d&255,f+1},M.prototype.writeInt16LE=function(d,f,V){return d=+d,f=f>>>0,V||pt(this,d,f,2,32767,-32768),this[f]=d&255,this[f+1]=d>>>8,f+2},M.prototype.writeInt16BE=function(d,f,V){return d=+d,f=f>>>0,V||pt(this,d,f,2,32767,-32768),this[f]=d>>>8,this[f+1]=d&255,f+2},M.prototype.writeInt32LE=function(d,f,V){return d=+d,f=f>>>0,V||pt(this,d,f,4,2147483647,-2147483648),this[f]=d&255,this[f+1]=d>>>8,this[f+2]=d>>>16,this[f+3]=d>>>24,f+4},M.prototype.writeInt32BE=function(d,f,V){return d=+d,f=f>>>0,V||pt(this,d,f,4,2147483647,-2147483648),d<0&&(d=4294967295+d+1),this[f]=d>>>24,this[f+1]=d>>>16,this[f+2]=d>>>8,this[f+3]=d&255,f+4},M.prototype.writeBigInt64LE=Mt(function(d,f=0){return qe(this,d,f,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),M.prototype.writeBigInt64BE=Mt(function(d,f=0){return yt(this,d,f,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});function $t(x,d,f,V,fe,Pe){if(f+V>x.length)throw new RangeError("Index out of range");if(f<0)throw new RangeError("Index out of range")}function st(x,d,f,V,fe){return d=+d,f=f>>>0,fe||$t(x,d,f,4),z.write(x,d,f,V,23,4),f+4}M.prototype.writeFloatLE=function(d,f,V){return st(this,d,f,!0,V)},M.prototype.writeFloatBE=function(d,f,V){return st(this,d,f,!1,V)};function re(x,d,f,V,fe){return d=+d,f=f>>>0,fe||$t(x,d,f,8),z.write(x,d,f,V,52,8),f+8}M.prototype.writeDoubleLE=function(d,f,V){return re(this,d,f,!0,V)},M.prototype.writeDoubleBE=function(d,f,V){return re(this,d,f,!1,V)},M.prototype.copy=function(d,f,V,fe){if(!M.isBuffer(d))throw new TypeError("argument should be a Buffer");if(V||(V=0),!fe&&fe!==0&&(fe=this.length),f>=d.length&&(f=d.length),f||(f=0),fe>0&&fe<V&&(fe=V),fe===V||d.length===0||this.length===0)return 0;if(f<0)throw new RangeError("targetStart out of bounds");if(V<0||V>=this.length)throw new RangeError("Index out of range");if(fe<0)throw new RangeError("sourceEnd out of bounds");fe>this.length&&(fe=this.length),d.length-f<fe-V&&(fe=d.length-f+V);const Pe=fe-V;return this===d&&typeof oe.prototype.copyWithin=="function"?this.copyWithin(f,V,fe):oe.prototype.set.call(d,this.subarray(V,fe),f),Pe},M.prototype.fill=function(d,f,V,fe){if(typeof d=="string"){if(typeof f=="string"?(fe=f,f=0,V=this.length):typeof V=="string"&&(fe=V,V=this.length),fe!==void 0&&typeof fe!="string")throw new TypeError("encoding must be a string");if(typeof fe=="string"&&!M.isEncoding(fe))throw new TypeError("Unknown encoding: "+fe);if(d.length===1){const Xe=d.charCodeAt(0);(fe==="utf8"&&Xe<128||fe==="latin1")&&(d=Xe)}}else typeof d=="number"?d=d&255:typeof d=="boolean"&&(d=Number(d));if(f<0||this.length<f||this.length<V)throw new RangeError("Out of range index");if(V<=f)return this;f=f>>>0,V=V===void 0?this.length:V>>>0,d||(d=0);let Pe;if(typeof d=="number")for(Pe=f;Pe<V;++Pe)this[Pe]=d;else{const Xe=M.isBuffer(d)?d:M.from(d,fe),sr=Xe.length;if(sr===0)throw new TypeError('The value "'+d+'" is invalid for argument "value"');for(Pe=0;Pe<V-f;++Pe)this[Pe+f]=Xe[Pe%sr]}return this};const ze={};function Je(x,d,f){ze[x]=class extends f{constructor(){super(),Object.defineProperty(this,"message",{value:d.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${x}]`,this.stack,delete this.name}get code(){return x}set code(fe){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:fe,writable:!0})}toString(){return`${this.name} [${x}]: ${this.message}`}}}Je("ERR_BUFFER_OUT_OF_BOUNDS",function(x){return x?`${x} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),Je("ERR_INVALID_ARG_TYPE",function(x,d){return`The "${x}" argument must be of type number. Received type ${typeof d}`},TypeError),Je("ERR_OUT_OF_RANGE",function(x,d,f){let V=`The value of "${x}" is out of range.`,fe=f;return Number.isInteger(f)&&Math.abs(f)>2**32?fe=lt(String(f)):typeof f=="bigint"&&(fe=String(f),(f>BigInt(2)**BigInt(32)||f<-(BigInt(2)**BigInt(32)))&&(fe=lt(fe)),fe+="n"),V+=` It must be ${d}. Received ${fe}`,V},RangeError);function lt(x){let d="",f=x.length;const V=x[0]==="-"?1:0;for(;f>=V+4;f-=3)d=`_${x.slice(f-3,f)}${d}`;return`${x.slice(0,f)}${d}`}function Qe(x,d,f){ft(d,"offset"),(x[d]===void 0||x[d+f]===void 0)&&bt(d,x.length-(f+1))}function Ke(x,d,f,V,fe,Pe){if(x>f||x<d){const Xe=typeof d=="bigint"?"n":"";let sr;throw d===0||d===BigInt(0)?sr=`>= 0${Xe} and < 2${Xe} ** ${(Pe+1)*8}${Xe}`:sr=`>= -(2${Xe} ** ${(Pe+1)*8-1}${Xe}) and < 2 ** ${(Pe+1)*8-1}${Xe}`,new ze.ERR_OUT_OF_RANGE("value",sr,x)}Qe(V,fe,Pe)}function ft(x,d){if(typeof x!="number")throw new ze.ERR_INVALID_ARG_TYPE(d,"number",x)}function bt(x,d,f){throw Math.floor(x)!==x?(ft(x,f),new ze.ERR_OUT_OF_RANGE("offset","an integer",x)):d<0?new ze.ERR_BUFFER_OUT_OF_BOUNDS:new ze.ERR_OUT_OF_RANGE("offset",`>= 0 and <= ${d}`,x)}const Ft=/[^+/0-9A-Za-z-_]/g;function Pt(x){if(x=x.split("=")[0],x=x.trim().replace(Ft,""),x.length<2)return"";for(;x.length%4!==0;)x=x+"=";return x}function E(x,d){d=d||1/0;let f;const V=x.length;let fe=null;const Pe=[];for(let Xe=0;Xe<V;++Xe){if(f=x.charCodeAt(Xe),f>55295&&f<57344){if(!fe){if(f>56319){(d-=3)>-1&&Pe.push(239,191,189);continue}else if(Xe+1===V){(d-=3)>-1&&Pe.push(239,191,189);continue}fe=f;continue}if(f<56320){(d-=3)>-1&&Pe.push(239,191,189),fe=f;continue}f=(fe-55296<<10|f-56320)+65536}else fe&&(d-=3)>-1&&Pe.push(239,191,189);if(fe=null,f<128){if((d-=1)<0)break;Pe.push(f)}else if(f<2048){if((d-=2)<0)break;Pe.push(f>>6|192,f&63|128)}else if(f<65536){if((d-=3)<0)break;Pe.push(f>>12|224,f>>6&63|128,f&63|128)}else if(f<1114112){if((d-=4)<0)break;Pe.push(f>>18|240,f>>12&63|128,f>>6&63|128,f&63|128)}else throw new Error("Invalid code point")}return Pe}function Y(x){const d=[];for(let f=0;f<x.length;++f)d.push(x.charCodeAt(f)&255);return d}function A(x,d){let f,V,fe;const Pe=[];for(let Xe=0;Xe<x.length&&!((d-=2)<0);++Xe)f=x.charCodeAt(Xe),V=f>>8,fe=f%256,Pe.push(fe),Pe.push(V);return Pe}function ee(x){return ae.toByteArray(Pt(x))}function ve(x,d,f,V){let fe;for(fe=0;fe<V&&!(fe+f>=d.length||fe>=x.length);++fe)d[fe+f]=x[fe];return fe}function ot(x,d){return x instanceof d||x!=null&&x.constructor!=null&&x.constructor.name!=null&&x.constructor.name===d.name}function at(x){return x!==x}const Ut=function(){const x="0123456789abcdef",d=new Array(256);for(let f=0;f<16;++f){const V=f*16;for(let fe=0;fe<16;++fe)d[V+fe]=x[f]+x[fe]}return d}();function Mt(x){return typeof BigInt>"u"?kt:x}function kt(){throw new Error("BigInt not supported")}})(Op);const pm=Op.Buffer;var Mi={},Bp={"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm":(De,ae,z)=>{De.exports=z.p+"ort-wasm-simd-threaded.jsep.wasm"},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(De,ae,z)=>{z.r(ae),z.d(ae,{Environment:()=>Ke,Interpreter:()=>ft,Template:()=>Pt,parse:()=>Ie,tokenize:()=>R});var F=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),ue=Object.freeze({set:F.Set,for:F.For,in:F.In,is:F.Is,if:F.If,else:F.Else,endif:F.EndIf,elif:F.ElseIf,endfor:F.EndFor,and:F.And,or:F.Or,not:F.Not,"not in":F.NotIn,macro:F.Macro,endmacro:F.EndMacro,true:F.BooleanLiteral,false:F.BooleanLiteral,True:F.BooleanLiteral,False:F.BooleanLiteral}),oe=class{constructor(E,Y){this.value=E,this.type=Y}};function de(E){return/\w/.test(E)}function Ee(E){return/[0-9]/.test(E)}var j=[["{%",F.OpenStatement],["%}",F.CloseStatement],["{{",F.OpenExpression],["}}",F.CloseExpression],["(",F.OpenParen],[")",F.CloseParen],["{",F.OpenCurlyBracket],["}",F.CloseCurlyBracket],["[",F.OpenSquareBracket],["]",F.CloseSquareBracket],[",",F.Comma],[".",F.Dot],[":",F.Colon],["|",F.Pipe],["<=",F.ComparisonBinaryOperator],[">=",F.ComparisonBinaryOperator],["==",F.ComparisonBinaryOperator],["!=",F.ComparisonBinaryOperator],["<",F.ComparisonBinaryOperator],[">",F.ComparisonBinaryOperator],["+",F.AdditiveBinaryOperator],["-",F.AdditiveBinaryOperator],["*",F.MultiplicativeBinaryOperator],["/",F.MultiplicativeBinaryOperator],["%",F.MultiplicativeBinaryOperator],["=",F.Equals]],I=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function M(E,Y={}){return E.endsWith(`
`)&&(E=E.slice(0,-1)),E=E.replace(/{#.*?#}/gs,"{##}"),Y.lstrip_blocks&&(E=E.replace(/^[ \t]*({[#%])/gm,"$1")),Y.trim_blocks&&(E=E.replace(/([#%]})\n/g,"$1")),E.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function R(E,Y={}){var at,Ut,Mt;const A=[],ee=M(E,Y);let ve=0;const ot=kt=>{let x="";for(;kt(ee[ve]);){if(ee[ve]==="\\"){if(++ve,ve>=ee.length)throw new SyntaxError("Unexpected end of input");const d=ee[ve++],f=I.get(d);if(f===void 0)throw new SyntaxError(`Unexpected escaped character: ${d}`);x+=f;continue}if(x+=ee[ve++],ve>=ee.length)throw new SyntaxError("Unexpected end of input")}return x};e:for(;ve<ee.length;){const kt=(at=A.at(-1))==null?void 0:at.type;if(kt===void 0||kt===F.CloseStatement||kt===F.CloseExpression){let d="";for(;ve<ee.length&&!(ee[ve]==="{"&&(ee[ve+1]==="%"||ee[ve+1]==="{"));)d+=ee[ve++];if(d.length>0){A.push(new oe(d,F.Text));continue}}ot(d=>/\s/.test(d));const x=ee[ve];if(x==="-"||x==="+"){const d=(Ut=A.at(-1))==null?void 0:Ut.type;if(d===F.Text||d===void 0)throw new SyntaxError(`Unexpected character: ${x}`);switch(d){case F.Identifier:case F.NumericLiteral:case F.BooleanLiteral:case F.StringLiteral:case F.CloseParen:case F.CloseSquareBracket:break;default:{++ve;const f=ot(Ee);A.push(new oe(`${x}${f}`,f.length>0?F.NumericLiteral:F.UnaryOperator));continue}}}for(const[d,f]of j)if(ee.slice(ve,ve+d.length)===d){A.push(new oe(d,f)),ve+=d.length;continue e}if(x==="'"||x==='"'){++ve;const d=ot(f=>f!==x);A.push(new oe(d,F.StringLiteral)),++ve;continue}if(Ee(x)){const d=ot(Ee);A.push(new oe(d,F.NumericLiteral));continue}if(de(x)){const d=ot(de),f=Object.hasOwn(ue,d)?ue[d]:F.Identifier;f===F.In&&((Mt=A.at(-1))==null?void 0:Mt.type)===F.Not?(A.pop(),A.push(new oe("not in",F.NotIn))):A.push(new oe(d,f));continue}throw new SyntaxError(`Unexpected character: ${x}`)}return A}var Q=class{constructor(){Se(this,"type","Statement")}},ne=class extends Q{constructor(Y){super();Se(this,"type","Program");this.body=Y}},xe=class extends Q{constructor(Y,A,ee){super();Se(this,"type","If");this.test=Y,this.body=A,this.alternate=ee}},we=class extends Q{constructor(Y,A,ee,ve){super();Se(this,"type","For");this.loopvar=Y,this.iterable=A,this.body=ee,this.defaultBlock=ve}},N=class extends Q{constructor(Y,A){super();Se(this,"type","Set");this.assignee=Y,this.value=A}},ie=class extends Q{constructor(Y,A,ee){super();Se(this,"type","Macro");this.name=Y,this.args=A,this.body=ee}},Me=class extends Q{constructor(){super(...arguments);Se(this,"type","Expression")}},J=class extends Me{constructor(Y,A,ee){super();Se(this,"type","MemberExpression");this.object=Y,this.property=A,this.computed=ee}},Z=class extends Me{constructor(Y,A){super();Se(this,"type","CallExpression");this.callee=Y,this.args=A}},H=class extends Me{constructor(Y){super();Se(this,"type","Identifier");this.value=Y}},O=class extends Me{constructor(Y){super();Se(this,"type","Literal");this.value=Y}},G=class extends O{constructor(){super(...arguments);Se(this,"type","NumericLiteral")}},P=class extends O{constructor(){super(...arguments);Se(this,"type","StringLiteral")}},ye=class extends O{constructor(){super(...arguments);Se(this,"type","BooleanLiteral")}},$e=class extends O{constructor(){super(...arguments);Se(this,"type","ArrayLiteral")}},Fe=class extends O{constructor(){super(...arguments);Se(this,"type","TupleLiteral")}},Ve=class extends O{constructor(){super(...arguments);Se(this,"type","ObjectLiteral")}},Ne=class extends Me{constructor(Y,A,ee){super();Se(this,"type","BinaryExpression");this.operator=Y,this.left=A,this.right=ee}},_t=class extends Me{constructor(Y,A){super();Se(this,"type","FilterExpression");this.operand=Y,this.filter=A}},ct=class extends Me{constructor(Y,A){super();Se(this,"type","SelectExpression");this.iterable=Y,this.test=A}},wt=class extends Me{constructor(Y,A,ee){super();Se(this,"type","TestExpression");this.operand=Y,this.negate=A,this.test=ee}},Te=class extends Me{constructor(Y,A){super();Se(this,"type","UnaryExpression");this.operator=Y,this.argument=A}},K=class extends Me{constructor(Y=void 0,A=void 0,ee=void 0){super();Se(this,"type","SliceExpression");this.start=Y,this.stop=A,this.step=ee}},be=class extends Me{constructor(Y,A){super();Se(this,"type","KeywordArgumentExpression");this.key=Y,this.value=A}};function Ie(E){const Y=new ne([]);let A=0;function ee(je,Ue){const vt=E[A++];if(!vt||vt.type!==je)throw new Error(`Parser Error: ${Ue}. ${vt.type} !== ${je}.`);return vt}function ve(){switch(E[A].type){case F.Text:return Ut();case F.OpenStatement:return Mt();case F.OpenExpression:return kt();default:throw new SyntaxError(`Unexpected token type: ${E[A].type}`)}}function ot(...je){return A+je.length<=E.length&&je.some((Ue,vt)=>Ue!==E[A+vt].type)}function at(...je){return A+je.length<=E.length&&je.every((Ue,vt)=>Ue===E[A+vt].type)}function Ut(){return new P(ee(F.Text,"Expected text token").value)}function Mt(){ee(F.OpenStatement,"Expected opening statement token");let je;switch(E[A].type){case F.Set:++A,je=x(),ee(F.CloseStatement,"Expected closing statement token");break;case F.If:++A,je=d(),ee(F.OpenStatement,"Expected {% token"),ee(F.EndIf,"Expected endif token"),ee(F.CloseStatement,"Expected %} token");break;case F.Macro:++A,je=f(),ee(F.OpenStatement,"Expected {% token"),ee(F.EndMacro,"Expected endmacro token"),ee(F.CloseStatement,"Expected %} token");break;case F.For:++A,je=fe(),ee(F.OpenStatement,"Expected {% token"),ee(F.EndFor,"Expected endfor token"),ee(F.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${E[A].type}`)}return je}function kt(){ee(F.OpenExpression,"Expected opening expression token");const je=Pe();return ee(F.CloseExpression,"Expected closing expression token"),je}function x(){const je=Pe();if(at(F.Equals)){++A;const Ue=x();return new N(je,Ue)}return je}function d(){var Kt,dr,Er,Vr,br,Ir,vr,Cn;const je=Pe();ee(F.CloseStatement,"Expected closing statement token");const Ue=[],vt=[];for(;!(((Kt=E[A])==null?void 0:Kt.type)===F.OpenStatement&&(((dr=E[A+1])==null?void 0:dr.type)===F.ElseIf||((Er=E[A+1])==null?void 0:Er.type)===F.Else||((Vr=E[A+1])==null?void 0:Vr.type)===F.EndIf));)Ue.push(ve());if(((br=E[A])==null?void 0:br.type)===F.OpenStatement&&((Ir=E[A+1])==null?void 0:Ir.type)!==F.EndIf)if(++A,at(F.ElseIf))ee(F.ElseIf,"Expected elseif token"),vt.push(d());else for(ee(F.Else,"Expected else token"),ee(F.CloseStatement,"Expected closing statement token");!(((vr=E[A])==null?void 0:vr.type)===F.OpenStatement&&((Cn=E[A+1])==null?void 0:Cn.type)===F.EndIf);)vt.push(ve());return new xe(je,Ue,vt)}function f(){const je=Nt();if(je.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const Ue=ht();ee(F.CloseStatement,"Expected closing statement token");const vt=[];for(;ot(F.OpenStatement,F.EndMacro);)vt.push(ve());return new ie(je,Ue,vt)}function V(je=!1){const Ue=je?Nt:Pe,vt=[Ue()],Kt=at(F.Comma);for(;Kt&&(++A,vt.push(Ue()),!!at(F.Comma)););return Kt?new Fe(vt):vt[0]}function fe(){const je=V(!0);if(!(je instanceof H||je instanceof Fe))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${je.type} instead`);ee(F.In,"Expected `in` keyword following loop variable");const Ue=Pe();ee(F.CloseStatement,"Expected closing statement token");const vt=[];for(;ot(F.OpenStatement,F.EndFor)&&ot(F.OpenStatement,F.Else);)vt.push(ve());const Kt=[];if(at(F.OpenStatement,F.Else))for(++A,++A,ee(F.CloseStatement,"Expected closing statement token");ot(F.OpenStatement,F.EndFor);)Kt.push(ve());return new we(je,Ue,vt,Kt)}function Pe(){return Xe()}function Xe(){const je=sr();if(at(F.If)){++A;const Ue=sr();if(at(F.Else)){++A;const vt=sr();return new xe(Ue,[je],[vt])}else return new ct(je,Ue)}return je}function sr(){let je=tt();for(;at(F.Or);){const Ue=E[A];++A;const vt=tt();je=new Ne(Ue,je,vt)}return je}function tt(){let je=U();for(;at(F.And);){const Ue=E[A];++A;const vt=U();je=new Ne(Ue,je,vt)}return je}function U(){let je;for(;at(F.Not);){const Ue=E[A];++A;const vt=U();je=new Te(Ue,vt)}return je??ge()}function ge(){let je=ke();for(;at(F.ComparisonBinaryOperator)||at(F.In)||at(F.NotIn);){const Ue=E[A];++A;const vt=ke();je=new Ne(Ue,je,vt)}return je}function ke(){let je=Tt();for(;at(F.AdditiveBinaryOperator);){const Ue=E[A];++A;const vt=Tt();je=new Ne(Ue,je,vt)}return je}function Le(){const je=Ot();return at(F.OpenParen)?Ye(je):je}function Ye(je){let Ue=new Z(je,ht());return at(F.OpenParen)&&(Ue=Ye(Ue)),Ue}function ht(){ee(F.OpenParen,"Expected opening parenthesis for arguments list");const je=St();return ee(F.CloseParen,"Expected closing parenthesis for arguments list"),je}function St(){const je=[];for(;!at(F.CloseParen);){let Ue=Pe();if(at(F.Equals)){if(++A,!(Ue instanceof H))throw new SyntaxError("Expected identifier for keyword argument");const vt=Pe();Ue=new be(Ue,vt)}je.push(Ue),at(F.Comma)&&++A}return je}function Et(){const je=[];let Ue=!1;for(;!at(F.CloseSquareBracket);)at(F.Colon)?(je.push(void 0),++A,Ue=!0):(je.push(Pe()),at(F.Colon)&&(++A,Ue=!0));if(je.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(Ue){if(je.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new K(...je)}return je[0]}function Ot(){let je=Nt();for(;at(F.Dot)||at(F.OpenSquareBracket);){const Ue=E[A];++A;let vt;const Kt=Ue.type!==F.Dot;if(Kt)vt=Et(),ee(F.CloseSquareBracket,"Expected closing square bracket");else if(vt=Nt(),vt.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");je=new J(je,vt,Kt)}return je}function Tt(){let je=Vt();for(;at(F.MultiplicativeBinaryOperator);){const Ue=E[A];++A;const vt=Vt();je=new Ne(Ue,je,vt)}return je}function Vt(){let je=qt();for(;at(F.Is);){++A;const Ue=at(F.Not);Ue&&++A;let vt=Nt();if(vt instanceof ye&&(vt=new H(vt.value.toString())),!(vt instanceof H))throw new SyntaxError("Expected identifier for the test");je=new wt(je,Ue,vt)}return je}function qt(){let je=Le();for(;at(F.Pipe);){++A;let Ue=Nt();if(!(Ue instanceof H))throw new SyntaxError("Expected identifier for the filter");at(F.OpenParen)&&(Ue=Ye(Ue)),je=new _t(je,Ue)}return je}function Nt(){const je=E[A];switch(je.type){case F.NumericLiteral:return++A,new G(Number(je.value));case F.StringLiteral:return++A,new P(je.value);case F.BooleanLiteral:return++A,new ye(je.value.toLowerCase()==="true");case F.Identifier:return++A,new H(je.value);case F.OpenParen:{++A;const Ue=V();if(E[A].type!==F.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${E[A].type} instead`);return++A,Ue}case F.OpenSquareBracket:{++A;const Ue=[];for(;!at(F.CloseSquareBracket);)Ue.push(Pe()),at(F.Comma)&&++A;return++A,new $e(Ue)}case F.OpenCurlyBracket:{++A;const Ue=new Map;for(;!at(F.CloseCurlyBracket);){const vt=Pe();ee(F.Colon,"Expected colon between key and value in object literal");const Kt=Pe();Ue.set(vt,Kt),at(F.Comma)&&++A}return++A,new Ve(Ue)}default:throw new SyntaxError(`Unexpected token: ${je.type}`)}}for(;A<E.length;)Y.body.push(ve());return Y}function Ze(E,Y,A=1){Y===void 0&&(Y=E,E=0);const ee=[];for(let ve=E;ve<Y;ve+=A)ee.push(ve);return ee}function gt(E,Y,A,ee=1){const ve=Math.sign(ee);ve>=0?(Y=(Y??(Y=0))<0?Math.max(E.length+Y,0):Math.min(Y,E.length),A=(A??(A=E.length))<0?Math.max(E.length+A,0):Math.min(A,E.length)):(Y=(Y??(Y=E.length-1))<0?Math.max(E.length+Y,-1):Math.min(Y,E.length-1),A=(A??(A=-1))<-1?Math.max(E.length+A,-1):Math.min(A,E.length-1));const ot=[];for(let at=Y;ve*at<ve*A;at+=ee)ot.push(E[at]);return ot}function ce(E){return E.replace(/\b\w/g,Y=>Y.toUpperCase())}var Ge=class{constructor(E=void 0){Se(this,"type","RuntimeValue");Se(this,"value");Se(this,"builtins",new Map);this.value=E}__bool__(){return new yt(!!this.value)}},pt=class extends Ge{constructor(){super(...arguments);Se(this,"type","NumericValue")}},qe=class extends Ge{constructor(){super(...arguments);Se(this,"type","StringValue");Se(this,"builtins",new Map([["upper",new Je(()=>new qe(this.value.toUpperCase()))],["lower",new Je(()=>new qe(this.value.toLowerCase()))],["strip",new Je(()=>new qe(this.value.trim()))],["title",new Je(()=>new qe(ce(this.value)))],["length",new pt(this.value.length)]]))}},yt=class extends Ge{constructor(){super(...arguments);Se(this,"type","BooleanValue")}},$t=class extends Ge{constructor(){super(...arguments);Se(this,"type","ObjectValue");Se(this,"builtins",new Map([["get",new Je(([Y,A])=>{if(!(Y instanceof qe))throw new Error(`Object key must be a string: got ${Y.type}`);return this.value.get(Y.value)??A??new lt})],["items",new Je(()=>new re(Array.from(this.value.entries()).map(([Y,A])=>new re([new qe(Y),A]))))]]))}__bool__(){return new yt(this.value.size>0)}},st=class extends $t{constructor(){super(...arguments);Se(this,"type","KeywordArgumentsValue")}},re=class extends Ge{constructor(){super(...arguments);Se(this,"type","ArrayValue");Se(this,"builtins",new Map([["length",new pt(this.value.length)]]))}__bool__(){return new yt(this.value.length>0)}},ze=class extends re{constructor(){super(...arguments);Se(this,"type","TupleValue")}},Je=class extends Ge{constructor(){super(...arguments);Se(this,"type","FunctionValue")}},lt=class extends Ge{constructor(){super(...arguments);Se(this,"type","NullValue")}},Qe=class extends Ge{constructor(){super(...arguments);Se(this,"type","UndefinedValue")}},Ke=class{constructor(E){Se(this,"variables",new Map([["namespace",new Je(E=>{if(E.length===0)return new $t(new Map);if(E.length!==1||!(E[0]instanceof $t))throw new Error("`namespace` expects either zero arguments or a single object argument");return E[0]})]]));Se(this,"tests",new Map([["boolean",E=>E.type==="BooleanValue"],["callable",E=>E instanceof Je],["odd",E=>{if(E.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${E.type}`);return E.value%2!==0}],["even",E=>{if(E.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${E.type}`);return E.value%2===0}],["false",E=>E.type==="BooleanValue"&&!E.value],["true",E=>E.type==="BooleanValue"&&E.value],["string",E=>E.type==="StringValue"],["number",E=>E.type==="NumericValue"],["integer",E=>E.type==="NumericValue"&&Number.isInteger(E.value)],["iterable",E=>E instanceof re||E instanceof qe],["lower",E=>{const Y=E.value;return E.type==="StringValue"&&Y===Y.toLowerCase()}],["upper",E=>{const Y=E.value;return E.type==="StringValue"&&Y===Y.toUpperCase()}],["none",E=>E.type==="NullValue"],["defined",E=>E.type!=="UndefinedValue"],["undefined",E=>E.type==="UndefinedValue"],["equalto",(E,Y)=>E.value===Y.value],["eq",(E,Y)=>E.value===Y.value]]));this.parent=E}set(E,Y){return this.declareVariable(E,bt(Y))}declareVariable(E,Y){if(this.variables.has(E))throw new SyntaxError(`Variable already declared: ${E}`);return this.variables.set(E,Y),Y}setVariable(E,Y){return this.variables.set(E,Y),Y}resolve(E){if(this.variables.has(E))return this;if(this.parent)return this.parent.resolve(E);throw new Error(`Unknown variable: ${E}`)}lookupVariable(E){try{return this.resolve(E).variables.get(E)??new Qe}catch{return new Qe}}},ft=class{constructor(E){Se(this,"global");this.global=E??new Ke}run(E){return this.evaluate(E,this.global)}evaluateBinaryExpression(E,Y){const A=this.evaluate(E.left,Y);switch(E.operator.value){case"and":return A.__bool__().value?this.evaluate(E.right,Y):A;case"or":return A.__bool__().value?A:this.evaluate(E.right,Y)}const ee=this.evaluate(E.right,Y);switch(E.operator.value){case"==":return new yt(A.value==ee.value);case"!=":return new yt(A.value!=ee.value)}if(A instanceof Qe||ee instanceof Qe)throw new Error("Cannot perform operation on undefined values");if(A instanceof lt||ee instanceof lt)throw new Error("Cannot perform operation on null values");if(A instanceof pt&&ee instanceof pt)switch(E.operator.value){case"+":return new pt(A.value+ee.value);case"-":return new pt(A.value-ee.value);case"*":return new pt(A.value*ee.value);case"/":return new pt(A.value/ee.value);case"%":return new pt(A.value%ee.value);case"<":return new yt(A.value<ee.value);case">":return new yt(A.value>ee.value);case">=":return new yt(A.value>=ee.value);case"<=":return new yt(A.value<=ee.value)}else if(A instanceof re&&ee instanceof re)switch(E.operator.value){case"+":return new re(A.value.concat(ee.value))}else if(ee instanceof re){const ve=ee.value.find(ot=>ot.value===A.value)!==void 0;switch(E.operator.value){case"in":return new yt(ve);case"not in":return new yt(!ve)}}if(A instanceof qe||ee instanceof qe)switch(E.operator.value){case"+":return new qe(A.value.toString()+ee.value.toString())}if(A instanceof qe&&ee instanceof qe)switch(E.operator.value){case"in":return new yt(ee.value.includes(A.value));case"not in":return new yt(!ee.value.includes(A.value))}if(A instanceof qe&&ee instanceof $t)switch(E.operator.value){case"in":return new yt(ee.value.has(A.value));case"not in":return new yt(!ee.value.has(A.value))}throw new SyntaxError(`Unknown operator "${E.operator.value}" between ${A.type} and ${ee.type}`)}evaluateArguments(E,Y){const A=[],ee=new Map;for(const ve of E)if(ve.type==="KeywordArgumentExpression"){const ot=ve;ee.set(ot.key.value,this.evaluate(ot.value,Y))}else{if(ee.size>0)throw new Error("Positional arguments must come before keyword arguments");A.push(this.evaluate(ve,Y))}return[A,ee]}evaluateFilterExpression(E,Y){const A=this.evaluate(E.operand,Y);if(E.filter.type==="Identifier"){const ee=E.filter;if(ee.value==="tojson")return new qe(Ft(A));if(A instanceof re)switch(ee.value){case"list":return A;case"first":return A.value[0];case"last":return A.value[A.value.length-1];case"length":return new pt(A.value.length);case"reverse":return new re(A.value.reverse());case"sort":return new re(A.value.sort((ve,ot)=>{if(ve.type!==ot.type)throw new Error(`Cannot compare different types: ${ve.type} and ${ot.type}`);switch(ve.type){case"NumericValue":return ve.value-ot.value;case"StringValue":return ve.value.localeCompare(ot.value);default:throw new Error(`Cannot compare type: ${ve.type}`)}}));default:throw new Error(`Unknown ArrayValue filter: ${ee.value}`)}else if(A instanceof qe)switch(ee.value){case"length":return new pt(A.value.length);case"upper":return new qe(A.value.toUpperCase());case"lower":return new qe(A.value.toLowerCase());case"title":return new qe(ce(A.value));case"capitalize":return new qe(A.value.charAt(0).toUpperCase()+A.value.slice(1));case"trim":return new qe(A.value.trim());case"indent":return new qe(A.value.split(`
`).map((ve,ot)=>ot===0||ve.length===0?ve:"    "+ve).join(`
`));case"string":return A;default:throw new Error(`Unknown StringValue filter: ${ee.value}`)}else if(A instanceof pt)switch(ee.value){case"abs":return new pt(Math.abs(A.value));default:throw new Error(`Unknown NumericValue filter: ${ee.value}`)}else if(A instanceof $t)switch(ee.value){case"items":return new re(Array.from(A.value.entries()).map(([ve,ot])=>new re([new qe(ve),ot])));case"length":return new pt(A.value.size);default:throw new Error(`Unknown ObjectValue filter: ${ee.value}`)}throw new Error(`Cannot apply filter "${ee.value}" to type: ${A.type}`)}else if(E.filter.type==="CallExpression"){const ee=E.filter;if(ee.callee.type!=="Identifier")throw new Error(`Unknown filter: ${ee.callee.type}`);const ve=ee.callee.value;if(ve==="tojson"){const[,ot]=this.evaluateArguments(ee.args,Y),at=ot.get("indent")??new lt;if(!(at instanceof pt||at instanceof lt))throw new Error("If set, indent must be a number");return new qe(Ft(A,at.value))}if(A instanceof re){switch(ve){case"selectattr":{if(A.value.some(x=>!(x instanceof $t)))throw new Error("`selectattr` can only be applied to array of objects");if(ee.args.some(x=>x.type!=="StringLiteral"))throw new Error("arguments of `selectattr` must be strings");const[ot,at,Ut]=ee.args.map(x=>this.evaluate(x,Y));let Mt;if(at){const x=Y.tests.get(at.value);if(!x)throw new Error(`Unknown test: ${at.value}`);Mt=x}else Mt=(...x)=>x[0].__bool__().value;const kt=A.value.filter(x=>{const d=x.value.get(ot.value);return d?Mt(d,Ut):!1});return new re(kt)}case"map":{const[,ot]=this.evaluateArguments(ee.args,Y);if(ot.has("attribute")){const at=ot.get("attribute");if(!(at instanceof qe))throw new Error("attribute must be a string");const Ut=ot.get("default"),Mt=A.value.map(kt=>{if(!(kt instanceof $t))throw new Error("items in map must be an object");return kt.value.get(at.value)??Ut??new Qe});return new re(Mt)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${ve}`)}else if(A instanceof qe){switch(ve){case"indent":{const[ot,at]=this.evaluateArguments(ee.args,Y),Ut=ot.at(0)??at.get("width")??new pt(4);if(!(Ut instanceof pt))throw new Error("width must be a number");const Mt=ot.at(1)??at.get("first")??new yt(!1),kt=ot.at(2)??at.get("blank")??new yt(!1),x=A.value.split(`
`),d=" ".repeat(Ut.value),f=x.map((V,fe)=>!Mt.value&&fe===0||!kt.value&&V.length===0?V:d+V);return new qe(f.join(`
`))}}throw new Error(`Unknown StringValue filter: ${ve}`)}else throw new Error(`Cannot apply filter "${ve}" to type: ${A.type}`)}throw new Error(`Unknown filter: ${E.filter.type}`)}evaluateTestExpression(E,Y){const A=this.evaluate(E.operand,Y),ee=Y.tests.get(E.test.value);if(!ee)throw new Error(`Unknown test: ${E.test.value}`);const ve=ee(A);return new yt(E.negate?!ve:ve)}evaluateUnaryExpression(E,Y){const A=this.evaluate(E.argument,Y);switch(E.operator.value){case"not":return new yt(!A.value);default:throw new SyntaxError(`Unknown operator: ${E.operator.value}`)}}evalProgram(E,Y){return this.evaluateBlock(E.body,Y)}evaluateBlock(E,Y){let A="";for(const ee of E){const ve=this.evaluate(ee,Y);ve.type!=="NullValue"&&ve.type!=="UndefinedValue"&&(A+=ve.value)}return new qe(A)}evaluateIdentifier(E,Y){return Y.lookupVariable(E.value)}evaluateCallExpression(E,Y){const[A,ee]=this.evaluateArguments(E.args,Y);ee.size>0&&A.push(new st(ee));const ve=this.evaluate(E.callee,Y);if(ve.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${ve.type}`);return ve.value(A,Y)}evaluateSliceExpression(E,Y,A){if(!(E instanceof re||E instanceof qe))throw new Error("Slice object must be an array or string");const ee=this.evaluate(Y.start,A),ve=this.evaluate(Y.stop,A),ot=this.evaluate(Y.step,A);if(!(ee instanceof pt||ee instanceof Qe))throw new Error("Slice start must be numeric or undefined");if(!(ve instanceof pt||ve instanceof Qe))throw new Error("Slice stop must be numeric or undefined");if(!(ot instanceof pt||ot instanceof Qe))throw new Error("Slice step must be numeric or undefined");return E instanceof re?new re(gt(E.value,ee.value,ve.value,ot.value)):new qe(gt(Array.from(E.value),ee.value,ve.value,ot.value).join(""))}evaluateMemberExpression(E,Y){const A=this.evaluate(E.object,Y);let ee;if(E.computed){if(E.property.type==="SliceExpression")return this.evaluateSliceExpression(A,E.property,Y);ee=this.evaluate(E.property,Y)}else ee=new qe(E.property.value);let ve;if(A instanceof $t){if(!(ee instanceof qe))throw new Error(`Cannot access property with non-string: got ${ee.type}`);ve=A.value.get(ee.value)??A.builtins.get(ee.value)}else if(A instanceof re||A instanceof qe)if(ee instanceof pt)ve=A.value.at(ee.value),A instanceof qe&&(ve=new qe(A.value.at(ee.value)));else if(ee instanceof qe)ve=A.builtins.get(ee.value);else throw new Error(`Cannot access property with non-string/non-number: got ${ee.type}`);else{if(!(ee instanceof qe))throw new Error(`Cannot access property with non-string: got ${ee.type}`);ve=A.builtins.get(ee.value)}return ve instanceof Ge?ve:new Qe}evaluateSet(E,Y){const A=this.evaluate(E.value,Y);if(E.assignee.type==="Identifier"){const ee=E.assignee.value;Y.setVariable(ee,A)}else if(E.assignee.type==="MemberExpression"){const ee=E.assignee,ve=this.evaluate(ee.object,Y);if(!(ve instanceof $t))throw new Error("Cannot assign to member of non-object");if(ee.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");ve.value.set(ee.property.value,A)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(E.assignee)}`);return new lt}evaluateIf(E,Y){const A=this.evaluate(E.test,Y);return this.evaluateBlock(A.__bool__().value?E.body:E.alternate,Y)}evaluateFor(E,Y){const A=new Ke(Y);let ee,ve;if(E.iterable.type==="SelectExpression"){const kt=E.iterable;ve=this.evaluate(kt.iterable,A),ee=kt.test}else ve=this.evaluate(E.iterable,A);if(!(ve instanceof re))throw new Error(`Expected iterable type in for loop: got ${ve.type}`);const ot=[],at=[];for(let kt=0;kt<ve.value.length;++kt){const x=new Ke(A),d=ve.value[kt];let f;if(E.loopvar.type==="Identifier")f=V=>V.setVariable(E.loopvar.value,d);else if(E.loopvar.type==="TupleLiteral"){const V=E.loopvar;if(d.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${d.type}`);const fe=d;if(V.value.length!==fe.value.length)throw new Error(`Too ${V.value.length>fe.value.length?"few":"many"} items to unpack`);f=Pe=>{for(let Xe=0;Xe<V.value.length;++Xe){if(V.value[Xe].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${V.value[Xe].type}`);Pe.setVariable(V.value[Xe].value,fe.value[Xe])}}}else throw new Error(`Invalid loop variable(s): ${E.loopvar.type}`);ee&&(f(x),!this.evaluate(ee,x).__bool__().value)||(ot.push(d),at.push(f))}let Ut="",Mt=!0;for(let kt=0;kt<ot.length;++kt){const x=new Map([["index",new pt(kt+1)],["index0",new pt(kt)],["revindex",new pt(ot.length-kt)],["revindex0",new pt(ot.length-kt-1)],["first",new yt(kt===0)],["last",new yt(kt===ot.length-1)],["length",new pt(ot.length)],["previtem",kt>0?ot[kt-1]:new Qe],["nextitem",kt<ot.length-1?ot[kt+1]:new Qe]]);A.setVariable("loop",new $t(x)),at[kt](A);const d=this.evaluateBlock(E.body,A);Ut+=d.value,Mt=!1}if(Mt){const kt=this.evaluateBlock(E.defaultBlock,A);Ut+=kt.value}return new qe(Ut)}evaluateMacro(E,Y){return Y.setVariable(E.name.value,new Je((A,ee)=>{var at;const ve=new Ke(ee);A=A.slice();let ot;((at=A.at(-1))==null?void 0:at.type)==="KeywordArgumentsValue"&&(ot=A.pop());for(let Ut=0;Ut<E.args.length;++Ut){const Mt=E.args[Ut],kt=A[Ut];if(Mt.type==="Identifier"){const x=Mt;if(!kt)throw new Error(`Missing positional argument: ${x.value}`);ve.setVariable(x.value,kt)}else if(Mt.type==="KeywordArgumentExpression"){const x=Mt,d=kt??(ot==null?void 0:ot.value.get(x.key.value))??this.evaluate(x.value,ve);ve.setVariable(x.key.value,d)}else throw new Error(`Unknown argument type: ${Mt.type}`)}return this.evaluateBlock(E.body,ve)})),new lt}evaluate(E,Y){if(E===void 0)return new Qe;switch(E.type){case"Program":return this.evalProgram(E,Y);case"Set":return this.evaluateSet(E,Y);case"If":return this.evaluateIf(E,Y);case"For":return this.evaluateFor(E,Y);case"Macro":return this.evaluateMacro(E,Y);case"NumericLiteral":return new pt(Number(E.value));case"StringLiteral":return new qe(E.value);case"BooleanLiteral":return new yt(E.value);case"ArrayLiteral":return new re(E.value.map(A=>this.evaluate(A,Y)));case"TupleLiteral":return new ze(E.value.map(A=>this.evaluate(A,Y)));case"ObjectLiteral":{const A=new Map;for(const[ee,ve]of E.value){const ot=this.evaluate(ee,Y);if(!(ot instanceof qe))throw new Error(`Object keys must be strings: got ${ot.type}`);A.set(ot.value,this.evaluate(ve,Y))}return new $t(A)}case"Identifier":return this.evaluateIdentifier(E,Y);case"CallExpression":return this.evaluateCallExpression(E,Y);case"MemberExpression":return this.evaluateMemberExpression(E,Y);case"UnaryExpression":return this.evaluateUnaryExpression(E,Y);case"BinaryExpression":return this.evaluateBinaryExpression(E,Y);case"FilterExpression":return this.evaluateFilterExpression(E,Y);case"TestExpression":return this.evaluateTestExpression(E,Y);default:throw new SyntaxError(`Unknown node type: ${E.type}`)}}};function bt(E){switch(typeof E){case"number":return new pt(E);case"string":return new qe(E);case"boolean":return new yt(E);case"undefined":return new Qe;case"object":return E===null?new lt:Array.isArray(E)?new re(E.map(bt)):new $t(new Map(Object.entries(E).map(([Y,A])=>[Y,bt(A)])));case"function":return new Je((Y,A)=>{const ee=E(...Y.map(ve=>ve.value))??null;return bt(ee)});default:throw new Error(`Cannot convert to runtime value: ${E}`)}}function Ft(E,Y,A){const ee=A??0;switch(E.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(E.value);case"ArrayValue":case"ObjectValue":{const ve=Y?" ".repeat(Y):"",ot=`
`+ve.repeat(ee),at=ot+ve;if(E.type==="ArrayValue"){const Ut=E.value.map(Mt=>Ft(Mt,Y,ee+1));return Y?`[${at}${Ut.join(`,${at}`)}${ot}]`:`[${Ut.join(", ")}]`}else{const Ut=Array.from(E.value.entries()).map(([Mt,kt])=>{const x=`"${Mt}": ${Ft(kt,Y,ee+1)}`;return Y?`${at}${x}`:x});return Y?`{${Ut.join(",")}${ot}}`:`{${Ut.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${E.type}`)}}var Pt=class{constructor(E){Se(this,"parsed");const Y=R(E,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=Ie(Y)}render(E){const Y=new Ke;Y.set("false",!1),Y.set("true",!0),Y.set("raise_exception",ve=>{throw new Error(ve)}),Y.set("range",Ze);for(const[ve,ot]of Object.entries(E))Y.set(ve,ot);return new ft(Y).run(this.parsed).value}}},"./node_modules/onnxruntime-common/dist/esm/backend-impl.js":(De,ae,z)=>{z.r(ae),z.d(ae,{registerBackend:()=>oe,resolveBackendAndExecutionProviders:()=>Ee});const F=new Map,ue=[],oe=(j,I,M)=>{if(I&&typeof I.init=="function"&&typeof I.createInferenceSessionHandler=="function"){const R=F.get(j);if(R===void 0)F.set(j,{backend:I,priority:M});else{if(R.priority>M)return;if(R.priority===M&&R.backend!==I)throw new Error(`cannot register backend "${j}" using priority ${M}`)}if(M>=0){const Q=ue.indexOf(j);Q!==-1&&ue.splice(Q,1);for(let ne=0;ne<ue.length;ne++)if(F.get(ue[ne]).priority<=M){ue.splice(ne,0,j);return}ue.push(j)}return}throw new TypeError("not a valid backend")},de=async j=>{const I=F.get(j);if(!I)return"backend not found.";if(I.initialized)return I.backend;if(I.aborted)return I.error;{const M=!!I.initPromise;try{return M||(I.initPromise=I.backend.init(j)),await I.initPromise,I.initialized=!0,I.backend}catch(R){return M||(I.error=`${R}`,I.aborted=!0),I.error}finally{delete I.initPromise}}},Ee=async j=>{const I=j.executionProviders||[],M=I.map(N=>typeof N=="string"?N:N.name),R=M.length===0?ue:M;let Q;const ne=[],xe=new Set;for(const N of R){const ie=await de(N);typeof ie=="string"?ne.push({name:N,err:ie}):(Q||(Q=ie),Q===ie&&xe.add(N))}if(!Q)throw new Error(`no available backend found. ERR: ${ne.map(N=>`[${N.name}] ${N.err}`).join(", ")}`);for(const{name:N,err:ie}of ne)M.includes(N)&&console.warn(`removing requested execution provider "${N}" from session options because it is not available: ${ie}`);const we=I.filter(N=>xe.has(typeof N=="string"?N:N.name));return[Q,new Proxy(j,{get:(N,ie)=>ie==="executionProviders"?we:Reflect.get(N,ie)})]}},"./node_modules/onnxruntime-common/dist/esm/backend.js":(De,ae,z)=>{z.r(ae),z.d(ae,{registerBackend:()=>F.registerBackend});var F=z("./node_modules/onnxruntime-common/dist/esm/backend-impl.js")},"./node_modules/onnxruntime-common/dist/esm/env-impl.js":(De,ae,z)=>{z.r(ae),z.d(ae,{env:()=>oe});var F=z("./node_modules/onnxruntime-common/dist/esm/version.js");let ue="warning";const oe={wasm:{},webgl:{},webgpu:{},versions:{common:F.version},set logLevel(de){if(de!==void 0){if(typeof de!="string"||["verbose","info","warning","error","fatal"].indexOf(de)===-1)throw new Error(`Unsupported logging level: ${de}`);ue=de}},get logLevel(){return ue}};Object.defineProperty(oe,"logLevel",{enumerable:!0})},"./node_modules/onnxruntime-common/dist/esm/env.js":(De,ae,z)=>{z.r(ae),z.d(ae,{env:()=>ue});var F=z("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const ue=F.env},"./node_modules/onnxruntime-common/dist/esm/index.js":(De,ae,z)=>{z.r(ae),z.d(ae,{InferenceSession:()=>oe.InferenceSession,TRACE:()=>Ee.TRACE,TRACE_FUNC_BEGIN:()=>Ee.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>Ee.TRACE_FUNC_END,Tensor:()=>de.Tensor,TrainingSession:()=>j.TrainingSession,env:()=>ue.env,registerBackend:()=>F.registerBackend});var F=z("./node_modules/onnxruntime-common/dist/esm/backend.js"),ue=z("./node_modules/onnxruntime-common/dist/esm/env.js"),oe=z("./node_modules/onnxruntime-common/dist/esm/inference-session.js"),de=z("./node_modules/onnxruntime-common/dist/esm/tensor.js");z("./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js"),z("./node_modules/onnxruntime-common/dist/esm/tensor-factory.js");var Ee=z("./node_modules/onnxruntime-common/dist/esm/trace.js");z("./node_modules/onnxruntime-common/dist/esm/onnx-model.js"),z("./node_modules/onnxruntime-common/dist/esm/onnx-value.js");var j=z("./node_modules/onnxruntime-common/dist/esm/training-session.js")},"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js":(De,ae,z)=>{z.r(ae),z.d(ae,{InferenceSession:()=>de});var F=z("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),ue=z("./node_modules/onnxruntime-common/dist/esm/tensor.js"),oe=z("./node_modules/onnxruntime-common/dist/esm/trace.js");class de{constructor(j){this.handler=j}async run(j,I,M){(0,oe.TRACE_FUNC_BEGIN)();const R={};let Q={};if(typeof j!="object"||j===null||j instanceof ue.Tensor||Array.isArray(j))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let ne=!0;if(typeof I=="object"){if(I===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(I instanceof ue.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(I)){if(I.length===0)throw new TypeError("'fetches' cannot be an empty array.");ne=!1;for(const N of I){if(typeof N!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(N)===-1)throw new RangeError(`'fetches' contains invalid output name: ${N}.`);R[N]=null}if(typeof M=="object"&&M!==null)Q=M;else if(typeof M<"u")throw new TypeError("'options' must be an object.")}else{let N=!1;const ie=Object.getOwnPropertyNames(I);for(const Me of this.outputNames)if(ie.indexOf(Me)!==-1){const J=I[Me];(J===null||J instanceof ue.Tensor)&&(N=!0,ne=!1,R[Me]=J)}if(N){if(typeof M=="object"&&M!==null)Q=M;else if(typeof M<"u")throw new TypeError("'options' must be an object.")}else Q=I}}else if(typeof I<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const N of this.inputNames)if(typeof j[N]>"u")throw new Error(`input '${N}' is missing in 'feeds'.`);if(ne)for(const N of this.outputNames)R[N]=null;const xe=await this.handler.run(j,R,Q),we={};for(const N in xe)if(Object.hasOwnProperty.call(xe,N)){const ie=xe[N];ie instanceof ue.Tensor?we[N]=ie:we[N]=new ue.Tensor(ie.type,ie.data,ie.dims)}return(0,oe.TRACE_FUNC_END)(),we}async release(){return this.handler.dispose()}static async create(j,I,M,R){(0,oe.TRACE_FUNC_BEGIN)();let Q,ne={};if(typeof j=="string"){if(Q=j,typeof I=="object"&&I!==null)ne=I;else if(typeof I<"u")throw new TypeError("'options' must be an object.")}else if(j instanceof Uint8Array){if(Q=j,typeof I=="object"&&I!==null)ne=I;else if(typeof I<"u")throw new TypeError("'options' must be an object.")}else if(j instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&j instanceof SharedArrayBuffer){const ie=j;let Me=0,J=j.byteLength;if(typeof I=="object"&&I!==null)ne=I;else if(typeof I=="number"){if(Me=I,!Number.isSafeInteger(Me))throw new RangeError("'byteOffset' must be an integer.");if(Me<0||Me>=ie.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${ie.byteLength}).`);if(J=j.byteLength-Me,typeof M=="number"){if(J=M,!Number.isSafeInteger(J))throw new RangeError("'byteLength' must be an integer.");if(J<=0||Me+J>ie.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${ie.byteLength-Me}].`);if(typeof R=="object"&&R!==null)ne=R;else if(typeof R<"u")throw new TypeError("'options' must be an object.")}else if(typeof M<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof I<"u")throw new TypeError("'options' must be an object.");Q=new Uint8Array(ie,Me,J)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[xe,we]=await(0,F.resolveBackendAndExecutionProviders)(ne),N=await xe.createInferenceSessionHandler(Q,we);return(0,oe.TRACE_FUNC_END)(),new de(N)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},"./node_modules/onnxruntime-common/dist/esm/inference-session.js":(De,ae,z)=>{z.r(ae),z.d(ae,{InferenceSession:()=>ue});var F=z("./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js");const ue=F.InferenceSession},"./node_modules/onnxruntime-common/dist/esm/onnx-model.js":(De,ae,z)=>{z.r(ae)},"./node_modules/onnxruntime-common/dist/esm/onnx-value.js":(De,ae,z)=>{z.r(ae)},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js":(De,ae,z)=>{z.r(ae),z.d(ae,{tensorToDataURL:()=>F,tensorToImageData:()=>ue});const F=(oe,de)=>{const Ee=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);Ee.width=oe.dims[3],Ee.height=oe.dims[2];const j=Ee.getContext("2d");if(j!=null){let I,M;(de==null?void 0:de.tensorLayout)!==void 0&&de.tensorLayout==="NHWC"?(I=oe.dims[2],M=oe.dims[3]):(I=oe.dims[3],M=oe.dims[2]);const R=(de==null?void 0:de.format)!==void 0?de.format:"RGB",Q=de==null?void 0:de.norm;let ne,xe;Q===void 0||Q.mean===void 0?ne=[255,255,255,255]:typeof Q.mean=="number"?ne=[Q.mean,Q.mean,Q.mean,Q.mean]:(ne=[Q.mean[0],Q.mean[1],Q.mean[2],0],Q.mean[3]!==void 0&&(ne[3]=Q.mean[3])),Q===void 0||Q.bias===void 0?xe=[0,0,0,0]:typeof Q.bias=="number"?xe=[Q.bias,Q.bias,Q.bias,Q.bias]:(xe=[Q.bias[0],Q.bias[1],Q.bias[2],0],Q.bias[3]!==void 0&&(xe[3]=Q.bias[3]));const we=M*I;let N=0,ie=we,Me=we*2,J=-1;R==="RGBA"?(N=0,ie=we,Me=we*2,J=we*3):R==="RGB"?(N=0,ie=we,Me=we*2):R==="RBG"&&(N=0,Me=we,ie=we*2);for(let Z=0;Z<M;Z++)for(let H=0;H<I;H++){const O=(oe.data[N++]-xe[0])*ne[0],G=(oe.data[ie++]-xe[1])*ne[1],P=(oe.data[Me++]-xe[2])*ne[2],ye=J===-1?255:(oe.data[J++]-xe[3])*ne[3];j.fillStyle="rgba("+O+","+G+","+P+","+ye+")",j.fillRect(H,Z,1,1)}if("toDataURL"in Ee)return Ee.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},ue=(oe,de)=>{const Ee=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let j;if(Ee!=null){let I,M,R;(de==null?void 0:de.tensorLayout)!==void 0&&de.tensorLayout==="NHWC"?(I=oe.dims[2],M=oe.dims[1],R=oe.dims[3]):(I=oe.dims[3],M=oe.dims[2],R=oe.dims[1]);const Q=de!==void 0&&de.format!==void 0?de.format:"RGB",ne=de==null?void 0:de.norm;let xe,we;ne===void 0||ne.mean===void 0?xe=[255,255,255,255]:typeof ne.mean=="number"?xe=[ne.mean,ne.mean,ne.mean,ne.mean]:(xe=[ne.mean[0],ne.mean[1],ne.mean[2],255],ne.mean[3]!==void 0&&(xe[3]=ne.mean[3])),ne===void 0||ne.bias===void 0?we=[0,0,0,0]:typeof ne.bias=="number"?we=[ne.bias,ne.bias,ne.bias,ne.bias]:(we=[ne.bias[0],ne.bias[1],ne.bias[2],0],ne.bias[3]!==void 0&&(we[3]=ne.bias[3]));const N=M*I;if(de!==void 0&&(de.format!==void 0&&R===4&&de.format!=="RGBA"||R===3&&de.format!=="RGB"&&de.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const ie=4;let Me=0,J=1,Z=2,H=3,O=0,G=N,P=N*2,ye=-1;Q==="RGBA"?(O=0,G=N,P=N*2,ye=N*3):Q==="RGB"?(O=0,G=N,P=N*2):Q==="RBG"&&(O=0,P=N,G=N*2),j=Ee.createImageData(I,M);for(let $e=0;$e<M*I;Me+=ie,J+=ie,Z+=ie,H+=ie,$e++)j.data[Me]=(oe.data[O++]-we[0])*xe[0],j.data[J]=(oe.data[G++]-we[1])*xe[1],j.data[Z]=(oe.data[P++]-we[2])*xe[2],j.data[H]=ye===-1?255:(oe.data[ye++]-we[3])*xe[3]}else throw new Error("Can not access image data");return j}},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js":(De,ae,z)=>{z.r(ae)},"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js":(De,ae,z)=>{z.r(ae),z.d(ae,{bufferToTensor:()=>ue,tensorFromGpuBuffer:()=>Ee,tensorFromImage:()=>oe,tensorFromPinnedBuffer:()=>j,tensorFromTexture:()=>de});var F=z("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const ue=(I,M)=>{if(I===void 0)throw new Error("Image buffer must be defined");if(M.height===void 0||M.width===void 0)throw new Error("Image height and width must be defined");if(M.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:R,width:Q}=M,ne=M.norm??{mean:255,bias:0};let xe,we;typeof ne.mean=="number"?xe=[ne.mean,ne.mean,ne.mean,ne.mean]:xe=[ne.mean[0],ne.mean[1],ne.mean[2],ne.mean[3]??255],typeof ne.bias=="number"?we=[ne.bias,ne.bias,ne.bias,ne.bias]:we=[ne.bias[0],ne.bias[1],ne.bias[2],ne.bias[3]??0];const N=M.format!==void 0?M.format:"RGBA",ie=M.tensorFormat!==void 0&&M.tensorFormat!==void 0?M.tensorFormat:"RGB",Me=R*Q,J=ie==="RGBA"?new Float32Array(Me*4):new Float32Array(Me*3);let Z=4,H=0,O=1,G=2,P=3,ye=0,$e=Me,Fe=Me*2,Ve=-1;N==="RGB"&&(Z=3,H=0,O=1,G=2,P=-1),ie==="RGBA"?Ve=Me*3:ie==="RBG"?(ye=0,Fe=Me,$e=Me*2):ie==="BGR"&&(Fe=0,$e=Me,ye=Me*2);for(let _t=0;_t<Me;_t++,H+=Z,G+=Z,O+=Z,P+=Z)J[ye++]=(I[H]+we[0])/xe[0],J[$e++]=(I[O]+we[1])/xe[1],J[Fe++]=(I[G]+we[2])/xe[2],Ve!==-1&&P!==-1&&(J[Ve++]=(I[P]+we[3])/xe[3]);return ie==="RGBA"?new F.Tensor("float32",J,[1,4,R,Q]):new F.Tensor("float32",J,[1,3,R,Q])},oe=async(I,M)=>{const R=typeof HTMLImageElement<"u"&&I instanceof HTMLImageElement,Q=typeof ImageData<"u"&&I instanceof ImageData,ne=typeof ImageBitmap<"u"&&I instanceof ImageBitmap,xe=typeof I=="string";let we,N=M??{};const ie=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},Me=J=>J instanceof HTMLCanvasElement||J instanceof OffscreenCanvas?J.getContext("2d"):null;if(R){const J=ie();J.width=I.width,J.height=I.height;const Z=Me(J);if(Z!=null){let H=I.height,O=I.width;if(M!==void 0&&M.resizedHeight!==void 0&&M.resizedWidth!==void 0&&(H=M.resizedHeight,O=M.resizedWidth),M!==void 0){if(N=M,M.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");N.tensorFormat="RGBA",N.height=H,N.width=O}else N.tensorFormat="RGBA",N.height=H,N.width=O;Z.drawImage(I,0,0),we=Z.getImageData(0,0,O,H).data}else throw new Error("Can not access image data")}else if(Q){let J,Z;if(M!==void 0&&M.resizedWidth!==void 0&&M.resizedHeight!==void 0?(J=M.resizedHeight,Z=M.resizedWidth):(J=I.height,Z=I.width),M!==void 0&&(N=M),N.format="RGBA",N.height=J,N.width=Z,M!==void 0){const H=ie();H.width=Z,H.height=J;const O=Me(H);if(O!=null)O.putImageData(I,0,0),we=O.getImageData(0,0,Z,J).data;else throw new Error("Can not access image data")}else we=I.data}else if(ne){if(M===void 0)throw new Error("Please provide image config with format for Imagebitmap");const J=ie();J.width=I.width,J.height=I.height;const Z=Me(J);if(Z!=null){const H=I.height,O=I.width;return Z.drawImage(I,0,0,O,H),we=Z.getImageData(0,0,O,H).data,N.height=H,N.width=O,ue(we,N)}else throw new Error("Can not access image data")}else{if(xe)return new Promise((J,Z)=>{const H=ie(),O=Me(H);if(!I||!O)return Z();const G=new Image;G.crossOrigin="Anonymous",G.src=I,G.onload=()=>{H.width=G.width,H.height=G.height,O.drawImage(G,0,0,H.width,H.height);const P=O.getImageData(0,0,H.width,H.height);N.height=H.height,N.width=H.width,J(ue(P.data,N))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(we!==void 0)return ue(we,N);throw new Error("Input data provided is not supported - aborted tensor creation")},de=(I,M)=>{const{width:R,height:Q,download:ne,dispose:xe}=M,we=[1,Q,R,4];return new F.Tensor({location:"texture",type:"float32",texture:I,dims:we,download:ne,dispose:xe})},Ee=(I,M)=>{const{dataType:R,dims:Q,download:ne,dispose:xe}=M;return new F.Tensor({location:"gpu-buffer",type:R??"float32",gpuBuffer:I,dims:Q,download:ne,dispose:xe})},j=(I,M,R)=>new F.Tensor({location:"cpu-pinned",type:I,data:M,dims:R??[M.length]})},"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js":(De,ae,z)=>{z.r(ae)},"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js":(De,ae,z)=>{z.r(ae),z.d(ae,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>ue,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>F,checkTypedArray:()=>de});const F=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),ue=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let oe=!1;const de=()=>{if(!oe){oe=!0;const Ee=typeof BigInt64Array<"u"&&BigInt64Array.from,j=typeof BigUint64Array<"u"&&BigUint64Array.from,I=typeof Float16Array<"u"&&Float16Array.from;Ee&&(F.set("int64",BigInt64Array),ue.set(BigInt64Array,"int64")),j&&(F.set("uint64",BigUint64Array),ue.set(BigUint64Array,"uint64")),I?(F.set("float16",Float16Array),ue.set(Float16Array,"float16")):F.set("float16",Uint16Array)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js":(De,ae,z)=>{z.r(ae),z.d(ae,{Tensor:()=>Ee});var F=z("./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js"),ue=z("./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js"),oe=z("./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"),de=z("./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js");class Ee{constructor(I,M,R){(0,oe.checkTypedArray)();let Q,ne;if(typeof I=="object"&&"location"in I)switch(this.dataLocation=I.location,Q=I.type,ne=I.dims,I.location){case"cpu-pinned":{const we=oe.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(Q);if(!we)throw new TypeError(`unsupported type "${Q}" to create tensor from pinned buffer`);if(!(I.data instanceof we))throw new TypeError(`buffer should be of type ${we.name}`);this.cpuData=I.data;break}case"texture":{if(Q!=="float32")throw new TypeError(`unsupported type "${Q}" to create tensor from texture`);this.gpuTextureData=I.texture,this.downloader=I.download,this.disposer=I.dispose;break}case"gpu-buffer":{if(Q!=="float32"&&Q!=="float16"&&Q!=="int32"&&Q!=="int64"&&Q!=="uint32"&&Q!=="uint8"&&Q!=="bool")throw new TypeError(`unsupported type "${Q}" to create tensor from gpu buffer`);this.gpuBufferData=I.gpuBuffer,this.downloader=I.download,this.disposer=I.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let we,N;if(typeof I=="string")if(Q=I,N=R,I==="string"){if(!Array.isArray(M))throw new TypeError("A string tensor's data must be a string array.");we=M}else{const ie=oe.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(I);if(ie===void 0)throw new TypeError(`Unsupported tensor type: ${I}.`);if(Array.isArray(M)){if(I==="float16"&&ie===Uint16Array)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");I==="uint64"||I==="int64"?we=ie.from(M,BigInt):we=ie.from(M)}else if(M instanceof ie)we=M;else throw new TypeError(`A ${Q} tensor's data must be type of ${ie}`)}else if(N=M,Array.isArray(I)){if(I.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const ie=typeof I[0];if(ie==="string")Q="string",we=I;else if(ie==="boolean")Q="bool",we=Uint8Array.from(I);else throw new TypeError(`Invalid element type of data array: ${ie}.`)}else{const ie=oe.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(I.constructor);if(ie===void 0)throw new TypeError(`Unsupported type for tensor data: ${I.constructor}.`);Q=ie,we=I}if(N===void 0)N=[we.length];else if(!Array.isArray(N))throw new TypeError("A tensor's dims must be a number array");ne=N,this.cpuData=we,this.dataLocation="cpu"}const xe=(0,de.calculateSize)(ne);if(this.cpuData&&xe!==this.cpuData.length)throw new Error(`Tensor's size(${xe}) does not match data length(${this.cpuData.length}).`);this.type=Q,this.dims=ne,this.size=xe}static async fromImage(I,M){return(0,ue.tensorFromImage)(I,M)}static fromTexture(I,M){return(0,ue.tensorFromTexture)(I,M)}static fromGpuBuffer(I,M){return(0,ue.tensorFromGpuBuffer)(I,M)}static fromPinnedBuffer(I,M,R){return(0,ue.tensorFromPinnedBuffer)(I,M,R)}toDataURL(I){return(0,F.tensorToDataURL)(this,I)}toImageData(I){return(0,F.tensorToImageData)(this,I)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(I){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const M=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=M,I&&this.disposer&&(this.disposer(),this.disposer=void 0),M}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(I){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return(0,de.tensorReshape)(this,I)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js":(De,ae,z)=>{z.r(ae),z.d(ae,{calculateSize:()=>ue,tensorReshape:()=>oe});var F=z("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const ue=de=>{let Ee=1;for(let j=0;j<de.length;j++){const I=de[j];if(typeof I!="number"||!Number.isSafeInteger(I))throw new TypeError(`dims[${j}] must be an integer, got: ${I}`);if(I<0)throw new RangeError(`dims[${j}] must be a non-negative integer, got: ${I}`);Ee*=I}return Ee},oe=(de,Ee)=>{switch(de.location){case"cpu":return new F.Tensor(de.type,de.data,Ee);case"cpu-pinned":return new F.Tensor({location:"cpu-pinned",data:de.data,type:de.type,dims:Ee});case"texture":return new F.Tensor({location:"texture",texture:de.texture,type:de.type,dims:Ee});case"gpu-buffer":return new F.Tensor({location:"gpu-buffer",gpuBuffer:de.gpuBuffer,type:de.type,dims:Ee});default:throw new Error(`tensorReshape: tensor location ${de.location} is not supported`)}}},"./node_modules/onnxruntime-common/dist/esm/tensor.js":(De,ae,z)=>{z.r(ae),z.d(ae,{Tensor:()=>ue});var F=z("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const ue=F.Tensor},"./node_modules/onnxruntime-common/dist/esm/trace.js":(De,ae,z)=>{z.r(ae),z.d(ae,{TRACE:()=>ue,TRACE_FUNC_BEGIN:()=>de,TRACE_FUNC_END:()=>Ee});var F=z("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const ue=(j,I)=>{(typeof F.env.trace>"u"?!F.env.wasm.trace:!F.env.trace)||console.timeStamp(`${j}::ORT::${I}`)},oe=(j,I)=>{var Q;const M=((Q=new Error().stack)==null?void 0:Q.split(/\r\n|\r|\n/g))||[];let R=!1;for(let ne=0;ne<M.length;ne++){if(R&&!M[ne].includes("TRACE_FUNC")){let xe=`FUNC_${j}::${M[ne].trim().split(" ")[1]}`;I&&(xe+=`::${I}`),ue("CPU",xe);return}M[ne].includes("TRACE_FUNC")&&(R=!0)}},de=j=>{(typeof F.env.trace>"u"?!F.env.wasm.trace:!F.env.trace)||oe("BEGIN",j)},Ee=j=>{(typeof F.env.trace>"u"?!F.env.wasm.trace:!F.env.trace)||oe("END",j)}},"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js":(De,ae,z)=>{z.r(ae),z.d(ae,{TrainingSession:()=>de});var F=z("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),ue=z("./node_modules/onnxruntime-common/dist/esm/tensor.js");const oe="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.";class de{constructor(j,I,M){this.handler=j,this.hasOptimizerModel=I,this.hasEvalModel=M}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(j,I){const M=j.evalModel||"",R=j.optimizerModel||"",Q=I||{},[ne,xe]=await(0,F.resolveBackendAndExecutionProviders)(Q);if(ne.createTrainingSessionHandler){const we=await ne.createTrainingSessionHandler(j.checkpointState,j.trainModel,M,R,xe);return new de(we,!!j.optimizerModel,!!j.evalModel)}else throw new Error(oe)}typeNarrowingForRunStep(j,I,M,R,Q){const ne={};let xe={};if(typeof M!="object"||M===null||M instanceof ue.Tensor||Array.isArray(M))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let we=!0;if(typeof R=="object"){if(R===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(R instanceof ue.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(R)){if(R.length===0)throw new TypeError("'fetches' cannot be an empty array.");we=!1;for(const N of R){if(typeof N!="string")throw new TypeError("'fetches' must be a string array or an object.");if(I.indexOf(N)===-1)throw new RangeError(`'fetches' contains invalid output name: ${N}.`);ne[N]=null}if(typeof Q=="object"&&Q!==null)xe=Q;else if(typeof Q<"u")throw new TypeError("'options' must be an object.")}else{let N=!1;const ie=Object.getOwnPropertyNames(R);for(const Me of I)if(ie.indexOf(Me)!==-1){const J=R[Me];(J===null||J instanceof ue.Tensor)&&(N=!0,we=!1,ne[Me]=J)}if(N){if(typeof Q=="object"&&Q!==null)xe=Q;else if(typeof Q<"u")throw new TypeError("'options' must be an object.")}else xe=R}}else if(typeof R<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const N of j)if(typeof M[N]>"u")throw new Error(`input '${N}' is missing in 'feeds'.`);if(we)for(const N of I)ne[N]=null;return[ne,xe]}convertHandlerReturnTypeToMapOfTensors(j){const I={};for(const M in j)if(Object.hasOwnProperty.call(j,M)){const R=j[M];R instanceof ue.Tensor?I[M]=R:I[M]=new ue.Tensor(R.type,R.data,R.dims)}return I}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(j,I,M){const[R,Q]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,j,I,M),ne=await this.handler.runTrainStep(j,R,Q);return this.convertHandlerReturnTypeToMapOfTensors(ne)}async runOptimizerStep(j){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(j||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(j,I,M){if(this.hasEvalModel){const[R,Q]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,j,I,M),ne=await this.handler.runEvalStep(j,R,Q);return this.convertHandlerReturnTypeToMapOfTensors(ne)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(j=!0){return this.handler.getParametersSize(j)}async loadParametersBuffer(j,I=!0){const M=await this.getParametersSize(I);if(j.length!==4*M)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(j,I)}async getContiguousParameters(j=!0){return this.handler.getContiguousParameters(j)}async release(){return this.handler.dispose()}}},"./node_modules/onnxruntime-common/dist/esm/training-session.js":(De,ae,z)=>{z.r(ae),z.d(ae,{TrainingSession:()=>ue});var F=z("./node_modules/onnxruntime-common/dist/esm/training-session-impl.js");const ue=F.TrainingSession},"./node_modules/onnxruntime-common/dist/esm/version.js":(De,ae,z)=>{z.r(ae),z.d(ae,{version:()=>F});const F="1.19.2"},"./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs":(De,ae,z)=>{z.r(ae),z.d(ae,{InferenceSession:()=>Pt,TRACE:()=>Je,TRACE_FUNC_BEGIN:()=>Qe,TRACE_FUNC_END:()=>Ke,Tensor:()=>re,TrainingSession:()=>Mt,default:()=>Lm,env:()=>P,registerBackend:()=>xe});/*!
 * ONNX Runtime Web v1.21.0-dev.20241024-d9ca84ef96
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var F=Object.defineProperty,ue=Object.getOwnPropertyDescriptor,oe=Object.getOwnPropertyNames,de=Object.prototype.hasOwnProperty,Ee=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),j=(e,t)=>()=>(e&&(t=e(e=0)),t),I=(e,t)=>{for(var r in t)F(e,r,{get:t[r],enumerable:!0})},M=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of oe(t))!de.call(e,s)&&s!==r&&F(e,s,{get:()=>t[s],enumerable:!(n=ue(t,s))||n.enumerable});return e},R=e=>M(F({},"__esModule",{value:!0}),e),Q,ne,xe,we,N,ie=j(()=>{Q=new Map,ne=[],xe=(e,t,r)=>{if(t&&typeof t.init=="function"&&typeof t.createInferenceSessionHandler=="function"){let n=Q.get(e);if(n===void 0)Q.set(e,{backend:t,priority:r});else{if(n.priority>r)return;if(n.priority===r&&n.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${r}`)}if(r>=0){let s=ne.indexOf(e);s!==-1&&ne.splice(s,1);for(let o=0;o<ne.length;o++)if(Q.get(ne[o]).priority<=r){ne.splice(o,0,e);return}ne.push(e)}return}throw new TypeError("not a valid backend")},we=async e=>{let t=Q.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{let r=!!t.initPromise;try{return r||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(n){return r||(t.error=`${n}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},N=async e=>{let t=e.executionProviders||[],r=t.map(c=>typeof c=="string"?c:c.name),n=r.length===0?ne:r,s,o=[],i=new Set;for(let c of n){let p=await we(c);typeof p=="string"?o.push({name:c,err:p}):(s||(s=p),s===p&&i.add(c))}if(!s)throw new Error(`no available backend found. ERR: ${o.map(c=>`[${c.name}] ${c.err}`).join(", ")}`);for(let{name:c,err:p}of o)r.includes(c)&&console.warn(`removing requested execution provider "${c}" from session options because it is not available: ${p}`);let u=t.filter(c=>i.has(typeof c=="string"?c:c.name));return[s,new Proxy(e,{get:(c,p)=>p==="executionProviders"?u:Reflect.get(c,p)})]}}),Me=j(()=>{ie()}),J,Z=j(()=>{J="1.20.0-dev.20241016-2b8fc5529b"}),H,O,G=j(()=>{Z(),H="warning",O={wasm:{},webgl:{},webgpu:{},versions:{common:J},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);H=e}},get logLevel(){return H}},Object.defineProperty(O,"logLevel",{enumerable:!0})}),P,ye=j(()=>{G(),P=O}),$e,Fe,Ve=j(()=>{$e=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);r.width=e.dims[3],r.height=e.dims[2];let n=r.getContext("2d");if(n!=null){let s,o;(t==null?void 0:t.tensorLayout)!==void 0&&t.tensorLayout==="NHWC"?(s=e.dims[2],o=e.dims[3]):(s=e.dims[3],o=e.dims[2]);let i=(t==null?void 0:t.format)!==void 0?t.format:"RGB",u=t==null?void 0:t.norm,c,p;u===void 0||u.mean===void 0?c=[255,255,255,255]:typeof u.mean=="number"?c=[u.mean,u.mean,u.mean,u.mean]:(c=[u.mean[0],u.mean[1],u.mean[2],0],u.mean[3]!==void 0&&(c[3]=u.mean[3])),u===void 0||u.bias===void 0?p=[0,0,0,0]:typeof u.bias=="number"?p=[u.bias,u.bias,u.bias,u.bias]:(p=[u.bias[0],u.bias[1],u.bias[2],0],u.bias[3]!==void 0&&(p[3]=u.bias[3]));let y=o*s,g=0,l=y,k=y*2,$=-1;i==="RGBA"?(g=0,l=y,k=y*2,$=y*3):i==="RGB"?(g=0,l=y,k=y*2):i==="RBG"&&(g=0,k=y,l=y*2);for(let S=0;S<o;S++)for(let W=0;W<s;W++){let X=(e.data[g++]-p[0])*c[0],D=(e.data[l++]-p[1])*c[1],se=(e.data[k++]-p[2])*c[2],le=$===-1?255:(e.data[$++]-p[3])*c[3];n.fillStyle="rgba("+X+","+D+","+se+","+le+")",n.fillRect(W,S,1,1)}if("toDataURL"in r)return r.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Fe=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),n;if(r!=null){let s,o,i;(t==null?void 0:t.tensorLayout)!==void 0&&t.tensorLayout==="NHWC"?(s=e.dims[2],o=e.dims[1],i=e.dims[3]):(s=e.dims[3],o=e.dims[2],i=e.dims[1]);let u=t!==void 0&&t.format!==void 0?t.format:"RGB",c=t==null?void 0:t.norm,p,y;c===void 0||c.mean===void 0?p=[255,255,255,255]:typeof c.mean=="number"?p=[c.mean,c.mean,c.mean,c.mean]:(p=[c.mean[0],c.mean[1],c.mean[2],255],c.mean[3]!==void 0&&(p[3]=c.mean[3])),c===void 0||c.bias===void 0?y=[0,0,0,0]:typeof c.bias=="number"?y=[c.bias,c.bias,c.bias,c.bias]:(y=[c.bias[0],c.bias[1],c.bias[2],0],c.bias[3]!==void 0&&(y[3]=c.bias[3]));let g=o*s;if(t!==void 0&&(t.format!==void 0&&i===4&&t.format!=="RGBA"||i===3&&t.format!=="RGB"&&t.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let l=4,k=0,$=1,S=2,W=3,X=0,D=g,se=g*2,le=-1;u==="RGBA"?(X=0,D=g,se=g*2,le=g*3):u==="RGB"?(X=0,D=g,se=g*2):u==="RBG"&&(X=0,se=g,D=g*2),n=r.createImageData(s,o);for(let he=0;he<o*s;k+=l,$+=l,S+=l,W+=l,he++)n.data[k]=(e.data[X++]-y[0])*p[0],n.data[$]=(e.data[D++]-y[1])*p[1],n.data[S]=(e.data[se++]-y[2])*p[2],n.data[W]=le===-1?255:(e.data[le++]-y[3])*p[3]}else throw new Error("Can not access image data");return n}}),Ne,_t,ct,wt,Te,K,be=j(()=>{st(),Ne=(e,t)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(t.height===void 0||t.width===void 0)throw new Error("Image height and width must be defined");if(t.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:r,width:n}=t,s=t.norm??{mean:255,bias:0},o,i;typeof s.mean=="number"?o=[s.mean,s.mean,s.mean,s.mean]:o=[s.mean[0],s.mean[1],s.mean[2],s.mean[3]??255],typeof s.bias=="number"?i=[s.bias,s.bias,s.bias,s.bias]:i=[s.bias[0],s.bias[1],s.bias[2],s.bias[3]??0];let u=t.format!==void 0?t.format:"RGBA",c=t.tensorFormat!==void 0&&t.tensorFormat!==void 0?t.tensorFormat:"RGB",p=r*n,y=c==="RGBA"?new Float32Array(p*4):new Float32Array(p*3),g=4,l=0,k=1,$=2,S=3,W=0,X=p,D=p*2,se=-1;u==="RGB"&&(g=3,l=0,k=1,$=2,S=-1),c==="RGBA"?se=p*3:c==="RBG"?(W=0,D=p,X=p*2):c==="BGR"&&(D=0,X=p,W=p*2);for(let le=0;le<p;le++,l+=g,$+=g,k+=g,S+=g)y[W++]=(e[l]+i[0])/o[0],y[X++]=(e[k]+i[1])/o[1],y[D++]=(e[$]+i[2])/o[2],se!==-1&&S!==-1&&(y[se++]=(e[S]+i[3])/o[3]);return c==="RGBA"?new $t("float32",y,[1,4,r,n]):new $t("float32",y,[1,3,r,n])},_t=async(e,t)=>{let r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,n=typeof ImageData<"u"&&e instanceof ImageData,s=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,o=typeof e=="string",i,u=t??{},c=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},p=y=>typeof HTMLCanvasElement<"u"&&y instanceof HTMLCanvasElement||y instanceof OffscreenCanvas?y.getContext("2d"):null;if(r){let y=c();y.width=e.width,y.height=e.height;let g=p(y);if(g!=null){let l=e.height,k=e.width;if(t!==void 0&&t.resizedHeight!==void 0&&t.resizedWidth!==void 0&&(l=t.resizedHeight,k=t.resizedWidth),t!==void 0){if(u=t,t.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");u.tensorFormat="RGBA",u.height=l,u.width=k}else u.tensorFormat="RGBA",u.height=l,u.width=k;g.drawImage(e,0,0),i=g.getImageData(0,0,k,l).data}else throw new Error("Can not access image data")}else if(n){let y,g;if(t!==void 0&&t.resizedWidth!==void 0&&t.resizedHeight!==void 0?(y=t.resizedHeight,g=t.resizedWidth):(y=e.height,g=e.width),t!==void 0&&(u=t),u.format="RGBA",u.height=y,u.width=g,t!==void 0){let l=c();l.width=g,l.height=y;let k=p(l);if(k!=null)k.putImageData(e,0,0),i=k.getImageData(0,0,g,y).data;else throw new Error("Can not access image data")}else i=e.data}else if(s){if(t===void 0)throw new Error("Please provide image config with format for Imagebitmap");let y=c();y.width=e.width,y.height=e.height;let g=p(y);if(g!=null){let l=e.height,k=e.width;return g.drawImage(e,0,0,k,l),i=g.getImageData(0,0,k,l).data,u.height=l,u.width=k,Ne(i,u)}else throw new Error("Can not access image data")}else{if(o)return new Promise((y,g)=>{let l=c(),k=p(l);if(!e||!k)return g();let $=new Image;$.crossOrigin="Anonymous",$.src=e,$.onload=()=>{l.width=$.width,l.height=$.height,k.drawImage($,0,0,l.width,l.height);let S=k.getImageData(0,0,l.width,l.height);u.height=l.height,u.width=l.width,y(Ne(S.data,u))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(i!==void 0)return Ne(i,u);throw new Error("Input data provided is not supported - aborted tensor creation")},ct=(e,t)=>{let{width:r,height:n,download:s,dispose:o}=t,i=[1,n,r,4];return new $t({location:"texture",type:"float32",texture:e,dims:i,download:s,dispose:o})},wt=(e,t)=>{let{dataType:r,dims:n,download:s,dispose:o}=t;return new $t({location:"gpu-buffer",type:r??"float32",gpuBuffer:e,dims:n,download:s,dispose:o})},Te=(e,t)=>{let{dataType:r,dims:n,download:s,dispose:o}=t;return new $t({location:"ml-tensor",type:r??"float32",mlTensor:e,dims:n,download:s,dispose:o})},K=(e,t,r)=>new $t({location:"cpu-pinned",type:e,data:t,dims:r??[t.length]})}),Ie,Ze,gt,ce,Ge=j(()=>{Ie=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),Ze=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),gt=!1,ce=()=>{if(!gt){gt=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,r=typeof Float16Array<"u"&&Float16Array.from;e&&(Ie.set("int64",BigInt64Array),Ze.set(BigInt64Array,"int64")),t&&(Ie.set("uint64",BigUint64Array),Ze.set(BigUint64Array,"uint64")),r?(Ie.set("float16",Float16Array),Ze.set(Float16Array,"float16")):Ie.set("float16",Uint16Array)}}}),pt,qe,yt=j(()=>{st(),pt=e=>{let t=1;for(let r=0;r<e.length;r++){let n=e[r];if(typeof n!="number"||!Number.isSafeInteger(n))throw new TypeError(`dims[${r}] must be an integer, got: ${n}`);if(n<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${n}`);t*=n}return t},qe=(e,t)=>{switch(e.location){case"cpu":return new $t(e.type,e.data,t);case"cpu-pinned":return new $t({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new $t({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new $t({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new $t({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),$t,st=j(()=>{Ve(),be(),Ge(),yt(),$t=class{constructor(e,t,r){ce();let n,s;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,n=e.type,s=e.dims,e.location){case"cpu-pinned":{let i=Ie.get(n);if(!i)throw new TypeError(`unsupported type "${n}" to create tensor from pinned buffer`);if(!(e.data instanceof i))throw new TypeError(`buffer should be of type ${i.name}`);this.cpuData=e.data;break}case"texture":{if(n!=="float32")throw new TypeError(`unsupported type "${n}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint8"&&n!=="bool"&&n!=="uint4"&&n!=="int4")throw new TypeError(`unsupported type "${n}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint64"&&n!=="int8"&&n!=="uint8"&&n!=="bool")throw new TypeError(`unsupported type "${n}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let i,u;if(typeof e=="string")if(n=e,u=r,e==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");i=t}else{let c=Ie.get(e);if(c===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if(e==="float16"&&c===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${c.name} as data.`);e==="uint64"||e==="int64"?i=c.from(t,BigInt):i=c.from(t)}else if(t instanceof c)i=t;else if(t instanceof Uint8ClampedArray)if(e==="uint8")i=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${n} tensor's data must be type of ${c}`)}else if(u=t,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let c=typeof e[0];if(c==="string")n="string",i=e;else if(c==="boolean")n="bool",i=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${c}.`)}else if(e instanceof Uint8ClampedArray)n="uint8",i=Uint8Array.from(e);else{let c=Ze.get(e.constructor);if(c===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);n=c,i=e}if(u===void 0)u=[i.length];else if(!Array.isArray(u))throw new TypeError("A tensor's dims must be a number array");s=u,this.cpuData=i,this.dataLocation="cpu"}let o=pt(s);if(this.cpuData&&o!==this.cpuData.length&&!((n==="uint4"||n==="int4")&&Math.ceil(o/2)===this.cpuData.length))throw new Error(`Tensor's size(${o}) does not match data length(${this.cpuData.length}).`);this.type=n,this.dims=s,this.size=o}static async fromImage(e,t){return _t(e,t)}static fromTexture(e,t){return ct(e,t)}static fromGpuBuffer(e,t){return wt(e,t)}static fromMLTensor(e,t){return Te(e,t)}static fromPinnedBuffer(e,t,r){return K(e,t,r)}toDataURL(e){return $e(this,e)}toImageData(e){return Fe(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return qe(this,e)}}}),re,ze=j(()=>{st(),re=$t}),Je,lt,Qe,Ke,ft=j(()=>{G(),Je=(e,t)=>{(typeof O.trace>"u"?!O.wasm.trace:!O.trace)||console.timeStamp(`${e}::ORT::${t}`)},lt=(e,t)=>{var s;let r=((s=new Error().stack)==null?void 0:s.split(/\r\n|\r|\n/g))||[],n=!1;for(let o=0;o<r.length;o++){if(n&&!r[o].includes("TRACE_FUNC")){let i=`FUNC_${e}::${r[o].trim().split(" ")[1]}`;t&&(i+=`::${t}`),Je("CPU",i);return}r[o].includes("TRACE_FUNC")&&(n=!0)}},Qe=e=>{(typeof O.trace>"u"?!O.wasm.trace:!O.trace)||lt("BEGIN",e)},Ke=e=>{(typeof O.trace>"u"?!O.wasm.trace:!O.trace)||lt("END",e)}}),bt,Ft=j(()=>{ie(),ze(),ft(),bt=class Zf{constructor(t){this.handler=t}async run(t,r,n){Qe();let s={},o={};if(typeof t!="object"||t===null||t instanceof re||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if(typeof r=="object"){if(r===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof re)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(r.length===0)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(let p of r){if(typeof p!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(p)===-1)throw new RangeError(`'fetches' contains invalid output name: ${p}.`);s[p]=null}if(typeof n=="object"&&n!==null)o=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let p=!1,y=Object.getOwnPropertyNames(r);for(let g of this.outputNames)if(y.indexOf(g)!==-1){let l=r[g];(l===null||l instanceof re)&&(p=!0,i=!1,s[g]=l)}if(p){if(typeof n=="object"&&n!==null)o=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else o=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let p of this.inputNames)if(typeof t[p]>"u")throw new Error(`input '${p}' is missing in 'feeds'.`);if(i)for(let p of this.outputNames)s[p]=null;let u=await this.handler.run(t,s,o),c={};for(let p in u)if(Object.hasOwnProperty.call(u,p)){let y=u[p];y instanceof re?c[p]=y:c[p]=new re(y.type,y.data,y.dims)}return Ke(),c}async release(){return this.handler.dispose()}static async create(t,r,n,s){Qe();let o,i={};if(typeof t=="string"){if(o=t,typeof r=="object"&&r!==null)i=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(o=t,typeof r=="object"&&r!==null)i=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer){let y=t,g=0,l=t.byteLength;if(typeof r=="object"&&r!==null)i=r;else if(typeof r=="number"){if(g=r,!Number.isSafeInteger(g))throw new RangeError("'byteOffset' must be an integer.");if(g<0||g>=y.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${y.byteLength}).`);if(l=t.byteLength-g,typeof n=="number"){if(l=n,!Number.isSafeInteger(l))throw new RangeError("'byteLength' must be an integer.");if(l<=0||g+l>y.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${y.byteLength-g}].`);if(typeof s=="object"&&s!==null)i=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else if(typeof n<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof r<"u")throw new TypeError("'options' must be an object.");o=new Uint8Array(y,g,l)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[u,c]=await N(i),p=await u.createInferenceSessionHandler(o,c);return Ke(),new Zf(p)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),Pt,E=j(()=>{Ft(),Pt=bt}),Y=j(()=>{}),A=j(()=>{}),ee=j(()=>{}),ve=j(()=>{}),ot,at,Ut=j(()=>{ie(),ze(),ot="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",at=class Jf{constructor(t,r,n){this.handler=t,this.hasOptimizerModel=r,this.hasEvalModel=n}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(t,r){let n=t.evalModel||"",s=t.optimizerModel||"",o=r||{},[i,u]=await N(o);if(i.createTrainingSessionHandler){let c=await i.createTrainingSessionHandler(t.checkpointState,t.trainModel,n,s,u);return new Jf(c,!!t.optimizerModel,!!t.evalModel)}else throw new Error(ot)}typeNarrowingForRunStep(t,r,n,s,o){let i={},u={};if(typeof n!="object"||n===null||n instanceof re||Array.isArray(n))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let c=!0;if(typeof s=="object"){if(s===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(s instanceof re)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(s)){if(s.length===0)throw new TypeError("'fetches' cannot be an empty array.");c=!1;for(let p of s){if(typeof p!="string")throw new TypeError("'fetches' must be a string array or an object.");if(r.indexOf(p)===-1)throw new RangeError(`'fetches' contains invalid output name: ${p}.`);i[p]=null}if(typeof o=="object"&&o!==null)u=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else{let p=!1,y=Object.getOwnPropertyNames(s);for(let g of r)if(y.indexOf(g)!==-1){let l=s[g];(l===null||l instanceof re)&&(p=!0,c=!1,i[g]=l)}if(p){if(typeof o=="object"&&o!==null)u=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else u=s}}else if(typeof s<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let p of t)if(typeof n[p]>"u")throw new Error(`input '${p}' is missing in 'feeds'.`);if(c)for(let p of r)i[p]=null;return[i,u]}convertHandlerReturnTypeToMapOfTensors(t){let r={};for(let n in t)if(Object.hasOwnProperty.call(t,n)){let s=t[n];s instanceof re?r[n]=s:r[n]=new re(s.type,s.data,s.dims)}return r}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(t,r,n){let[s,o]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,t,r,n),i=await this.handler.runTrainStep(t,s,o);return this.convertHandlerReturnTypeToMapOfTensors(i)}async runOptimizerStep(t){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(t||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(t,r,n){if(this.hasEvalModel){let[s,o]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,t,r,n),i=await this.handler.runEvalStep(t,s,o);return this.convertHandlerReturnTypeToMapOfTensors(i)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(t=!0){return this.handler.getParametersSize(t)}async loadParametersBuffer(t,r=!0){let n=await this.getParametersSize(r);if(t.length!==4*n)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(t,r)}async getContiguousParameters(t=!0){return this.handler.getContiguousParameters(t)}async release(){return this.handler.dispose()}}}),Mt,kt=j(()=>{Ut(),Mt=at}),x={};I(x,{InferenceSession:()=>Pt,TRACE:()=>Je,TRACE_FUNC_BEGIN:()=>Qe,TRACE_FUNC_END:()=>Ke,Tensor:()=>re,TrainingSession:()=>Mt,env:()=>P,registerBackend:()=>xe});var d=j(()=>{Me(),ye(),E(),ze(),Y(),A(),ft(),ee(),ve(),kt()}),f=j(()=>{}),V={};I(V,{default:()=>Xe});var fe,Pe,Xe,sr=j(()=>{var e;yh(),Ir(),Nt(),fe="ort-wasm-proxy-worker",Pe=((e=globalThis.self)==null?void 0:e.name)===fe,Pe&&(self.onmessage=t=>{let{type:r,in:n}=t.data;try{switch(r){case"init-wasm":Vr(n.wasm).then(()=>{Qc(n).then(()=>{postMessage({type:r})},s=>{postMessage({type:r,err:s})})},s=>{postMessage({type:r,err:s})});break;case"init-ep":{let{epName:s,env:o}=n;Yc(o,s).then(()=>{postMessage({type:r})},i=>{postMessage({type:r,err:i})});break}case"copy-from":{let{buffer:s}=n,o=fc(s);postMessage({type:r,out:o});break}case"create":{let{model:s,options:o}=n;Zc(s,o).then(i=>{postMessage({type:r,out:i})},i=>{postMessage({type:r,err:i})});break}case"release":Jc(n),postMessage({type:r});break;case"run":{let{sessionId:s,inputIndices:o,inputs:i,outputIndices:u,options:c}=n;tp(s,o,i,u,new Array(u.length).fill(null),c).then(p=>{p.some(y=>y[3]!=="cpu")?postMessage({type:r,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:r,out:p},np([...i,...p]))},p=>{postMessage({type:r,err:p})});break}case"end-profiling":rp(n),postMessage({type:r});break;default:}}catch(s){postMessage({type:r,err:s})}}),Xe=Pe?null:t=>new Worker(t??Ye,{type:"module",name:fe})}),tt={};I(tt,{default:()=>ke});var U,ge,ke,Le=j(()=>{var e;ge=(U=self.location.href,async function(t={}){function r(){return wr.buffer!=tr.buffer&&gn(),tr}function n(){return wr.buffer!=tr.buffer&&gn(),kr}function s(){return wr.buffer!=tr.buffer&&gn(),nt}function o(){return wr.buffer!=tr.buffer&&gn(),At}function i(){return wr.buffer!=tr.buffer&&gn(),lr}function u(){return wr.buffer!=tr.buffer&&gn(),Ur}function c(){return wr.buffer!=tr.buffer&&gn(),an}function p(){return wr.buffer!=tr.buffer&&gn(),gc}var y,g,l=Object.assign({},t),k=new Promise((a,m)=>{y=a,g=m}),$=typeof window=="object",S=typeof importScripts=="function",W=S&&self.name=="em-pthread";l.mountExternalData=(a,m)=>{a.startsWith("./")&&(a=a.substring(2)),(l.Eb||(l.Eb=new Map)).set(a,m)},l.unmountExternalData=()=>{delete l.Eb};var X=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let D=()=>{let a=(b,C,B)=>(...pe)=>{let it=gi,mt=C==null?void 0:C();pe=b(...pe);let Lt=C==null?void 0:C();return mt!==Lt&&(b=Lt,B(mt),C=B=null),gi!=it?new Promise((Gt,nr)=>{xp={resolve:Gt,reject:nr}}):pe},m=b=>async(...C)=>{var B;try{if(l.Fb)throw Error("Session already started");let pe=l.Fb={fc:C[0],errors:[]},it=await b(...C);if(l.Fb!==pe)throw Error("Session mismatch");(B=l.Gb)==null||B.flush();let mt=pe.errors;if(0<mt.length){let Lt=await Promise.all(mt);if(Lt=Lt.filter(Gt=>Gt),0<Lt.length)throw Error(Lt.join(`
`))}return it}finally{l.Fb=null}};l._OrtCreateSession=a(l._OrtCreateSession,()=>l._OrtCreateSession,b=>l._OrtCreateSession=b),l._OrtRun=m(a(l._OrtRun,()=>l._OrtRun,b=>l._OrtRun=b)),l._OrtRunWithBinding=m(a(l._OrtRunWithBinding,()=>l._OrtRunWithBinding,b=>l._OrtRunWithBinding=b)),l._OrtBindInput=a(l._OrtBindInput,()=>l._OrtBindInput,b=>l._OrtBindInput=b),D=void 0};l.jsepInit=(a,m)=>{if(D==null||D(),a==="webgpu"){[l.Gb,l.Ub,l.Yb,l.Nb,l.Xb,l.jb,l.Zb,l.bc,l.Vb,l.Wb,l.$b]=m;let b=l.Gb;l.jsepRegisterBuffer=(C,B,pe,it)=>b.registerBuffer(C,B,pe,it),l.jsepGetBuffer=C=>b.getBuffer(C),l.jsepCreateDownloader=(C,B,pe)=>b.createDownloader(C,B,pe),l.jsepOnCreateSession=C=>{b.onCreateSession(C)},l.jsepOnReleaseSession=C=>{b.onReleaseSession(C)},l.jsepOnRunStart=C=>b.onRunStart(C),l.cc=(C,B)=>{b.upload(C,B)}}else if(a==="webnn"){[l.Gb,l.ac,l.Ob,l.jsepEnsureTensor,l.dc,l.jsepDownloadTensor]=m,l.jsepReleaseTensorId=l.Ob;let b=l.Gb;l.jsepOnRunStart=C=>b.onRunStart(C),l.jsepRegisterMLContext=(C,B)=>{b.registerMLContext(C,B)},l.jsepOnReleaseSession=C=>{b.onReleaseSession(C)},l.jsepCreateMLTensorDownloader=(C,B)=>b.createMLTensorDownloader(C,B),l.jsepRegisterMLTensor=(C,B,pe)=>b.registerMLTensor(C,B,pe),l.qc=(C,B,pe,it,mt)=>b.registerMLConstant(C,B,pe,it,mt,l.Eb)}};var se,le,he=Object.assign({},l),Be="./this.program",Re=(a,m)=>{throw m},dt="";($||S)&&(S?dt=self.location.href:typeof document<"u"&&document.currentScript&&(dt=document.currentScript.src),U&&(dt=U),dt=dt.startsWith("blob:")?"":dt.substr(0,dt.replace(/[?#].*/,"").lastIndexOf("/")+1),S&&(le=a=>{var m=new XMLHttpRequest;return m.open("GET",a,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),se=(a,m,b)=>{var C=new XMLHttpRequest;C.open("GET",a,!0),C.responseType="arraybuffer",C.onload=()=>{C.status==200||C.status==0&&C.response?m(C.response):b()},C.onerror=b,C.send(null)});var Rt,Wt=console.log.bind(console),pr=console.error.bind(console),ur=Wt,Zt=pr;if(Object.assign(l,he),he=null,W){let a=function(m){try{var b=m.data,C=b.cmd;if(C==="load"){let B=[];self.onmessage=pe=>B.push(pe),self.startWorker=()=>{postMessage({cmd:"loaded"});for(let pe of B)a(pe);self.onmessage=a};for(let pe of b.handlers)l[pe]&&!l[pe].proxy||(l[pe]=(...it)=>{postMessage({Mb:"callHandler",oc:pe,args:it})},pe=="print"&&(ur=l[pe]),pe=="printErr"&&(Zt=l[pe]));wr=b.wasmMemory,gn(),Ar(b.wasmModule)}else if(C==="run"){$p(b.pthread_ptr,0,0,1,0,0),bp(b.pthread_ptr),jm(),Uh(),Wr||(Nf(),Wr=!0);try{Um(b.start_routine,b.arg)}catch(B){if(B!="unwind")throw B}}else C==="cancel"?wa()&&Sc(-1):b.target!=="setimmediate"&&(C==="checkMailbox"?Wr&&bc():C&&(Zt(`worker: received unknown command ${C}`),Zt(b)))}catch(B){throw jf(),B}};var Ar,Wr=!1;Zt=function(...m){m=m.join(" "),console.error(m)},self.alert=function(...m){postMessage({Mb:"alert",text:m.join(" "),rc:wa()})},l.instantiateWasm=(m,b)=>new Promise(C=>{Ar=B=>{B=new WebAssembly.Instance(B,Dh()),b(B),C()}}),self.onunhandledrejection=m=>{throw m.reason||m},self.onmessage=a}l.wasmBinary&&(Rt=l.wasmBinary);var wr,Br,Qt,tr,kr,nt,At,lr,Ur,an,ln,Zi,gc,Sn=!1;function gn(){var a=wr.buffer;l.HEAP8=tr=new Int8Array(a),l.HEAP16=nt=new Int16Array(a),l.HEAPU8=kr=new Uint8Array(a),l.HEAPU16=At=new Uint16Array(a),l.HEAP32=lr=new Int32Array(a),l.HEAPU32=Ur=new Uint32Array(a),l.HEAPF32=an=new Float32Array(a),l.HEAPF64=gc=new Float64Array(a),l.HEAP64=ln=new BigInt64Array(a),l.HEAPU64=Zi=new BigUint64Array(a)}if(!W){if(!((wr=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0})).buffer instanceof X))throw Zt("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");gn()}var $s=[],hn=[],xn=[],Wn=0,Ji=null;function wc(){if(--Wn==0&&Ji){var a=Ji;Ji=null,a()}}function ma(a){throw Zt(a="Aborted("+a+")"),Sn=!0,Qt=1,a=new WebAssembly.RuntimeError(a+". Build with -sASSERTIONS for more info."),g(a),a}var lp,Fh=a=>a.startsWith("data:application/octet-stream;base64,"),Oh=a=>a.startsWith("file://");function zh(a){if(a==lp&&Rt)return new Uint8Array(Rt);if(le)return le(a);throw"both async and sync fetching of the wasm failed"}function Bh(a,m,b){return function(C){if(!Rt&&($||S)){if(typeof fetch=="function"&&!Oh(C))return fetch(C,{credentials:"same-origin"}).then(B=>{if(!B.ok)throw`failed to load wasm binary file at '${C}'`;return B.arrayBuffer()}).catch(()=>zh(C));if(se)return new Promise((B,pe)=>{se(C,it=>B(new Uint8Array(it)),pe)})}return Promise.resolve().then(()=>zh(C))}(a).then(C=>WebAssembly.instantiate(C,m)).then(b,C=>{Zt(`failed to asynchronously prepare wasm: ${C}`),ma(C)})}function Dh(){return{a:{O:Nm,Aa:Rm,b:Wm,aa:qh,B:Xh,qa:Qh,Y:Zh,_:Jh,ra:ef,oa:tf,ha:rf,na:nf,L:sf,Z:of,W:af,pa:lf,X:uf,wa:Gm,F:qm,Q:Hm,P:Xm,E:Ym,u:Zm,q:Jm,G:e_,A:a_,R:l_,ua:u_,ka:d_,U:c_,ba:p_,H:h_,ja:bp,ta:f_,t:m_,x:w_,n:y_,l:M_,c:wp,o:v_,j:E_,w:C_,p:$_,g:k_,s:S_,m:P_,e:A_,k:I_,i:F_,h:O_,d:z_,ea:B_,fa:D_,ga:L_,ca:xf,da:Tf,T:R_,f:N_,D:j_,I:U_,M:V_,y:W_,sa:G_,V:q_,v:Cf,z:H_,N:K_,S:X_,za:Q_,ya:Y_,la:Sf,ma:Pf,$:hp,C:Af,K:If,ia:Ff,J:Of,a:wr,xa:pp,va:Df,r:eg}}}var up={867364:(a,m,b,C,B)=>{if(l===void 0||!l.Eb)return 1;if((a=Mn(a>>>0)).startsWith("./")&&(a=a.substring(2)),!(a=l.Eb.get(a)))return 2;if(C>>>=0,(m>>>=0)+(b>>>=0)>a.byteLength)return 3;try{let pe=a.subarray(m,m+b);switch(B){case 0:n().set(pe,C>>>0);break;case 1:l.cc(C,pe);break;default:return 4}return 0}catch{return 4}},868047:(a,m,b)=>{l.dc(a,n().subarray(m>>>0,m+b>>>0))},868110:()=>l.ac(),868151:a=>{l.Ob(a)},868187:()=>{l.Vb()},868218:()=>{l.Wb()},868247:()=>{l.$b()},868272:a=>l.Ub(a),868305:a=>l.Yb(a),868337:(a,m,b)=>{l.Nb(a,m,b,!0)},868376:(a,m,b)=>{l.Nb(a,m,b)},868409:()=>typeof wasmOffsetConverter<"u",868466:a=>{l.jb("Abs",a,void 0)},868517:a=>{l.jb("Neg",a,void 0)},868568:a=>{l.jb("Floor",a,void 0)},868621:a=>{l.jb("Ceil",a,void 0)},868673:a=>{l.jb("Reciprocal",a,void 0)},868731:a=>{l.jb("Sqrt",a,void 0)},868783:a=>{l.jb("Exp",a,void 0)},868834:a=>{l.jb("Erf",a,void 0)},868885:a=>{l.jb("Sigmoid",a,void 0)},868940:(a,m,b)=>{l.jb("HardSigmoid",a,{alpha:m,beta:b})},869019:a=>{l.jb("Log",a,void 0)},869070:a=>{l.jb("Sin",a,void 0)},869121:a=>{l.jb("Cos",a,void 0)},869172:a=>{l.jb("Tan",a,void 0)},869223:a=>{l.jb("Asin",a,void 0)},869275:a=>{l.jb("Acos",a,void 0)},869327:a=>{l.jb("Atan",a,void 0)},869379:a=>{l.jb("Sinh",a,void 0)},869431:a=>{l.jb("Cosh",a,void 0)},869483:a=>{l.jb("Asinh",a,void 0)},869536:a=>{l.jb("Acosh",a,void 0)},869589:a=>{l.jb("Atanh",a,void 0)},869642:a=>{l.jb("Tanh",a,void 0)},869694:a=>{l.jb("Not",a,void 0)},869745:(a,m,b)=>{l.jb("Clip",a,{min:m,max:b})},869814:a=>{l.jb("Clip",a,void 0)},869866:(a,m)=>{l.jb("Elu",a,{alpha:m})},869924:a=>{l.jb("Gelu",a,void 0)},869976:a=>{l.jb("Relu",a,void 0)},870028:(a,m)=>{l.jb("LeakyRelu",a,{alpha:m})},870092:(a,m)=>{l.jb("ThresholdedRelu",a,{alpha:m})},870162:(a,m)=>{l.jb("Cast",a,{to:m})},870220:a=>{l.jb("Add",a,void 0)},870271:a=>{l.jb("Sub",a,void 0)},870322:a=>{l.jb("Mul",a,void 0)},870373:a=>{l.jb("Div",a,void 0)},870424:a=>{l.jb("Pow",a,void 0)},870475:a=>{l.jb("Equal",a,void 0)},870528:a=>{l.jb("Greater",a,void 0)},870583:a=>{l.jb("GreaterOrEqual",a,void 0)},870645:a=>{l.jb("Less",a,void 0)},870697:a=>{l.jb("LessOrEqual",a,void 0)},870756:(a,m,b,C,B)=>{l.jb("ReduceMean",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:C?Array.from(i().subarray(C>>>0,B>>>0)):[]})},870915:(a,m,b,C,B)=>{l.jb("ReduceMax",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:C?Array.from(i().subarray(C>>>0,B>>>0)):[]})},871073:(a,m,b,C,B)=>{l.jb("ReduceMin",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:C?Array.from(i().subarray(C>>>0,B>>>0)):[]})},871231:(a,m,b,C,B)=>{l.jb("ReduceProd",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:C?Array.from(i().subarray(C>>>0,B>>>0)):[]})},871390:(a,m,b,C,B)=>{l.jb("ReduceSum",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:C?Array.from(i().subarray(C>>>0,B>>>0)):[]})},871548:(a,m,b,C,B)=>{l.jb("ReduceL1",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:C?Array.from(i().subarray(C>>>0,B>>>0)):[]})},871705:(a,m,b,C,B)=>{l.jb("ReduceL2",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:C?Array.from(i().subarray(C>>>0,B>>>0)):[]})},871862:(a,m,b,C,B)=>{l.jb("ReduceLogSum",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:C?Array.from(i().subarray(C>>>0,B>>>0)):[]})},872023:(a,m,b,C,B)=>{l.jb("ReduceSumSquare",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:C?Array.from(i().subarray(C>>>0,B>>>0)):[]})},872187:(a,m,b,C,B)=>{l.jb("ReduceLogSumExp",a,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:C?Array.from(i().subarray(C>>>0,B>>>0)):[]})},872351:a=>{l.jb("Where",a,void 0)},872404:(a,m,b)=>{l.jb("Transpose",a,{perm:m?Array.from(i().subarray(m>>>0,b>>>0)):[]})},872512:(a,m,b,C)=>{l.jb("DepthToSpace",a,{blocksize:m,mode:Mn(b),format:C?"NHWC":"NCHW"})},872645:(a,m,b,C)=>{l.jb("DepthToSpace",a,{blocksize:m,mode:Mn(b),format:C?"NHWC":"NCHW"})},872778:(a,m,b,C,B,pe,it,mt,Lt,Gt,nr,Sr,Gr,He,$r)=>{l.jb("ConvTranspose",a,{format:Lt?"NHWC":"NCHW",autoPad:m,dilations:[b],group:C,kernelShape:[B],pads:[pe,it],strides:[mt],wIsConst:()=>!!r()[Gt>>>0],outputPadding:nr?Array.from(i().subarray(nr>>>0,Sr>>>0)):[],outputShape:Gr?Array.from(i().subarray(Gr>>>0,He>>>0)):[],activation:Mn($r)})},873179:(a,m,b,C,B,pe,it,mt,Lt,Gt,nr,Sr,Gr,He)=>{l.jb("ConvTranspose",a,{format:mt?"NHWC":"NCHW",autoPad:m,dilations:Array.from(i().subarray(b>>>0,2+(b>>>0)>>>0)),group:C,kernelShape:Array.from(i().subarray(B>>>0,2+(B>>>0)>>>0)),pads:Array.from(i().subarray(pe>>>0,4+(pe>>>0)>>>0)),strides:Array.from(i().subarray(it>>>0,2+(it>>>0)>>>0)),wIsConst:()=>!!r()[Lt>>>0],outputPadding:Gt?Array.from(i().subarray(Gt>>>0,nr>>>0)):[],outputShape:Sr?Array.from(i().subarray(Sr>>>0,Gr>>>0)):[],activation:Mn(He)})},873744:(a,m,b,C,B,pe,it,mt,Lt,Gt,nr,Sr,Gr,He,$r)=>{l.jb("ConvTranspose",a,{format:Lt?"NHWC":"NCHW",autoPad:m,dilations:[b],group:C,kernelShape:[B],pads:[pe,it],strides:[mt],wIsConst:()=>!!r()[Gt>>>0],outputPadding:nr?Array.from(i().subarray(nr>>>0,Sr>>>0)):[],outputShape:Gr?Array.from(i().subarray(Gr>>>0,He>>>0)):[],activation:Mn($r)})},874145:(a,m,b,C,B,pe,it,mt,Lt,Gt,nr,Sr,Gr,He)=>{l.jb("ConvTranspose",a,{format:mt?"NHWC":"NCHW",autoPad:m,dilations:Array.from(i().subarray(b>>>0,2+(b>>>0)>>>0)),group:C,kernelShape:Array.from(i().subarray(B>>>0,2+(B>>>0)>>>0)),pads:Array.from(i().subarray(pe>>>0,4+(pe>>>0)>>>0)),strides:Array.from(i().subarray(it>>>0,2+(it>>>0)>>>0)),wIsConst:()=>!!r()[Lt>>>0],outputPadding:Gt?Array.from(i().subarray(Gt>>>0,nr>>>0)):[],outputShape:Sr?Array.from(i().subarray(Sr>>>0,Gr>>>0)):[],activation:Mn(He)})},874710:(a,m)=>{l.jb("GlobalAveragePool",a,{format:m?"NHWC":"NCHW"})},874801:(a,m,b,C,B,pe,it,mt,Lt,Gt,nr,Sr,Gr,He)=>{l.jb("AveragePool",a,{format:He?"NHWC":"NCHW",auto_pad:m,ceil_mode:b,count_include_pad:C,storage_order:B,dilations:pe?Array.from(i().subarray(pe>>>0,it>>>0)):[],kernel_shape:mt?Array.from(i().subarray(mt>>>0,Lt>>>0)):[],pads:Gt?Array.from(i().subarray(Gt>>>0,nr>>>0)):[],strides:Sr?Array.from(i().subarray(Sr>>>0,Gr>>>0)):[]})},875216:(a,m)=>{l.jb("GlobalAveragePool",a,{format:m?"NHWC":"NCHW"})},875307:(a,m,b,C,B,pe,it,mt,Lt,Gt,nr,Sr,Gr,He)=>{l.jb("AveragePool",a,{format:He?"NHWC":"NCHW",auto_pad:m,ceil_mode:b,count_include_pad:C,storage_order:B,dilations:pe?Array.from(i().subarray(pe>>>0,it>>>0)):[],kernel_shape:mt?Array.from(i().subarray(mt>>>0,Lt>>>0)):[],pads:Gt?Array.from(i().subarray(Gt>>>0,nr>>>0)):[],strides:Sr?Array.from(i().subarray(Sr>>>0,Gr>>>0)):[]})},875722:(a,m)=>{l.jb("GlobalMaxPool",a,{format:m?"NHWC":"NCHW"})},875809:(a,m,b,C,B,pe,it,mt,Lt,Gt,nr,Sr,Gr,He)=>{l.jb("MaxPool",a,{format:He?"NHWC":"NCHW",auto_pad:m,ceil_mode:b,count_include_pad:C,storage_order:B,dilations:pe?Array.from(i().subarray(pe>>>0,it>>>0)):[],kernel_shape:mt?Array.from(i().subarray(mt>>>0,Lt>>>0)):[],pads:Gt?Array.from(i().subarray(Gt>>>0,nr>>>0)):[],strides:Sr?Array.from(i().subarray(Sr>>>0,Gr>>>0)):[]})},876220:(a,m)=>{l.jb("GlobalMaxPool",a,{format:m?"NHWC":"NCHW"})},876307:(a,m,b,C,B,pe,it,mt,Lt,Gt,nr,Sr,Gr,He)=>{l.jb("MaxPool",a,{format:He?"NHWC":"NCHW",auto_pad:m,ceil_mode:b,count_include_pad:C,storage_order:B,dilations:pe?Array.from(i().subarray(pe>>>0,it>>>0)):[],kernel_shape:mt?Array.from(i().subarray(mt>>>0,Lt>>>0)):[],pads:Gt?Array.from(i().subarray(Gt>>>0,nr>>>0)):[],strides:Sr?Array.from(i().subarray(Sr>>>0,Gr>>>0)):[]})},876718:(a,m,b,C,B)=>{l.jb("Gemm",a,{alpha:m,beta:b,transA:C,transB:B})},876822:a=>{l.jb("MatMul",a,void 0)},876876:(a,m,b,C)=>{l.jb("ArgMax",a,{keepDims:!!m,selectLastIndex:!!b,axis:C})},876984:(a,m,b,C)=>{l.jb("ArgMin",a,{keepDims:!!m,selectLastIndex:!!b,axis:C})},877092:(a,m)=>{l.jb("Softmax",a,{axis:m})},877155:(a,m)=>{l.jb("Concat",a,{axis:m})},877215:(a,m,b,C,B)=>{l.jb("Split",a,{axis:m,numOutputs:b,splitSizes:C?Array.from(i().subarray(C>>>0,B>>>0)):[]})},877355:a=>{l.jb("Expand",a,void 0)},877409:(a,m)=>{l.jb("Gather",a,{axis:Number(m)})},877480:(a,m)=>{l.jb("GatherElements",a,{axis:Number(m)})},877559:(a,m,b,C,B,pe,it,mt,Lt,Gt,nr)=>{l.jb("Resize",a,{antialias:m,axes:b?Array.from(i().subarray(b>>>0,C>>>0)):[],coordinateTransformMode:Mn(B),cubicCoeffA:pe,excludeOutside:it,extrapolationValue:mt,keepAspectRatioPolicy:Mn(Lt),mode:Mn(Gt),nearestMode:Mn(nr)})},877905:(a,m,b,C,B,pe,it)=>{l.jb("Slice",a,{starts:m?Array.from(i().subarray(m>>>0,b>>>0)):[],ends:C?Array.from(i().subarray(C>>>0,B>>>0)):[],axes:pe?Array.from(i().subarray(pe>>>0,it>>>0)):[]})},878121:a=>{l.jb("Tile",a,void 0)},878173:(a,m,b)=>{l.jb("InstanceNormalization",a,{epsilon:m,format:b?"NHWC":"NCHW"})},878287:(a,m,b)=>{l.jb("InstanceNormalization",a,{epsilon:m,format:b?"NHWC":"NCHW"})},878401:a=>{l.jb("Range",a,void 0)},878454:(a,m)=>{l.jb("Einsum",a,{equation:Mn(m)})},878535:(a,m,b,C,B)=>{l.jb("Pad",a,{mode:m,value:b,pads:C?Array.from(i().subarray(C>>>0,B>>>0)):[]})},878662:(a,m,b,C,B,pe)=>{l.jb("BatchNormalization",a,{epsilon:m,momentum:b,spatial:!!B,trainingMode:!!C,format:pe?"NHWC":"NCHW"})},878831:(a,m,b,C,B,pe)=>{l.jb("BatchNormalization",a,{epsilon:m,momentum:b,spatial:!!B,trainingMode:!!C,format:pe?"NHWC":"NCHW"})},879e3:(a,m,b)=>{l.jb("CumSum",a,{exclusive:Number(m),reverse:Number(b)})},879097:(a,m,b)=>{l.jb("DequantizeLinear",a,{axis:m,blockSize:b})},879187:(a,m,b,C,B,pe,it,mt,Lt)=>{l.jb("Attention",a,{numHeads:m,isUnidirectional:b,maskFilterValue:C,scale:B,doRotary:pe,qkvHiddenSizes:it?Array.from(i().subarray(Number(mt)>>>0,Number(mt)+it>>>0)):[],pastPresentShareBuffer:!!Lt})},879459:a=>{l.jb("BiasAdd",a,void 0)},879514:a=>{l.jb("BiasSplitGelu",a,void 0)},879575:a=>{l.jb("FastGelu",a,void 0)},879631:(a,m,b,C,B,pe,it,mt,Lt,Gt,nr,Sr,Gr,He,$r,sn)=>{l.jb("Conv",a,{format:Sr?"NHWC":"NCHW",auto_pad:m,dilations:b?Array.from(i().subarray(b>>>0,C>>>0)):[],group:B,kernel_shape:pe?Array.from(i().subarray(pe>>>0,it>>>0)):[],pads:mt?Array.from(i().subarray(mt>>>0,Lt>>>0)):[],strides:Gt?Array.from(i().subarray(Gt>>>0,nr>>>0)):[],w_is_const:()=>!!r()[Gr>>>0],activation:Mn(He),activation_params:$r?Array.from(c().subarray($r>>>0,sn>>>0)):[]})},880127:a=>{l.jb("Gelu",a,void 0)},880179:(a,m,b,C,B,pe,it,mt,Lt)=>{l.jb("GroupQueryAttention",a,{numHeads:m,kvNumHeads:b,scale:C,softcap:B,doRotary:pe,rotaryInterleaved:it,smoothSoftmax:mt,localWindowSize:Lt})},880396:(a,m,b,C)=>{l.jb("LayerNormalization",a,{axis:m,epsilon:b,simplified:!!C})},880507:(a,m,b,C)=>{l.jb("LayerNormalization",a,{axis:m,epsilon:b,simplified:!!C})},880618:(a,m,b,C,B,pe)=>{l.jb("MatMulNBits",a,{k:m,n:b,accuracyLevel:C,bits:B,blockSize:pe})},880745:(a,m,b,C,B,pe)=>{l.jb("MultiHeadAttention",a,{numHeads:m,isUnidirectional:b,maskFilterValue:C,scale:B,doRotary:pe})},880904:(a,m)=>{l.jb("QuickGelu",a,{alpha:m})},880968:(a,m,b,C,B)=>{l.jb("RotaryEmbedding",a,{interleaved:!!m,numHeads:b,rotaryEmbeddingDim:C,scale:B})},881107:(a,m,b)=>{l.jb("SkipLayerNormalization",a,{epsilon:m,simplified:!!b})},881209:(a,m,b)=>{l.jb("SkipLayerNormalization",a,{epsilon:m,simplified:!!b})},881311:(a,m,b,C)=>{l.jb("GatherBlockQuantized",a,{gatherAxis:m,quantizeAxis:b,blockSize:C})},881432:a=>{l.Zb(a)},881466:(a,m)=>l.bc(a,m,l.Fb.fc,l.Fb.errors)};function Rm(a,m,b){return wf(async()=>{await l.Xb(a,m,b)})}function Nm(){return typeof wasmOffsetConverter<"u"}function dp(a){this.name="ExitStatus",this.message=`Program terminated with exit(${a})`,this.status=a}var cp=a=>{a.terminate(),a.onmessage=()=>{}},Lh=a=>{es.length==0&&(Wh(),Vh(es[0]));var m=es.pop();if(!m)return 6;Ss.push(m),mi[a.Ab]=m,m.Ab=a.Ab;var b={cmd:"run",start_routine:a.hc,arg:a.Qb,pthread_ptr:a.Ab};return m.postMessage(b,a.mc),0},ks=0,tn=(a,m,...b)=>{for(var C=2*b.length,B=Pp(),pe=Sp(8*C),it=pe>>>3,mt=0;mt<b.length;mt++){var Lt=b[mt];typeof Lt=="bigint"?(ln[it+2*mt]=1n,ln[it+2*mt+1]=Lt):(ln[it+2*mt]=0n,p()[it+2*mt+1>>>0]=Lt)}return a=Uf(a,0,C,pe,m),Pc(B),a};function pp(a){if(W)return tn(0,1,a);if(Qt=a,!(0<ks)){for(var m of Ss)cp(m);for(m of es)cp(m);es=[],Ss=[],mi=[],Sn=!0}Re(a,new dp(a))}function Rh(a){if(W)return tn(1,0,a);hp(a)}var hp=a=>{if(Qt=a,W)throw Rh(a),"unwind";pp(a)},es=[],Ss=[],Nh=[],mi={},jh=a=>{var m=a.Ab;delete mi[m],es.push(a),Ss.splice(Ss.indexOf(a),1),a.Ab=0,kp(m)};function Uh(){Nh.forEach(a=>a())}var Vh=a=>new Promise(m=>{a.onmessage=B=>{var pe=(B=B.data).cmd;if(B.targetThread&&B.targetThread!=wa()){var it=mi[B.targetThread];it?it.postMessage(B,B.transferList):Zt(`Internal error! Worker sent a message "${pe}" to target pthread ${B.targetThread}, but that thread no longer exists!`)}else pe==="checkMailbox"?bc():pe==="spawnThread"?Lh(B):pe==="cleanupThread"?jh(mi[B.thread]):pe==="killThread"?(B=B.thread,pe=mi[B],delete mi[B],cp(pe),kp(B),Ss.splice(Ss.indexOf(pe),1),pe.Ab=0):pe==="cancelThread"?mi[B.thread].postMessage({cmd:"cancel"}):pe==="loaded"?(a.loaded=!0,m(a)):pe==="alert"?alert(`Thread ${B.threadId}: ${B.text}`):B.target==="setimmediate"?a.postMessage(B):pe==="callHandler"?l[B.handler](...B.args):pe&&Zt(`worker sent an unknown command ${pe}`)},a.onerror=B=>{throw Zt(`worker sent an error! ${B.filename}:${B.lineno}: ${B.message}`),B};var b,C=[];for(b of[])l.hasOwnProperty(b)&&C.push(b);a.postMessage({cmd:"load",handlers:C,wasmMemory:wr,wasmModule:Br})});function Wh(){var a=new Worker(new URL(self.location.href),{type:"module",workerData:"em-pthread",name:"em-pthread"});es.push(a)}var yc=a=>{for(;0<a.length;)a.shift()(l)},jm=()=>{var a=wa(),m=u()[a+52>>>2>>>0];a=u()[a+56>>>2>>>0],Wf(m,m-a),Pc(m)},Um=(a,m)=>{ks=0,a=Gf(a,m),0<ks?Qt=a:Sc(a)};class Vm{constructor(m){this.Jb=m-24}}function Wm(a,m,b){var C=new Vm(a>>>=0);throw m>>>=0,b>>>=0,u()[C.Jb+16>>>2>>>0]=0,u()[C.Jb+4>>>2>>>0]=m,u()[C.Jb+8>>>2>>>0]=b,a}function Gh(a,m,b,C){return W?tn(2,1,a,m,b,C):qh(a,m,b,C)}function qh(a,m,b,C){if(a>>>=0,m>>>=0,b>>>=0,C>>>=0,X===void 0)return Zt("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var B=[];return W&&B.length===0?Gh(a,m,b,C):(a={hc:b,Ab:a,Qb:C,mc:B},W?(a.Mb="spawnThread",postMessage(a,B),0):Lh(a))}var Hh=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Kh=(a,m,b)=>{var C=(m>>>=0)+b;for(b=m;a[b]&&!(b>=C);)++b;if(16<b-m&&a.buffer&&Hh)return Hh.decode(a.buffer instanceof X?a.slice(m,b):a.subarray(m,b));for(C="";m<b;){var B=a[m++];if(128&B){var pe=63&a[m++];if((224&B)==192)C+=String.fromCharCode((31&B)<<6|pe);else{var it=63&a[m++];65536>(B=(240&B)==224?(15&B)<<12|pe<<6|it:(7&B)<<18|pe<<12|it<<6|63&a[m++])?C+=String.fromCharCode(B):(B-=65536,C+=String.fromCharCode(55296|B>>10,56320|1023&B))}}else C+=String.fromCharCode(B)}return C},Mn=(a,m)=>(a>>>=0)?Kh(n(),a,m):"";function Xh(a,m,b){return W?tn(3,1,a,m,b):0}function Qh(a,m){if(W)return tn(4,1,a,m)}var fp=a=>{for(var m=0,b=0;b<a.length;++b){var C=a.charCodeAt(b);127>=C?m++:2047>=C?m+=2:55296<=C&&57343>=C?(m+=4,++b):m+=3}return m},Yh=(a,m,b,C)=>{if(!(0<C))return 0;var B=b>>>=0;C=b+C-1;for(var pe=0;pe<a.length;++pe){var it=a.charCodeAt(pe);if(55296<=it&&57343>=it&&(it=65536+((1023&it)<<10)|1023&a.charCodeAt(++pe)),127>=it){if(b>=C)break;m[b++>>>0]=it}else{if(2047>=it){if(b+1>=C)break;m[b++>>>0]=192|it>>6}else{if(65535>=it){if(b+2>=C)break;m[b++>>>0]=224|it>>12}else{if(b+3>=C)break;m[b++>>>0]=240|it>>18,m[b++>>>0]=128|it>>12&63}m[b++>>>0]=128|it>>6&63}m[b++>>>0]=128|63&it}}return m[b>>>0]=0,b-B},_a=(a,m,b)=>Yh(a,n(),m,b);function Zh(a,m){if(W)return tn(5,1,a,m)}function Jh(a,m,b){if(W)return tn(6,1,a,m,b)}function ef(a,m,b){return W?tn(7,1,a,m,b):0}function tf(a,m){if(W)return tn(8,1,a,m)}function rf(a,m,b){if(W)return tn(9,1,a,m,b)}function nf(a,m,b,C){if(W)return tn(10,1,a,m,b,C)}function sf(a,m,b,C){if(W)return tn(11,1,a,m,b,C)}function of(a,m,b,C){if(W)return tn(12,1,a,m,b,C)}function af(a){if(W)return tn(13,1,a)}function lf(a,m){if(W)return tn(14,1,a,m)}function uf(a,m,b){if(W)return tn(15,1,a,m,b)}var df,ts,Gm=()=>{ma("")},_i=a=>{for(var m="";n()[a>>>0];)m+=df[n()[a++>>>0]];return m},mp={},_p={};function Ii(a,m,b={}){if(!("argPackAdvance"in m))throw new TypeError("registerType registeredInstance requires argPackAdvance");return function(C,B,pe={}){var it=B.name;if(!C)throw new ts(`type "${it}" must have a positive integer typeid pointer`);if(_p.hasOwnProperty(C)){if(pe.Sb)return;throw new ts(`Cannot register type '${it}' twice`)}_p[C]=B,mp.hasOwnProperty(C)&&(B=mp[C],delete mp[C],B.forEach(mt=>mt()))}(a,m,b)}var cf=(a,m,b)=>{switch(m){case 1:return b?C=>r()[C>>>0]:C=>n()[C>>>0];case 2:return b?C=>s()[C>>>1>>>0]:C=>o()[C>>>1>>>0];case 4:return b?C=>i()[C>>>2>>>0]:C=>u()[C>>>2>>>0];case 8:return b?C=>ln[C>>>3]:C=>Zi[C>>>3];default:throw new TypeError(`invalid integer width (${m}): ${a}`)}};function qm(a,m,b){b>>>=0,Ii(a>>>=0,{name:m=_i(m>>>0),fromWireType:C=>C,toWireType:function(C,B){if(typeof B!="bigint"&&typeof B!="number")throw B=B===null?"null":(C=typeof B)=="object"||C==="array"||C==="function"?B.toString():""+B,new TypeError(`Cannot convert "${B}" to ${this.name}`);return typeof B=="number"&&(B=BigInt(B)),B},argPackAdvance:rs,readValueFromPointer:cf(m,b,m.indexOf("u")==-1),Db:null})}var rs=8;function Hm(a,m,b,C){Ii(a>>>=0,{name:m=_i(m>>>0),fromWireType:function(B){return!!B},toWireType:function(B,pe){return pe?b:C},argPackAdvance:rs,readValueFromPointer:function(B){return this.fromWireType(n()[B>>>0])},Db:null})}var gp=[],Fi=[];function wp(a){9<(a>>>=0)&&--Fi[a+1]==0&&(Fi[a]=void 0,gp.push(a))}var Gn=a=>{if(!a)throw new ts("Cannot use deleted val. handle = "+a);return Fi[a]},qn=a=>{switch(a){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let m=gp.pop()||Fi.length;return Fi[m]=a,Fi[m+1]=1,m}};function yp(a){return this.fromWireType(u()[a>>>2>>>0])}var Km={name:"emscripten::val",fromWireType:a=>{var m=Gn(a);return wp(a),m},toWireType:(a,m)=>qn(m),argPackAdvance:rs,readValueFromPointer:yp,Db:null};function Xm(a){return Ii(a>>>0,Km)}var Qm=(a,m)=>{switch(m){case 4:return function(b){return this.fromWireType(c()[b>>>2>>>0])};case 8:return function(b){return this.fromWireType(p()[b>>>3>>>0])};default:throw new TypeError(`invalid float width (${m}): ${a}`)}};function Ym(a,m,b){b>>>=0,Ii(a>>>=0,{name:m=_i(m>>>0),fromWireType:C=>C,toWireType:(C,B)=>B,argPackAdvance:rs,readValueFromPointer:Qm(m,b),Db:null})}function Zm(a,m,b,C,B){if(a>>>=0,b>>>=0,m=_i(m>>>0),B===-1&&(B=4294967295),B=mt=>mt,C===0){var pe=32-8*b;B=mt=>mt<<pe>>>pe}var it=m.includes("unsigned")?function(mt,Lt){return Lt>>>0}:function(mt,Lt){return Lt};Ii(a,{name:m,fromWireType:B,toWireType:it,argPackAdvance:rs,readValueFromPointer:cf(m,b,C!==0),Db:null})}function Jm(a,m,b){function C(pe){var it=u()[pe>>>2>>>0];return pe=u()[pe+4>>>2>>>0],new B(r().buffer,pe,it)}var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][m];Ii(a>>>=0,{name:b=_i(b>>>0),fromWireType:C,argPackAdvance:rs,readValueFromPointer:C},{Sb:!0})}function e_(a,m){a>>>=0;var b=(m=_i(m>>>0))==="std::string";Ii(a,{name:m,fromWireType:function(C){var B=u()[C>>>2>>>0],pe=C+4;if(b)for(var it=pe,mt=0;mt<=B;++mt){var Lt=pe+mt;if(mt==B||n()[Lt>>>0]==0){if(it=Mn(it,Lt-it),Gt===void 0)var Gt=it;else Gt+="\0",Gt+=it;it=Lt+1}}else{for(Gt=Array(B),mt=0;mt<B;++mt)Gt[mt]=String.fromCharCode(n()[pe+mt>>>0]);Gt=Gt.join("")}return wi(C),Gt},toWireType:function(C,B){B instanceof ArrayBuffer&&(B=new Uint8Array(B));var pe=typeof B=="string";if(!(pe||B instanceof Uint8Array||B instanceof Uint8ClampedArray||B instanceof Int8Array))throw new ts("Cannot pass non-string to std::string");var it=b&&pe?fp(B):B.length,mt=kc(4+it+1),Lt=mt+4;if(u()[mt>>>2>>>0]=it,b&&pe)_a(B,Lt,it+1);else if(pe)for(pe=0;pe<it;++pe){var Gt=B.charCodeAt(pe);if(255<Gt)throw wi(Lt),new ts("String has UTF-16 code units that do not fit in 8 bits");n()[Lt+pe>>>0]=Gt}else for(pe=0;pe<it;++pe)n()[Lt+pe>>>0]=B[pe];return C!==null&&C.push(wi,mt),mt},argPackAdvance:rs,readValueFromPointer:yp,Db(C){wi(C)}})}var pf=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,t_=(a,m)=>{for(var b=a>>1,C=b+m/2;!(b>=C)&&o()[b>>>0];)++b;if(32<(b<<=1)-a&&pf)return pf.decode(n().slice(a,b));for(b="",C=0;!(C>=m/2);++C){var B=s()[a+2*C>>>1>>>0];if(B==0)break;b+=String.fromCharCode(B)}return b},r_=(a,m,b)=>{if(b??(b=2147483647),2>b)return 0;var C=m;b=(b-=2)<2*a.length?b/2:a.length;for(var B=0;B<b;++B){var pe=a.charCodeAt(B);s()[m>>>1>>>0]=pe,m+=2}return s()[m>>>1>>>0]=0,m-C},n_=a=>2*a.length,i_=(a,m)=>{for(var b=0,C="";!(b>=m/4);){var B=i()[a+4*b>>>2>>>0];if(B==0)break;++b,65536<=B?(B-=65536,C+=String.fromCharCode(55296|B>>10,56320|1023&B)):C+=String.fromCharCode(B)}return C},s_=(a,m,b)=>{if(m>>>=0,b??(b=2147483647),4>b)return 0;var C=m;b=C+b-4;for(var B=0;B<a.length;++B){var pe=a.charCodeAt(B);if(55296<=pe&&57343>=pe&&(pe=65536+((1023&pe)<<10)|1023&a.charCodeAt(++B)),i()[m>>>2>>>0]=pe,(m+=4)+4>b)break}return i()[m>>>2>>>0]=0,m-C},o_=a=>{for(var m=0,b=0;b<a.length;++b){var C=a.charCodeAt(b);55296<=C&&57343>=C&&++b,m+=4}return m};function a_(a,m,b){if(a>>>=0,m>>>=0,b=_i(b>>>=0),m===2)var C=t_,B=r_,pe=n_,it=mt=>o()[mt>>>1>>>0];else m===4&&(C=i_,B=s_,pe=o_,it=mt=>u()[mt>>>2>>>0]);Ii(a,{name:b,fromWireType:mt=>{for(var Lt,Gt=u()[mt>>>2>>>0],nr=mt+4,Sr=0;Sr<=Gt;++Sr){var Gr=mt+4+Sr*m;Sr!=Gt&&it(Gr)!=0||(nr=C(nr,Gr-nr),Lt===void 0?Lt=nr:(Lt+="\0",Lt+=nr),nr=Gr+m)}return wi(mt),Lt},toWireType:(mt,Lt)=>{if(typeof Lt!="string")throw new ts(`Cannot pass non-string to C++ string type ${b}`);var Gt=pe(Lt),nr=kc(4+Gt+m);return u()[nr>>>2>>>0]=Gt/m,B(Lt,nr+4,Gt+m),mt!==null&&mt.push(wi,nr),nr},argPackAdvance:rs,readValueFromPointer:yp,Db(mt){wi(mt)}})}function l_(a,m){Ii(a>>>=0,{Tb:!0,name:m=_i(m>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})}var u_=()=>1;function d_(a){$p(a>>>0,!S,1,!$,131072,!1),Uh()}var hf=a=>{if(!Sn)try{if(a(),!(0<ks))try{W?Sc(Qt):hp(Qt)}catch(m){m instanceof dp||m=="unwind"||Re(1,m)}}catch(m){m instanceof dp||m=="unwind"||Re(1,m)}};function bp(a){a>>>=0,typeof Atomics.nc=="function"&&(Atomics.nc(i(),a>>>2,a).value.then(bc),a+=128,Atomics.store(i(),a>>>2,1))}var bc=()=>{var a=wa();a&&(bp(a),hf(Vf))};function c_(a,m){(a>>>=0)==m>>>0?setTimeout(bc):W?postMessage({targetThread:a,cmd:"checkMailbox"}):(a=mi[a])&&a.postMessage({cmd:"checkMailbox"})}var Mp=[];function p_(a,m,b,C,B){for(m>>>=0,C/=2,Mp.length=C,b=B>>>0>>>3,B=0;B<C;B++)Mp[B]=ln[b+2*B]?ln[b+2*B+1]:p()[b+2*B+1>>>0];return(m?up[m]:tg[a])(...Mp)}function h_(a){a>>>=0,W?postMessage({cmd:"cleanupThread",thread:a}):jh(mi[a])}function f_(a){}var vp=(a,m)=>{var b=_p[a];if(b===void 0)throw a=Rf(a),b=_i(a),wi(a),new ts(`${m} has unknown type ${b}`);return b},ff=(a,m,b)=>{var C=[];return a=a.toWireType(C,b),C.length&&(u()[m>>>2>>>0]=qn(C)),a};function m_(a,m,b){return m>>>=0,b>>>=0,a=Gn(a>>>0),m=vp(m,"emval::as"),ff(m,b,a)}var Mc=a=>{try{a()}catch(m){ma(m)}},ns=0,gi=null,mf=0,vc=[],_f={},gf={},__=0,xp=null,g_=[];function wf(a){return function(m){if(!Sn){if(ns===0){var b=!1,C=!1;m((B=0)=>{if(!Sn&&(mf=B,b=!0,C)){ns=2,Mc(()=>Kf(gi)),typeof Browser<"u"&&Browser.Kb.Rb&&Browser.Kb.resume(),B=!1;try{var pe=function(){var Lt=i()[gi+8>>>2>>>0];return Lt=er[gf[Lt]],--ks,Lt()}()}catch(Lt){pe=Lt,B=!0}var it=!1;if(!gi){var mt=xp;mt&&(xp=null,(B?mt.reject:mt.resolve)(pe),it=!0)}if(B&&!it)throw pe}}),C=!0,b||(ns=1,gi=function(){var B=kc(65548),pe=B+12;u()[B>>>2>>>0]=pe,u()[B+4>>>2>>>0]=pe+65536,pe=vc[0];var it=_f[pe];return it===void 0&&(it=__++,_f[pe]=it,gf[it]=pe),pe=it,i()[B+8>>>2>>>0]=pe,B}(),typeof Browser<"u"&&Browser.Kb.Rb&&Browser.Kb.pause(),Mc(()=>qf(gi)))}else ns===2?(ns=0,Mc(Xf),wi(gi),gi=null,g_.forEach(hf)):ma(`invalid state: ${ns}`);return mf}}(m=>{a().then(m)})}function w_(a){return a>>>=0,wf(()=>(a=Gn(a)).then(qn))}var xc=[];function y_(a,m,b,C){return b>>>=0,C>>>=0,(a=xc[a>>>0])(null,m=Gn(m>>>0),b,C)}var b_={},Tc=a=>{var m=b_[a];return m===void 0?_i(a):m};function M_(a,m,b,C,B){return b>>>=0,C>>>=0,B>>>=0,(a=xc[a>>>0])(m=Gn(m>>>0),m[b=Tc(b)],C,B)}var yf=()=>typeof globalThis=="object"?globalThis:Function("return this")();function v_(a){return(a>>>=0)==0?qn(yf()):(a=Tc(a),qn(yf()[a]))}var x_=a=>{var m=xc.length;return xc.push(a),m},T_=(a,m)=>{for(var b=Array(a),C=0;C<a;++C)b[C]=vp(u()[m+4*C>>>2>>>0],"parameter "+C);return b},bf=(a,m)=>Object.defineProperty(m,"name",{value:a});function E_(a,m,b){var C=(m=T_(a,m>>>0)).shift();a--;var B=`return function (obj, func, destructorsRef, args) {
`,pe=0,it=[];b===0&&it.push("obj");for(var mt=["retType"],Lt=[C],Gt=0;Gt<a;++Gt)it.push("arg"+Gt),mt.push("argType"+Gt),Lt.push(m[Gt]),B+=`  var arg${Gt} = argType${Gt}.readValueFromPointer(args${pe?"+"+pe:""});
`,pe+=m[Gt].argPackAdvance;return B+=`  var rv = ${b===1?"new func":"func.call"}(${it.join(", ")});
`,C.Tb||(mt.push("emval_returnValue"),Lt.push(ff),B+=`  return emval_returnValue(retType, destructorsRef, rv);
`),mt.push(B+`};
`),a=function(nr){var Sr=Function;if(!(Sr instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof Sr} which is not a function`);var Gr=bf(Sr.name||"unknownFunctionName",function(){});return Gr.prototype=Sr.prototype,Gr=new Gr,(nr=Sr.apply(Gr,nr))instanceof Object?nr:Gr}(mt)(...Lt),b=`methodCaller<(${m.map(nr=>nr.name).join(", ")}) => ${C.name}>`,x_(bf(b,a))}function C_(a){return a=Tc(a>>>0),qn(l[a])}function $_(a,m){return m>>>=0,a=Gn(a>>>0),m=Gn(m),qn(a[m])}function k_(a){9<(a>>>=0)&&(Fi[a+1]+=1)}function S_(){return qn([])}function P_(a){a=Gn(a>>>0);for(var m=Array(a.length),b=0;b<a.length;b++)m[b]=a[b];return qn(m)}function A_(a){return qn(Tc(a>>>0))}function I_(){return qn({})}function F_(a){for(var m=Gn(a>>>=0);m.length;){var b=m.pop();m.pop()(b)}wp(a)}function O_(a,m,b){m>>>=0,b>>>=0,a=Gn(a>>>0),m=Gn(m),b=Gn(b),a[m]=b}function z_(a,m){return m>>>=0,a=(a=vp(a>>>0,"_emval_take_value")).readValueFromPointer(m),qn(a)}function B_(a,m){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a),m>>>=0,a=new Date(1e3*a),i()[m>>>2>>>0]=a.getUTCSeconds(),i()[m+4>>>2>>>0]=a.getUTCMinutes(),i()[m+8>>>2>>>0]=a.getUTCHours(),i()[m+12>>>2>>>0]=a.getUTCDate(),i()[m+16>>>2>>>0]=a.getUTCMonth(),i()[m+20>>>2>>>0]=a.getUTCFullYear()-1900,i()[m+24>>>2>>>0]=a.getUTCDay(),a=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,i()[m+28>>>2>>>0]=a}var ga=a=>a%4==0&&(a%100!=0||a%400==0),Mf=[0,31,60,91,121,152,182,213,244,274,305,335],vf=[0,31,59,90,120,151,181,212,243,273,304,334];function D_(a,m){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a),m>>>=0,a=new Date(1e3*a),i()[m>>>2>>>0]=a.getSeconds(),i()[m+4>>>2>>>0]=a.getMinutes(),i()[m+8>>>2>>>0]=a.getHours(),i()[m+12>>>2>>>0]=a.getDate(),i()[m+16>>>2>>>0]=a.getMonth(),i()[m+20>>>2>>>0]=a.getFullYear()-1900,i()[m+24>>>2>>>0]=a.getDay();var b=(ga(a.getFullYear())?Mf:vf)[a.getMonth()]+a.getDate()-1|0;i()[m+28>>>2>>>0]=b,i()[m+36>>>2>>>0]=-60*a.getTimezoneOffset(),b=new Date(a.getFullYear(),6,1).getTimezoneOffset();var C=new Date(a.getFullYear(),0,1).getTimezoneOffset();a=0|(b!=C&&a.getTimezoneOffset()==Math.min(C,b)),i()[m+32>>>2>>>0]=a}function L_(a){a>>>=0;var m=new Date(i()[a+20>>>2>>>0]+1900,i()[a+16>>>2>>>0],i()[a+12>>>2>>>0],i()[a+8>>>2>>>0],i()[a+4>>>2>>>0],i()[a>>>2>>>0],0),b=i()[a+32>>>2>>>0],C=m.getTimezoneOffset(),B=new Date(m.getFullYear(),6,1).getTimezoneOffset(),pe=new Date(m.getFullYear(),0,1).getTimezoneOffset(),it=Math.min(pe,B);return 0>b?i()[a+32>>>2>>>0]=+(B!=pe&&it==C):0<b!=(it==C)&&(B=Math.max(pe,B),m.setTime(m.getTime()+6e4*((0<b?it:B)-C))),i()[a+24>>>2>>>0]=m.getDay(),b=(ga(m.getFullYear())?Mf:vf)[m.getMonth()]+m.getDate()-1|0,i()[a+28>>>2>>>0]=b,i()[a>>>2>>>0]=m.getSeconds(),i()[a+4>>>2>>>0]=m.getMinutes(),i()[a+8>>>2>>>0]=m.getHours(),i()[a+12>>>2>>>0]=m.getDate(),i()[a+16>>>2>>>0]=m.getMonth(),i()[a+20>>>2>>>0]=m.getYear(),a=m.getTime(),BigInt(isNaN(a)?-1:a/1e3)}function xf(a,m,b,C,B,pe,it){return W?tn(16,1,a,m,b,C,B,pe,it):-52}function Tf(a,m,b,C,B,pe){if(W)return tn(17,1,a,m,b,C,B,pe)}function R_(a,m,b,C){a>>>=0,m>>>=0,b>>>=0,C>>>=0;var B=new Date().getFullYear(),pe=new Date(B,0,1),it=new Date(B,6,1);B=pe.getTimezoneOffset();var mt=it.getTimezoneOffset(),Lt=Math.max(B,mt);u()[a>>>2>>>0]=60*Lt,i()[m>>>2>>>0]=+(B!=mt),pe=(a=Gt=>Gt.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1])(pe),it=a(it),mt<B?(_a(pe,b,17),_a(it,C,17)):(_a(pe,C,17),_a(it,b,17))}var Tp=[],Ef=(a,m)=>{Tp.length=0;for(var b;b=n()[a++>>>0];){var C=b!=105;m+=(C&=b!=112)&&m%8?4:0,Tp.push(b==112?u()[m>>>2>>>0]:b==106?ln[m>>>3]:b==105?i()[m>>>2>>>0]:p()[m>>>3>>>0]),m+=C?8:4}return Tp};function N_(a,m,b){return a>>>=0,m=Ef(m>>>0,b>>>0),up[a](...m)}function j_(a,m,b){return a>>>=0,m=Ef(m>>>0,b>>>0),up[a](...m)}var U_=()=>{},V_=()=>Date.now();function W_(a,m){return Zt(Mn(a>>>0,m>>>0))}var Cf,G_=()=>{throw ks+=1,"unwind"};function q_(){return 4294901760}Cf=()=>performance.timeOrigin+performance.now();var H_=()=>navigator.hardwareConcurrency;function K_(){return ma("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function X_(a){a>>>=0;var m=n().length;if(a<=m||4294901760<a)return!1;for(var b=1;4>=b;b*=2){var C=m*(1+.2/b);C=Math.min(C,a+100663296);var B=Math;C=Math.max(a,C);e:{B=(B.min.call(B,4294901760,C+(65536-C%65536)%65536)-wr.buffer.byteLength+65535)/65536;try{wr.grow(B),gn();var pe=1;break e}catch{}pe=void 0}if(pe)return!0}return!1}var Ec=()=>(ma("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),Ad={},$f=a=>{a.forEach(m=>{Ec()})};function Q_(){var a=Error().stack.toString().split(`
`);return a[0]=="Error"&&a.shift(),$f(a),Ad.Pb=Ec(),Ad.ec=a,Ad.Pb}function Y_(a,m,b){if(a>>>=0,m>>>=0,Ad.Pb==a)var C=Ad.ec;else(C=Error().stack.toString().split(`
`))[0]=="Error"&&C.shift(),$f(C);for(var B=3;C[B]&&Ec()!=a;)++B;for(a=0;a<b&&C[a+B];++a)i()[m+4*a>>>2>>>0]=Ec();return a}var Ep,Cp={},kf=()=>{if(!Ep){var a,m={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:Be};for(a in Cp)Cp[a]===void 0?delete m[a]:m[a]=Cp[a];var b=[];for(a in m)b.push(`${a}=${m[a]}`);Ep=b}return Ep};function Sf(a,m){if(W)return tn(18,1,a,m);a>>>=0,m>>>=0;var b=0;return kf().forEach((C,B)=>{var pe=m+b;for(B=u()[a+4*B>>>2>>>0]=pe,pe=0;pe<C.length;++pe)r()[B++>>>0]=C.charCodeAt(pe);r()[B>>>0]=0,b+=C.length+1}),0}function Pf(a,m){if(W)return tn(19,1,a,m);a>>>=0,m>>>=0;var b=kf();u()[a>>>2>>>0]=b.length;var C=0;return b.forEach(B=>C+=B.length+1),u()[m>>>2>>>0]=C,0}function Af(a){return W?tn(20,1,a):52}function If(a,m,b,C){return W?tn(21,1,a,m,b,C):52}function Ff(a,m,b,C){return W?tn(22,1,a,m,b,C):70}var Z_=[null,[],[]];function Of(a,m,b,C){if(W)return tn(23,1,a,m,b,C);m>>>=0,b>>>=0,C>>>=0;for(var B=0,pe=0;pe<b;pe++){var it=u()[m>>>2>>>0],mt=u()[m+4>>>2>>>0];m+=8;for(var Lt=0;Lt<mt;Lt++){var Gt=n()[it+Lt>>>0],nr=Z_[a];Gt===0||Gt===10?((a===1?ur:Zt)(Kh(nr,0)),nr.length=0):nr.push(Gt)}B+=mt}return u()[C>>>2>>>0]=B,0}var zf=[31,29,31,30,31,30,31,31,30,31,30,31],Bf=[31,28,31,30,31,30,31,31,30,31,30,31],J_=(a,m)=>{r().set(a,m>>>0)};function Df(a,m,b,C){function B(He,$r,sn){for(He=typeof He=="number"?He.toString():He||"";He.length<$r;)He=sn[0]+He;return He}function pe(He,$r){return B(He,$r,"0")}function it(He,$r){function sn(Yf){return 0>Yf?-1:0<Yf?1:0}var Ps;return(Ps=sn(He.getFullYear()-$r.getFullYear()))===0&&(Ps=sn(He.getMonth()-$r.getMonth()))===0&&(Ps=sn(He.getDate()-$r.getDate())),Ps}function mt(He){switch(He.getDay()){case 0:return new Date(He.getFullYear()-1,11,29);case 1:return He;case 2:return new Date(He.getFullYear(),0,3);case 3:return new Date(He.getFullYear(),0,2);case 4:return new Date(He.getFullYear(),0,1);case 5:return new Date(He.getFullYear()-1,11,31);case 6:return new Date(He.getFullYear()-1,11,30)}}function Lt(He){var $r=He.Bb;for(He=new Date(new Date(He.Cb+1900,0,1).getTime());0<$r;){var sn=He.getMonth(),Ps=(ga(He.getFullYear())?zf:Bf)[sn];if(!($r>Ps-He.getDate())){He.setDate(He.getDate()+$r);break}$r-=Ps-He.getDate()+1,He.setDate(1),11>sn?He.setMonth(sn+1):(He.setMonth(0),He.setFullYear(He.getFullYear()+1))}return sn=new Date(He.getFullYear()+1,0,4),$r=mt(new Date(He.getFullYear(),0,4)),sn=mt(sn),0>=it($r,He)?0>=it(sn,He)?He.getFullYear()+1:He.getFullYear():He.getFullYear()-1}a>>>=0,m>>>=0,b>>>=0,C>>>=0;var Gt=u()[C+40>>>2>>>0];for(var nr in C={kc:i()[C>>>2>>>0],jc:i()[C+4>>>2>>>0],Hb:i()[C+8>>>2>>>0],Lb:i()[C+12>>>2>>>0],Ib:i()[C+16>>>2>>>0],Cb:i()[C+20>>>2>>>0],ub:i()[C+24>>>2>>>0],Bb:i()[C+28>>>2>>>0],sc:i()[C+32>>>2>>>0],ic:i()[C+36>>>2>>>0],lc:Gt?Mn(Gt):""},b=Mn(b),Gt={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})b=b.replace(new RegExp(nr,"g"),Gt[nr]);var Sr="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Gr="January February March April May June July August September October November December".split(" ");for(nr in Gt={"%a":He=>Sr[He.ub].substring(0,3),"%A":He=>Sr[He.ub],"%b":He=>Gr[He.Ib].substring(0,3),"%B":He=>Gr[He.Ib],"%C":He=>pe((He.Cb+1900)/100|0,2),"%d":He=>pe(He.Lb,2),"%e":He=>B(He.Lb,2," "),"%g":He=>Lt(He).toString().substring(2),"%G":Lt,"%H":He=>pe(He.Hb,2),"%I":He=>((He=He.Hb)==0?He=12:12<He&&(He-=12),pe(He,2)),"%j":He=>{for(var $r=0,sn=0;sn<=He.Ib-1;$r+=(ga(He.Cb+1900)?zf:Bf)[sn++]);return pe(He.Lb+$r,3)},"%m":He=>pe(He.Ib+1,2),"%M":He=>pe(He.jc,2),"%n":()=>`
`,"%p":He=>0<=He.Hb&&12>He.Hb?"AM":"PM","%S":He=>pe(He.kc,2),"%t":()=>"	","%u":He=>He.ub||7,"%U":He=>pe(Math.floor((He.Bb+7-He.ub)/7),2),"%V":He=>{var $r=Math.floor((He.Bb+7-(He.ub+6)%7)/7);if(2>=(He.ub+371-He.Bb-2)%7&&$r++,$r)$r==53&&((sn=(He.ub+371-He.Bb)%7)==4||sn==3&&ga(He.Cb)||($r=1));else{$r=52;var sn=(He.ub+7-He.Bb-1)%7;(sn==4||sn==5&&ga(He.Cb%400-1))&&$r++}return pe($r,2)},"%w":He=>He.ub,"%W":He=>pe(Math.floor((He.Bb+7-(He.ub+6)%7)/7),2),"%y":He=>(He.Cb+1900).toString().substring(2),"%Y":He=>He.Cb+1900,"%z":He=>{var $r=0<=(He=He.ic);return He=Math.abs(He)/60,($r?"+":"-")+("0000"+(He/60*100+He%60)).slice(-4)},"%Z":He=>He.lc,"%%":()=>"%"},b=b.replace(/%%/g,"\0\0"),Gt)b.includes(nr)&&(b=b.replace(new RegExp(nr,"g"),Gt[nr](C)));return nr=function(He){var $r=Array(fp(He)+1);return Yh(He,$r,0,$r.length),$r}(b=b.replace(/\0\0/g,"%")),nr.length>m?0:(J_(nr,a),nr.length-1)}function eg(a,m,b,C){return Df(a>>>0,m>>>0,b>>>0,C>>>0)}W||function(){for(var a=l.numThreads-1;a--;)Wh();$s.unshift(()=>{Wn++,function(m){W?m():Promise.all(es.map(Vh)).then(m)}(()=>wc())})}();for(var Lf=Array(256),Cc=0;256>Cc;++Cc)Lf[Cc]=String.fromCharCode(Cc);df=Lf,ts=l.BindingError=class extends Error{constructor(a){super(a),this.name="BindingError"}},l.InternalError=class extends Error{constructor(a){super(a),this.name="InternalError"}},Fi.push(0,1,void 0,1,null,1,!0,1,!1,1),l.count_emval_handles=()=>Fi.length/2-5-gp.length;var tg=[pp,Rh,Gh,Xh,Qh,Zh,Jh,ef,tf,rf,nf,sf,of,af,lf,uf,xf,Tf,Sf,Pf,Af,If,Ff,Of],er=function(){function a(b,C){return er=b.exports,er=function(){var B=er,pe={};for(let[it,mt]of Object.entries(B))pe[it]=typeof mt=="function"?(...Lt)=>{vc.push(it);try{return mt(...Lt)}finally{Sn||(vc.pop(),gi&&ns===1&&vc.length===0&&(ns=0,ks+=1,Mc(Hf),typeof Fibers<"u"&&Fibers.tc()))}}:mt;return pe}(),er=function(){var B=er,pe=mt=>Lt=>mt(Lt)>>>0,it=mt=>()=>mt()>>>0;return(B=Object.assign({},B)).Ca=pe(B.Ca),B.fb=it(B.fb),B.hb=pe(B.hb),B.emscripten_main_runtime_thread_id=it(B.emscripten_main_runtime_thread_id),B.sb=pe(B.sb),B.tb=it(B.tb),B}(),Nh.push(er.ib),hn.unshift(er.Ba),Br=C,wc(),er}var m=Dh();if(Wn++,l.instantiateWasm)try{return l.instantiateWasm(m,a)}catch(b){Zt(`Module.instantiateWasm callback failed with error: ${b}`),g(b)}return lp||(lp=l.locateFile?Fh("ort-wasm-simd-threaded.jsep.wasm")?"ort-wasm-simd-threaded.jsep.wasm":l.locateFile?l.locateFile("ort-wasm-simd-threaded.jsep.wasm",dt):dt+"ort-wasm-simd-threaded.jsep.wasm":new URL(z("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),z.b).href),function(b,C){var B=lp;return Rt||typeof WebAssembly.instantiateStreaming!="function"||Fh(B)||Oh(B)||typeof fetch!="function"?Bh(B,b,C):fetch(B,{credentials:"same-origin"}).then(pe=>WebAssembly.instantiateStreaming(pe,b).then(C,function(it){return Zt(`wasm streaming compile failed: ${it}`),Zt("falling back to ArrayBuffer instantiation"),Bh(B,b,C)}))}(m,function(b){a(b.instance,b.module)}).catch(g),{}}(),Rf=a=>(Rf=er.Ca)(a),Nf=()=>(Nf=er.Da)();l._OrtInit=(a,m)=>(l._OrtInit=er.Ea)(a,m),l._OrtGetLastError=(a,m)=>(l._OrtGetLastError=er.Fa)(a,m),l._OrtCreateSessionOptions=(a,m,b,C,B,pe,it,mt,Lt,Gt)=>(l._OrtCreateSessionOptions=er.Ga)(a,m,b,C,B,pe,it,mt,Lt,Gt),l._OrtAppendExecutionProvider=(a,m)=>(l._OrtAppendExecutionProvider=er.Ha)(a,m),l._OrtAddFreeDimensionOverride=(a,m,b)=>(l._OrtAddFreeDimensionOverride=er.Ia)(a,m,b),l._OrtAddSessionConfigEntry=(a,m,b)=>(l._OrtAddSessionConfigEntry=er.Ja)(a,m,b),l._OrtReleaseSessionOptions=a=>(l._OrtReleaseSessionOptions=er.Ka)(a),l._OrtCreateSession=(a,m,b)=>(l._OrtCreateSession=er.La)(a,m,b),l._OrtReleaseSession=a=>(l._OrtReleaseSession=er.Ma)(a),l._OrtGetInputOutputCount=(a,m,b)=>(l._OrtGetInputOutputCount=er.Na)(a,m,b),l._OrtGetInputName=(a,m)=>(l._OrtGetInputName=er.Oa)(a,m),l._OrtGetOutputName=(a,m)=>(l._OrtGetOutputName=er.Pa)(a,m),l._OrtFree=a=>(l._OrtFree=er.Qa)(a),l._OrtCreateTensor=(a,m,b,C,B,pe)=>(l._OrtCreateTensor=er.Ra)(a,m,b,C,B,pe),l._OrtGetTensorData=(a,m,b,C,B)=>(l._OrtGetTensorData=er.Sa)(a,m,b,C,B),l._OrtReleaseTensor=a=>(l._OrtReleaseTensor=er.Ta)(a),l._OrtCreateRunOptions=(a,m,b,C)=>(l._OrtCreateRunOptions=er.Ua)(a,m,b,C),l._OrtAddRunConfigEntry=(a,m,b)=>(l._OrtAddRunConfigEntry=er.Va)(a,m,b),l._OrtReleaseRunOptions=a=>(l._OrtReleaseRunOptions=er.Wa)(a),l._OrtCreateBinding=a=>(l._OrtCreateBinding=er.Xa)(a),l._OrtBindInput=(a,m,b)=>(l._OrtBindInput=er.Ya)(a,m,b),l._OrtBindOutput=(a,m,b,C)=>(l._OrtBindOutput=er.Za)(a,m,b,C),l._OrtClearBoundOutputs=a=>(l._OrtClearBoundOutputs=er._a)(a),l._OrtReleaseBinding=a=>(l._OrtReleaseBinding=er.$a)(a),l._OrtRunWithBinding=(a,m,b,C,B)=>(l._OrtRunWithBinding=er.ab)(a,m,b,C,B),l._OrtRun=(a,m,b,C,B,pe,it,mt)=>(l._OrtRun=er.bb)(a,m,b,C,B,pe,it,mt),l._OrtEndProfiling=a=>(l._OrtEndProfiling=er.cb)(a),l._JsepOutput=(a,m,b)=>(l._JsepOutput=er.db)(a,m,b),l._JsepGetNodeName=a=>(l._JsepGetNodeName=er.eb)(a);var $c,wa=()=>(wa=er.fb)(),wi=l._free=a=>(wi=l._free=er.gb)(a),kc=l._malloc=a=>(kc=l._malloc=er.hb)(a),$p=(a,m,b,C,B,pe)=>($p=er.kb)(a,m,b,C,B,pe),jf=()=>(jf=er.lb)(),Uf=(a,m,b,C,B)=>(Uf=er.mb)(a,m,b,C,B),kp=a=>(kp=er.nb)(a),Sc=a=>(Sc=er.ob)(a),Vf=()=>(Vf=er.pb)(),Wf=(a,m)=>(Wf=er.qb)(a,m),Pc=a=>(Pc=er.rb)(a),Sp=a=>(Sp=er.sb)(a),Pp=()=>(Pp=er.tb)(),Gf=l.dynCall_ii=(a,m)=>(Gf=l.dynCall_ii=er.vb)(a,m),qf=a=>(qf=er.wb)(a),Hf=()=>(Hf=er.xb)(),Kf=a=>(Kf=er.yb)(a),Xf=()=>(Xf=er.zb)();function Qf(){0<Wn||(W?(y(l),W||yc(hn),startWorker(l)):(yc($s),0<Wn||$c||($c=!0,l.calledRun=!0,Sn||(W||yc(hn),y(l),W||yc(xn)))))}return l.___start_em_js=881578,l.___stop_em_js=881800,l.stackSave=()=>Pp(),l.stackRestore=a=>Pc(a),l.stackAlloc=a=>Sp(a),l.UTF8ToString=Mn,l.stringToUTF8=_a,l.lengthBytesUTF8=fp,Ji=function a(){$c||Qf(),$c||(Ji=a)},Qf(),k}),ke=ge,((e=globalThis.self)==null?void 0:e.name)==="em-pthread"&&ge()}),Ye,ht,St,Et,Ot,Tt,Vt,qt,Nt=j(()=>{var e,t;f(),Ye=self.location.href??(typeof document<"u"?(e=document.currentScript)==null?void 0:e.src:typeof self<"u"?(t=self.location)==null?void 0:t.href:void 0),ht=typeof location>"u"?void 0:location.origin,St=(r,n)=>{try{let s=n??Ye;return(s?new URL(r,s):new URL(r)).origin===ht}catch{return!1}},Et=async r=>{let n=await(await fetch(r,{credentials:"same-origin"})).blob();return URL.createObjectURL(n)},Ot=(sr(),R(V)).default,Tt=async()=>{if(!Ye)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(St(Ye))return[void 0,Ot()];let r=await Et(Ye);return[r,Ot(r)]},Vt=(Le(),R(tt)).default,qt=async(r,n,s)=>[void 0,Vt]}),je,Ue,vt,Kt,dr,Er,Vr,br,Ir=j(()=>{Nt(),Ue=!1,vt=!1,Kt=!1,dr=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Er=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Vr=async e=>{if(Ue)return Promise.resolve();if(vt)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Kt)throw new Error("previous call to 'initializeWebAssembly()' failed.");vt=!0;let t=e.initTimeout,r=e.numThreads;if(!Er())throw new Error("WebAssembly SIMD is not supported in the current environment.");let n=dr();r>1&&!n&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+r+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=r=1);let s=e.wasmPaths,o=typeof s=="string"?s:void 0,i=s==null?void 0:s.mjs,u=(i==null?void 0:i.href)??i,c=s==null?void 0:s.wasm,p=(c==null?void 0:c.href)??c,y=e.wasmBinary,[g,l]=await qt(u,o,r>1),k=!1,$=[];if(t>0&&$.push(new Promise(S=>{setTimeout(()=>{k=!0,S()},t)})),$.push(new Promise((S,W)=>{let X={numThreads:r};y?X.wasmBinary=y:(p||o)&&(X.locateFile=(D,se)=>p??(o??se)+D),l(X).then(D=>{vt=!1,Ue=!0,je=D,S(),g&&URL.revokeObjectURL(g)},D=>{vt=!1,Kt=!0,W(D)})})),await Promise.race($),k)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},br=()=>{if(Ue&&je)return je;throw new Error("WebAssembly is not initialized yet.")}}),vr,Cn,qr,vi=j(()=>{Ir(),vr=(e,t)=>{let r=br(),n=r.lengthBytesUTF8(e)+1,s=r._malloc(n);return r.stringToUTF8(e,s,n),t.push(s),s},Cn=(e,t,r,n)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([s,o])=>{let i=t?t+s:s;if(typeof o=="object")Cn(o,i+".",r,n);else if(typeof o=="string"||typeof o=="number")n(i,o.toString());else if(typeof o=="boolean")n(i,o?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof o}`)})},qr=e=>{let t=br(),r=t.stackSave();try{let n=t.stackAlloc(8);t._OrtGetLastError(n,n+4);let s=t.HEAP32[n/4],o=t.HEAPU32[n/4+1],i=o?t.UTF8ToString(o):"";throw new Error(`${e} ERROR_CODE: ${s}, ERROR_MESSAGE: ${i}`)}finally{t.stackRestore(r)}}}),Oi,Kn=j(()=>{Ir(),vi(),Oi=e=>{let t=br(),r=0,n=[],s=e||{};try{if((e==null?void 0:e.logSeverityLevel)===void 0)s.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if((e==null?void 0:e.logVerbosityLevel)===void 0)s.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);(e==null?void 0:e.terminate)===void 0&&(s.terminate=!1);let o=0;return(e==null?void 0:e.tag)!==void 0&&(o=vr(e.tag,n)),r=t._OrtCreateRunOptions(s.logSeverityLevel,s.logVerbosityLevel,!!s.terminate,o),r===0&&qr("Can't create run options."),(e==null?void 0:e.extra)!==void 0&&Cn(e.extra,"",new WeakSet,(i,u)=>{let c=vr(i,n),p=vr(u,n);t._OrtAddRunConfigEntry(r,c,p)!==0&&qr(`Can't set a run config entry: ${i} - ${u}.`)}),[r,n]}catch(o){throw r!==0&&t._OrtReleaseRunOptions(r),n.forEach(i=>t._free(i)),o}}}),zi,Bi,Di,Li,Ri,li=j(()=>{Ir(),vi(),zi=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Bi=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Di=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},Li=(e,t,r)=>{for(let n of t){let s=typeof n=="string"?n:n.name;switch(s){case"webnn":if(s="WEBNN",typeof n!="string"){let i=n==null?void 0:n.deviceType;if(i){let u=vr("deviceType",r),c=vr(i,r);br()._OrtAddSessionConfigEntry(e,u,c)!==0&&qr(`Can't set a session config entry: 'deviceType' - ${i}.`)}}break;case"webgpu":if(s="JS",typeof n!="string"){let i=n;if(i!=null&&i.preferredLayout){if(i.preferredLayout!=="NCHW"&&i.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${i.preferredLayout}`);let u=vr("preferredLayout",r),c=vr(i.preferredLayout,r);br()._OrtAddSessionConfigEntry(e,u,c)!==0&&qr(`Can't set a session config entry: 'preferredLayout' - ${i.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${s}`)}let o=vr(s,r);br()._OrtAppendExecutionProvider(e,o)!==0&&qr(`Can't append execution provider: ${s}.`)}},Ri=e=>{let t=br(),r=0,n=[],s=e||{};Di(s);try{let o=zi(s.graphOptimizationLevel??"all"),i=Bi(s.executionMode??"sequential"),u=typeof s.logId=="string"?vr(s.logId,n):0,c=s.logSeverityLevel??2;if(!Number.isInteger(c)||c<0||c>4)throw new Error(`log serverity level is not valid: ${c}`);let p=s.logVerbosityLevel??0;if(!Number.isInteger(p)||p<0||p>4)throw new Error(`log verbosity level is not valid: ${p}`);let y=typeof s.optimizedModelFilePath=="string"?vr(s.optimizedModelFilePath,n):0;if(r=t._OrtCreateSessionOptions(o,!!s.enableCpuMemArena,!!s.enableMemPattern,i,!!s.enableProfiling,0,u,c,p,y),r===0&&qr("Can't create session options."),s.executionProviders&&Li(r,s.executionProviders,n),s.enableGraphCapture!==void 0){if(typeof s.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${s.enableGraphCapture}`);let g=vr("enableGraphCapture",n),l=vr(s.enableGraphCapture.toString(),n);t._OrtAddSessionConfigEntry(r,g,l)!==0&&qr(`Can't set a session config entry: 'enableGraphCapture' - ${s.enableGraphCapture}.`)}if(s.freeDimensionOverrides)for(let[g,l]of Object.entries(s.freeDimensionOverrides)){if(typeof g!="string")throw new Error(`free dimension override name must be a string: ${g}`);if(typeof l!="number"||!Number.isInteger(l)||l<0)throw new Error(`free dimension override value must be a non-negative integer: ${l}`);let k=vr(g,n);t._OrtAddFreeDimensionOverride(r,k,l)!==0&&qr(`Can't set a free dimension override: ${g} - ${l}.`)}return s.extra!==void 0&&Cn(s.extra,"",new WeakSet,(g,l)=>{let k=vr(g,n),$=vr(l,n);t._OrtAddSessionConfigEntry(r,k,$)!==0&&qr(`Can't set a session config entry: ${g} - ${l}.`)}),[r,n]}catch(o){throw r!==0&&t._OrtReleaseSessionOptions(r),n.forEach(i=>t._free(i)),o}}}),Xn,An,Nn,xi,Dn,Ti,Ei,Ci,rr=j(()=>{Xn=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},An=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},Nn=(e,t)=>{let r=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],n=typeof t=="number"?t:t.reduce((s,o)=>s*o,1);return r>0?Math.ceil(n*r):void 0},xi=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Dn=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Ti=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",Ei=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool",Ci=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),ui,Ni=j(()=>{f(),ui=async e=>{if(typeof e=="string"){let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),n=r?parseInt(r,10):0;if(n<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let s=t.body.getReader(),o;try{o=new ArrayBuffer(n)}catch(u){if(u instanceof RangeError){let c=Math.ceil(n/65536);o=new WebAssembly.Memory({initial:c,maximum:c}).buffer}else throw u}let i=0;for(;;){let{done:u,value:c}=await s.read();if(u)break;let p=c.byteLength;new Uint8Array(o,i,p).set(c),i+=p}return new Uint8Array(o,0,n)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),ji,$i,Ui,Vi,di,Wi,me,w=j(()=>{rr(),ji=["V","I","W","E","F"],$i=(e,t)=>{console.log(`[${ji[e]},${new Date().toISOString()}]${t}`)},di=(e,t)=>{Ui=e,Vi=t},Wi=(e,t)=>{let r=Dn(e),n=Dn(Ui);r>=n&&$i(r,typeof t=="function"?t():t)},me=(...e)=>{Vi&&Wi(...e)}}),L,te=j(()=>{rr(),L=(e,t)=>new(xi(t))(e)}),_e=j(()=>{}),Ce,rt,Ct,zt,It,jt,or,Fr,mr,Hr=j(()=>{w(),_e(),Ce=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),rt=[],Ct=e=>Math.ceil(e/16)*16,zt=e=>{for(let t=0;t<rt.length;t++){let r=rt[t];if(e<=r)return r}return Math.ceil(e/16)*16},It=1,jt=()=>It++,or=async(e,t,r,n)=>{let s=Ct(r),o=e.device.createBuffer({size:s,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let i=e.getCommandEncoder();e.endComputePass(),i.copyBufferToBuffer(t,0,o,0,s),e.flush(),await o.mapAsync(GPUMapMode.READ);let u=o.getMappedRange();if(n){let c=n();return c.set(new Uint8Array(u,0,r)),c}else return new Uint8Array(u.slice(0,r))}finally{o.destroy()}},Fr=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[t]of Ce)rt.push(t),this.freeBuffers.set(t,[]),this.freeUniformBuffers.set(t,[]);this.sessionCount=0}upload(e,t){let r=t.buffer,n=t.byteOffset,s=t.byteLength,o=Ct(s),i=this.storageCache.get(e);if(!i)throw new Error("gpu data for uploading does not exist");if(i.originalSize!==s)throw new Error(`inconsistent data size. gpu data size=${i.originalSize}, data size=${s}`);let u=this.backend.device.createBuffer({mappedAtCreation:!0,size:o,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),c=u.getMappedRange();new Uint8Array(c).set(new Uint8Array(r,n,s)),u.unmap();let p=this.backend.getCommandEncoder();this.backend.endComputePass(),p.copyBufferToBuffer(u,0,i.gpuData.buffer,0,o),me("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`),this.buffersForUploadingPending.push(u)}memcpy(e,t){let r=this.storageCache.get(e);if(!r)throw new Error("source gpu data for memcpy does not exist");let n=this.storageCache.get(t);if(!n)throw new Error("destination gpu data for memcpy does not exist");if(r.originalSize!==n.originalSize)throw new Error("inconsistent source and destination gpu data size");let s=Ct(r.originalSize),o=this.backend.getCommandEncoder();this.backend.endComputePass(),o.copyBufferToBuffer(r.gpuData.buffer,0,n.gpuData.buffer,0,s)}registerExternalBuffer(e,t,r){let n;if(r){if(n=r[0],e===r[1])return me("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${n}, buffer is the same, skip.`),n;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else n=jt();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:e},originalSize:t}),me("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${n}, registered.`),n}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),me("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let r=zt(e),n,s=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,o=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(s||o){let u=(s?this.freeBuffers:this.freeUniformBuffers).get(r);u?u.length>0?n=u.pop():n=this.backend.device.createBuffer({size:r,usage:t}):n=this.backend.device.createBuffer({size:r,usage:t})}else n=this.backend.device.createBuffer({size:r,usage:t});let i={id:jt(),type:0,buffer:n};return this.storageCache.set(i.id,{gpuData:i,originalSize:e}),me("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${i.id}`),i}get(e){var t;return(t=this.storageCache.get(e))==null?void 0:t.gpuData}release(e){let t=this.storageCache.get(e);if(!t){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return me("verbose",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,t){let r=this.storageCache.get(e);if(!r)throw new Error("data does not exist");await or(this.backend,r.gpuData.buffer,r.originalSize,t)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let t=Ce.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let r=this.freeBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let r=this.freeUniformBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let t=this.capturedPendingBuffers.get(e);t&&(t.forEach(r=>{r.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,this.sessionCount===0&&(me("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(r=>{r.gpuData.buffer.destroy()}),this.storageCache=new Map)}},mr=(...e)=>new Fr(...e)}),rn,hr,Or=j(()=>{rn=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},hr=e=>new rn(e)}),wn,vn,Oe,nn,dn,In,jn,Jt=j(()=>{wn=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},vn=class{static calcShape(e,t,r=!1){let n=e.length,s=t.length;if(n===0)return t;if(s===0)return e;let o=Math.max(e.length,t.length),i=new Array(o);if(r){if(n<2||s<2)return;let u=wn.calcMatMulShape([e[n-2],e[n-1]],[t[s-2],t[s-1]]);if(u===void 0)return;[i[o-2],i[o-1]]=u}for(let u=r?3:1;u<=o;u++){let c=n-u<0?1:e[n-u],p=s-u<0?1:t[s-u];if(c!==p&&c>1&&p>1)return;let y=Math.max(c,p);if(c&&p)i[o-u]=Math.max(c,p);else{if(y>1)return;i[o-u]=0}}return i}static isValidBroadcast(e,t){let r=e.length,n=t.length;if(r>n)return!1;for(let s=1;s<=r;s++)if(e[r-s]!==1&&e[r-s]!==t[n-s])return!1;return!0}},Oe=class Ac{static size(t){return Ac.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let n=t.length;if(n===0)return[];let s=new Array(n),o=n-1;for(;o>=0;){if(t[o]%r===0){s[o]=t[o]/r;break}if(r%t[o]!==0)throw new Error("cannot convert shape");s[o]=1,r/=t[o],o--}for(o--;o>=0;o--)s[o]=t[o];return s}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return Ac.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return Ac.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,n){let s=1;for(let o=r;o<n;o++){if(t[o]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");s*=t[o]}return s}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let n=new Array(r);n[r-1]=1,n[r-2]=t[r-1];for(let s=r-3;s>=0;--s)n[s]=n[s+1]*t[s+1];return n}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(n=>this.normalizeAxis(n,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(n=>t[n]):t.slice().reverse()}static padShape(t,r){let n=t.length;return t.map((s,o)=>s+r[o]+r[o+n])}static areEqual(t,r){return t.length!==r.length?!1:t.every((n,s)=>n===r[s])}},nn=class Id{static adjustPoolAttributes(t,r,n,s,o,i){if(!t&&n.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let u=0;u<r.length-2;u++)u>=n.length?n.push(r[u+2]):n[u]=r[u+2];for(let u=0;u<n.length;u++)if(u<s.length){if(s[u]<0)throw new Error("strides should be greater than or equal to 1")}else s.push(1);for(let u=0;u<n.length;u++)if(u<o.length){if(o[u]<0)throw new Error("dilations should be greater than or equal to 1")}else o.push(1);for(let u=0;u<n.length*2;u++)if(u<i.length){if(i[u]<0)throw new Error("pad should be greater than or equal to 1")}else i.push(0);for(let u=0;u<n.length;u++){if(n[u]<=0)throw new Error("kernel shapes need to be greater than 0");if(i[u]>=n[u]||i[u+n.length]>=n[u])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,n,s,o,i,u){if(u){if(o.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(s.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let c=0;c<t.length-2;c++)Id.adjustPadAndReturnShape(t[c+(i?1:2)],r[c],n[c],s[c],o,c,c+t.length-2,u)}}static computePoolOutputShape(t,r,n,s,o,i,u){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let c=[r[0],r[1]];return Id.computeShapeHelper(t,r,c,n,s,o,i,u),c}static computeConvOutputShape(t,r,n,s,o,i,u){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let c=[t[0],r[0]];return Id.computeShapeHelper(!1,t,c,n,s,o,i,u),c}static computeShapeHelper(t,r,n,s,o,i,u,c){if(t)for(let p=0;p<r.length-2;p++)n.push(1);else for(let p=0;p<r.length-2;p++)n.push(Id.adjustPadAndReturnShape(r[p+2],s[p],o[p],i[p],u,p,p+r.length-2,c))}static adjustPadAndReturnShape(t,r,n,s,o,i,u,c){let p=n*(s-1)+1;if(c&&c!=="NOTSET")switch(c){case"VALID":return o[i]=0,o[u]=0,Math.floor((t-p)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(n!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let y=((t+r-1)/r-1)*r+s-t;return o[i]=Math.floor(c==="SAME_LOWER"?(y+1)/2:y/2),o[u]=y-o[i],Math.floor((t+y-s)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+o[i]+o[u]-p)/r+1)}},dn=class{static getShapeOfGemmResult(e,t,r,n,s){if(e.length!==2||r.length!==2)throw new Error("shape need to be of size 2");let o,i,u;t?(o=e[1],i=e[0]):(o=e[0],i=e[1]);let c=-1;if(n?(u=r[0],c=1):(u=r[1],c=0),r[c]!==i)throw new Error("dimension mismatch");if(o<=0||u<=0||i<=0)throw new Error("invalid shape specified");if(s&&!vn.isValidBroadcast(s,[o,u]))throw new Error("gemm: invalid bias shape for broadcast");return[o,u,i]}},In=-34028234663852886e22,jn=34028234663852886e22}),fn,Jr,yr,Dr,Bt,Mr,ci,Qn,Un,Xt,os,ut,Yt,zs,Bs,ba,ki,gr=j(()=>{rr(),Jt(),fn=64,Jr=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},yr=(e,t=1)=>{let r=Jr(e,t);return typeof r=="string"?r:r[0]},Dr=(e,t=1)=>{let r=Jr(e,t);return typeof r=="string"?r:r[1]},Bt=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:Oe.computeStrides(r)})}),t},Mr=e=>e%4===0?4:e%2===0?2:1,ci=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,Qn=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}<f32>(${r})`,Un=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,Xt=(e,t,r,n)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?n==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:n==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,os=(e,t,r,n,s)=>{let o=typeof r=="number",i=o?r:r.length,u=[...new Array(i).keys()],c=i<2?"u32":i<=4?`vec${i}<u32>`:`array<u32, ${i}>`,p=Jr(t,s),y=typeof p=="string"?p:p[1],g=typeof p=="string"?p:p[0],l={indices:c,value:y,storage:g,tensor:t},k=nt=>typeof nt=="string"?nt:`${nt}u`,$={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},S=o?"uniforms.":"",W=`${S}${e}_shape`,X=`${S}${e}_strides`,D="";for(let nt=0;nt<i-1;nt++)D+=`
    let dim${nt} = current / ${Xt(X,nt,i)};
    let rest${nt} = current % ${Xt(X,nt,i)};
    indices[${nt}] = dim${nt};
    current = rest${nt};
    `;D+=`indices[${i-1}] = current;`;let se=i<2?"":`
  fn o2i_${e}(offset: u32) -> ${l.indices} {
    var indices: ${l.indices};
    var current = offset;
    ${D}
    return indices;
  }`,le=nt=>($.offsetToIndices=!0,i<2?nt:`o2i_${e}(${nt})`),he=[];if(i>=2)for(let nt=i-1;nt>=0;nt--)he.push(`${Xt(X,nt,i)} * (indices[${nt}])`);let Be=i<2?"":`
  fn i2o_${e}(indices: ${l.indices}) -> u32 {
    return ${he.join("+")};
  }`,Re=nt=>($.indicesToOffset=!0,i<2?nt:`i2o_${e}(${nt})`),dt=(...nt)=>i===0?"0u":`${l.indices}(${nt.map(k).join(",")})`,Rt=(nt,At)=>i<2?`${nt}`:`${Xt(nt,At,i)}`,Wt=(nt,At,lr)=>i<2?`${nt}=${lr};`:`${Xt(nt,At,i)}=${lr};`,pr={},ur=(nt,At)=>{$.broadcastedIndicesToOffset=!0;let lr=`${At.name}broadcastedIndicesTo${e}Offset`;if(lr in pr)return`${lr}(${nt})`;let Ur=[];for(let an=i-1;an>=0;an--){let ln=At.indicesGet("outputIndices",an+At.rank-i);Ur.push(`${Rt(X,an)} * (${ln} % ${Rt(W,an)})`)}return pr[lr]=`fn ${lr}(outputIndices: ${At.type.indices}) -> u32 {
             return ${Ur.length>0?Ur.join("+"):"0u"};
           }`,`${lr}(${nt})`},Zt=(nt,At)=>(()=>{if(l.storage===l.value)return`${e}[${nt}]=${At};`;if(l.storage==="vec2<u32>"&&l.value==="i32")return`${e}[${nt}]=vec2<u32>(u32(${At}), select(0u, 0xFFFFFFFFu, ${At} < 0));`;if(l.storage==="vec2<u32>"&&l.value==="u32")return`${e}[${nt}]=vec2<u32>(u32(${At}), 0u);`;if(l.storage==="u32"&&l.value==="vec4<bool>")return`${e}[${nt}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${At}));`;throw new Error(`not supported combination of storage type ${l.storage} and value type ${l.value} yet`)})(),Ar=nt=>(()=>{if(l.storage===l.value)return`${e}[${nt}]`;if(l.storage==="vec2<u32>"&&l.value==="i32")return`i32(${e}[${nt}].x)`;if(l.storage==="vec2<u32>"&&l.value==="u32")return`u32(${e}[${nt}].x)`;if(l.storage==="u32"&&l.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${nt}] & 0xFFu), bool(${e}[${nt}] & 0xFF00u), bool(${e}[${nt}] & 0xFF0000u), bool(${e}[${nt}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${l.storage} and value type ${l.value} yet`)})(),Wr=i<2?"":`
  fn get_${e}ByIndices(indices: ${l.indices}) -> ${y} {
    return ${Ar(`i2o_${e}(indices)`)};
  }`,wr=i<2?"":(()=>{let nt=u.map(lr=>`d${lr}: u32`).join(", "),At=u.map(lr=>`d${lr}`).join(", ");return`
  fn get_${e}(${nt}) -> ${y} {
    return get_${e}ByIndices(${dt(At)});
  }`})(),Br=(...nt)=>{if(nt.length!==i)throw new Error(`indices length must be ${i}`);let At=nt.map(k).join(",");return i===0?Ar("0u"):i===1?Ar(At[0]):($.get=!0,$.getByIndices=!0,$.indicesToOffset=!0,`get_${e}(${At})`)},Qt=nt=>i<2?Ar(nt):($.getByIndices=!0,$.indicesToOffset=!0,`get_${e}ByIndices(${nt})`),tr=i<2?"":`
  fn set_${e}ByIndices(indices: ${l.indices}, value: ${y}) {
    ${Zt(`i2o_${e}(indices)`,"value")}
  }`,kr=i<2?"":(()=>{let nt=u.map(lr=>`d${lr}: u32`).join(", "),At=u.map(lr=>`d${lr}`).join(", ");return`
  fn set_${e}(${nt}, value: ${y}) {
    set_${e}ByIndices(${dt(At)}, value);
  }`})();return{impl:()=>{let nt=[],At=!1;return $.offsetToIndices&&(nt.push(se),At=!0),$.indicesToOffset&&(nt.push(Be),At=!0),$.broadcastedIndicesToOffset&&(Object.values(pr).forEach(lr=>nt.push(lr)),At=!0),$.set&&(nt.push(kr),At=!0),$.setByIndices&&(nt.push(tr),At=!0),$.get&&(nt.push(wr),At=!0),$.getByIndices&&(nt.push(Wr),At=!0),!o&&At&&nt.unshift(`const ${W} = ${l.indices}(${r.join(",")});`,`const ${X} = ${l.indices}(${Oe.computeStrides(r).join(",")});`),nt.join(`
`)},type:l,offsetToIndices:le,indicesToOffset:Re,broadcastedIndicesToOffset:ur,indices:dt,indicesGet:Rt,indicesSet:Wt,set:(...nt)=>{if(nt.length!==i+1)throw new Error(`indices length must be ${i}`);let At=nt[i];if(typeof At!="string")throw new Error("value must be string");let lr=nt.slice(0,i).map(k).join(",");return i===0?Zt("0u",At):i===1?Zt(lr[0],At):($.set=!0,$.setByIndices=!0,$.indicesToOffset=!0,`set_${e}(${lr}, ${At})`)},setByOffset:Zt,setByIndices:(nt,At)=>i<2?Zt(nt,At):($.setByIndices=!0,$.indicesToOffset=!0,`set_${e}ByIndices(${nt}, ${At});`),get:Br,getByOffset:Ar,getByIndices:Qt,usage:n,name:e,strides:X,shape:W,rank:i}},ut=(e,t,r,n=1)=>os(e,t,r,"input",n),Yt=(e,t,r,n=1)=>os(e,t,r,"output",n),zs=(e,t,r,n=1)=>os(e,t,r,"internal",n),Bs=class{constructor(e,t){this.normalizedDispatchGroup=e,this.limits=t,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=fn){let t=typeof e=="number"?e:e[0],r=typeof e=="number"?1:e[1],n=typeof e=="number"?1:e[2];if(t>this.limits.maxComputeWorkgroupSizeX||r>this.limits.maxComputeWorkgroupSizeY||n>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${t}, ${r}, ${n}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(t*r*n>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${t}, ${r}, ${n}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let s=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,o=s?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,i=s?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${t*r*n}u + local_idx;`;return`@compute @workgroup_size(${t}, ${r}, ${n})
  fn main(${o}) {
    ${i}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,t){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let r=e.usage==="input"?"read":"read_write",n=e.type.storage;return`@group(0) @binding(${t}) var<storage, ${r}> ${e.name}: array<${n}>;`}declareVariables(...e){return e.map(t=>this.declareVariable(t,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(e,t,r=1){return this.uniforms.push({name:e,type:t,length:r}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:t,type:r,length:n}of this.uniforms)if(n&&n>4)r==="f16"?e.push(`@align(16) ${t}:array<mat2x4<${r}>, ${Math.ceil(n/8)}>`):e.push(`${t}:array<vec4<${r}>, ${Math.ceil(n/4)}>`);else{let s=n==null||n===1?r:`vec${n}<${r}>`;e.push(`${t}:${s}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=t=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(t)];return this.uniforms.map(t=>[e(t.type),t.length??1])}},ba=(e,t)=>new Bs(e,t),ki=(e,t)=>{let r=e.length,n=[];for(let s=0;s<r;s++){let o=r-1-s,i=e[o]||1;(t[t.length-1-s]||1)>1&&i===1&&n.unshift(o)}return n}}),Ma,Ds,pi,va,zd,Tn,Bd,xa,Vn=j(()=>{rr(),Jt(),Or(),gr(),Ma=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},Ds=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,pi=(e,t)=>Oe.sortBasedOnPerm(e,Ds(e.length,t)),va=(e,t,r,n)=>{let s=`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`;for(let o=0;o<t;++o)s+=r.indicesSet("a",e[o],`i[${o}]`);return s+="return a;}"},zd=(e,t)=>{let r=[],n=[];for(let s=0;s<e.length;++s)e[s]!==1&&r.push(e[s]),e[t[s]]!==1&&n.push(t[s]);return{newShape:r,newPerm:n}},Tn=(e,t)=>{let r=e.dataType,n=e.dims.length,s=Ds(n,t),o=pi(e.dims,s),{newShape:i,newPerm:u}=zd(e.dims,s),c=Oe.areEqual(u,[2,3,1]),p=Oe.areEqual(u,[3,1,2]),y=i.length===2&&u[0]>u[1]||c||p,g=y?i:e.dims,l=o;y&&(g=c?[i[0],i[1]*i[2]]:p?[i[0]*i[1],i[2]]:i,l=[g[1],g[0]]);let k=ut("a",r,g.length),$=Yt("output",r,l.length),S=16,W;return y?W=X=>`
  ${X.registerUniform("output_size","u32").declareVariables(k,$)}
  var<workgroup> tile : array<array<${$.type.value}, ${S+1}>, ${S}>;
  ${X.mainStart([S,S,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${S} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${S}u + local_id.x;
    let input_row = workgroup_id_x * ${S}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${k.getByIndices(`${k.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${S}u + local_id.x;
    let output_row = workgroup_id_y * ${S}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${$.setByIndices(`${$.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`:W=X=>`
  ${X.registerUniform("output_size","u32").declareVariables(k,$)}

  ${va(s,n,k,$)}

  ${X.mainStart()}
    ${X.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${$.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${$.setByOffset("global_idx",k.getByIndices("aIndices"))}
  }`,{name:y?"TransposeShared":"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:()=>{let X=Oe.size(o);return{outputs:[{dims:o,dataType:e.dataType}],dispatchGroup:y?{x:Math.ceil(l[1]/S),y:Math.ceil(l[0]/S)}:{x:Math.ceil(X/64)},programUniforms:[{type:12,data:X},...Bt(g,l)]}},getShaderSource:W}},Bd=(e,t)=>{Ma(e.inputs),e.compute(Tn(e.inputs[0],t.perm))},xa=e=>hr({perm:e.perm})}),Ta,Ea,Ca,$a,ka,Ls,Sa,Pa,Rs,Aa,Fn,Ns,Ia,Fa,js,Oa,za,Us,Ba,Da,Vs,Dd=j(()=>{rr(),Jt(),gr(),Js(),Vn(),Ta={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Ea={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Ca={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},$a={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},ka=(e,t)=>{let r=[];for(let n=t-e;n<t;++n)r.push(n);return r},Ls=(e,t)=>{let r=[],n=e.length;for(let o=0;o<n;o++)t.indexOf(o)===-1&&r.push(e[o]);let s=t.map(o=>e[o]);return[r,s]},Sa=(e,t)=>{let r=e.length+t.length,n=[],s=0;for(let o=0;o<r;o++)t.indexOf(o)===-1?n.push(e[s++]):n.push(1);return n},Pa=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},Rs=(e,t)=>{let r=[];if(!Pa(e,t)){for(let n=0;n<t;++n)e.indexOf(n)===-1&&r.push(n);e.forEach(n=>r.push(n))}return r},Aa=(e,t,r,n,s,o,i)=>{let u=r[0].dims,c=Oe.size(o),p=Oe.size(i),y=ut("_A",r[0].dataType,u),g=Yt("output",s,o),l=32,k=`
          var<workgroup> aBestValues : array<f32, ${l}>;
       `;return{name:e,shaderCache:t,getShaderSource:$=>`
        ${$.registerUniform("reduceSize","u32").declareVariables(y,g)}
        ${k}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${$.mainStart(l)}

          let outputIndex = global_idx / ${l};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${Ca[n]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${l}) {
           let candidate = f32(${y.getByOffset("offset + k")});
           bestValue = ${Ta[n]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${l}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${Ea[n]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${g.setByOffset("outputIndex",`${n==="mean"?`${g.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${g.type.storage}(${$a[n]})`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:o,dataType:s}],dispatchGroup:{x:c},programUniforms:[{type:12,data:p}]})}},Fn=(e,t,r,n)=>{let s=e.inputs.length===1?r:Gs(e.inputs,r),o=s.axes;o.length===0&&!s.noopWithEmptyAxes&&(o=e.inputs[0].dims.map((k,$)=>$));let i=Oe.normalizeAxes(o,e.inputs[0].dims.length),u=i,c=e.inputs[0],p=Rs(u,e.inputs[0].dims.length);p.length>0&&(c=e.compute(Tn(e.inputs[0],p),{inputs:[0],outputs:[-1]})[0],u=ka(u.length,c.dims.length));let[y,g]=Ls(c.dims,u),l=y;s.keepDims&&(l=Sa(y,i)),e.compute(Aa(t,{hint:s.cacheKey,inputDependencies:["type"]},[c],n,e.inputs[0].dataType,l,g),{inputs:[c]})},Ns=(e,t)=>{Fn(e,"ReduceMeanShared",t,"mean")},Ia=(e,t)=>{Fn(e,"ReduceL1Shared",t,"l1")},Fa=(e,t)=>{Fn(e,"ReduceL2Shared",t,"l2")},js=(e,t)=>{Fn(e,"ReduceLogSumExpShared",t,"logSumExp")},Oa=(e,t)=>{Fn(e,"ReduceMaxShared",t,"max")},za=(e,t)=>{Fn(e,"ReduceMinShared",t,"min")},Us=(e,t)=>{Fn(e,"ReduceProdShared",t,"prod")},Ba=(e,t)=>{Fn(e,"ReduceSumShared",t,"sum")},Da=(e,t)=>{Fn(e,"ReduceSumSquareShared",t,"sumSquare")},Vs=(e,t)=>{Fn(e,"ReduceLogSumShared",t,"logSum")}}),On,Ws,as,Gs,$n,La,Ra,qs,Na,ja,Hs,Ua,Va,Ks,Wa,zn,Xs,Ga,qa,Qs,Ha,Ka,Ys,Xa,Qa,Zs,Js=j(()=>{rr(),Jt(),Or(),gr(),Dd(),On=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Ws=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],as=(e,t,r,n,s,o,i=!1,u=!1)=>{let c=[],p=r[0].dims,y=p.length,g=Oe.normalizeAxes(s,y),l=!u&&g.length===0;p.forEach((S,W)=>{l||g.indexOf(W)>=0?i&&c.push(1):c.push(S)});let k=c.length,$=Oe.size(c);return{name:e,shaderCache:t,getShaderSource:S=>{let W=[],X=ut("_A",r[0].dataType,y),D=Yt("output",o,k),se=n(X,D,g),le=se[2];for(let he=0,Be=0;he<y;he++)l||g.indexOf(he)>=0?(i&&Be++,le=`for(var j${he}: u32 = 0; j${he} < ${p[he]}; j${he}++) {
                  ${se[2].includes("last_index")?`let last_index = j${he};`:""}
                  ${X.indicesSet("input_indices",he,`j${he}`)}
                  ${le}
                }`):(W.push(`${X.indicesSet("input_indices",he,D.indicesGet("output_indices",Be))};`),Be++);return`

        ${S.registerUniform("output_size","u32").declareVariables(X,D)}

        ${S.mainStart()}
          ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${X.type.indices};
          let output_indices = ${D.offsetToIndices("global_idx")};

          ${W.join(`
`)}
          ${se[0]}       // init ops for reduce max/min
          ${se[1]}
          ${le}
          ${se[3]}
          ${se.length===4?D.setByOffset("global_idx","value"):se.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:c,dataType:o}],dispatchGroup:{x:Math.ceil($/64)},programUniforms:[{type:12,data:$},...Bt(p,c)]})}},Gs=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(n=>r.push(Number(n))),hr({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},$n=(e,t,r,n)=>{let s=e.inputs,o=s.length===1?r:Gs(s,r);e.compute(as(t,{hint:o.cacheKey,inputDependencies:["rank"]},[s[0]],o.noopWithEmptyAxes&&o.axes.length===0?Ws:n,o.axes,s[0].dataType,o.keepDims,o.noopWithEmptyAxes),{inputs:[0]})},La=(e,t)=>{On(e.inputs),$n(e,"ReduceLogSum",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,"value = log(value);"])},Ra=(e,t)=>{On(e.inputs),$n(e,"ReduceL1",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += abs(${r.getByIndices("input_indices")});`,""])},qs=(e,t)=>{On(e.inputs),$n(e,"ReduceL2",t,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Na=(e,t)=>{On(e.inputs),$n(e,"ReduceLogSumExp",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += exp(${r.getByIndices("input_indices")});`,"value = log(value);"])},ja=(e,t)=>{On(e.inputs),$n(e,"ReduceMax",t,(r,n,s)=>{let o=[];for(let i=0;i<r.rank;i++)(s.indexOf(i)>=0||s.length===0)&&o.push(r.indicesSet("input_indices",i,0));return[`${o.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = max(value, ${r.getByIndices("input_indices")});`,""]})},Hs=(e,t)=>{On(e.inputs),$n(e,"ReduceMean",t,(r,n,s)=>{let o=1;for(let i=0;i<r.rank;i++)(s.indexOf(i)>=0||s.length===0)&&(o*=e.inputs[0].dims[i]);return["var sum = f32(0);","",`sum += f32(${r.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${o});`]})},Ua=(e,t)=>{On(e.inputs),$n(e,"ReduceMin",t,(r,n,s)=>{let o=[];for(let i=0;i<r.rank;i++)(s.indexOf(i)>=0||s.length===0)&&o.push(`input_indices[${i}] = 0;`);return[`${o.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = min(value, ${r.getByIndices("input_indices")});`,""]})},Va=(e,t)=>{On(e.inputs),$n(e,"ReduceProd",t,(r,n)=>[`var value = ${n.type.storage}(1);`,"",`value *= ${r.getByIndices("input_indices")};`,""])},Ks=(e,t)=>{On(e.inputs),$n(e,"ReduceSum",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,""])},Wa=(e,t)=>{On(e.inputs),$n(e,"ReduceSumSquare",t,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += t * t;`,""])},zn=(e,t,r)=>{if(t.length===0)return r;let n=1,s=1;for(let o=0;o<t.length;o++)t.indexOf(o)===-1?n*=e[o]:s*=e[o];return s<32&&n>1024},Xs=(e,t)=>{zn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Hs(e,t):Ns(e,t)},Ga=(e,t)=>{zn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ra(e,t):Ia(e,t)},qa=(e,t)=>{zn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?qs(e,t):Fa(e,t)},Qs=(e,t)=>{zn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Na(e,t):js(e,t)},Ha=(e,t)=>{zn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ja(e,t):Oa(e,t)},Ka=(e,t)=>{zn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ua(e,t):za(e,t)},Ys=(e,t)=>{zn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Va(e,t):Us(e,t)},Xa=(e,t)=>{zn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ks(e,t):Ba(e,t)},Qa=(e,t)=>{zn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Wa(e,t):Da(e,t)},Zs=(e,t)=>{zn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?La(e,t):Vs(e,t)}}),eo,to,Ya,ro,Za=j(()=>{rr(),Or(),Js(),eo=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},to=(e,t)=>{eo(e.inputs);let r=(n,s,o)=>{let i=[];for(let u=0;u<n.rank;u++)(o.indexOf(u)>=0||o.length===0)&&i.push(`input_indices[${u}] = 0;`);return[`${i.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",s.setByOffset("global_idx","best_index")]};e.compute(as("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Ya=(e,t)=>{eo(e.inputs);let r=(n,s,o)=>{let i=[];for(let u=0;u<n.rank;u++)(o.indexOf(u)>=0||o.length===0)&&i.push(`input_indices[${u}] = 0;`);return[`${i.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",s.setByOffset("global_idx","best_index")]};e.compute(as("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ro=e=>hr(e)}),Ja,ls,no,el,tl,Si,rl,nl,us=j(()=>{rr(),Jt(),_e(),gr(),Ja=(e,t)=>{let r=e[0],n=e[1],s=e[2],o=e[3],i=e[4],u=e[5];if(i&&u)throw new Error("Attention cannot have both past and attention_bias");if(r.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let c=r.dims[0],p=r.dims[1],y=r.dims[2];if(s.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(n.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(n.dims[0]!==y)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(s.dims[0]!==n.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let g=s.dims[0]/3,l=g,k=l;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let se of t.qkvHiddenSizes)if(se%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");g=t.qkvHiddenSizes[0],l=t.qkvHiddenSizes[1],k=t.qkvHiddenSizes[2]}let $=p;if(g!==l)throw new Error("qkv_hidden_sizes first element should be same as the second");if(s.dims[0]!==g+l+k)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let S=0;if(i){if(l!==k)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(i.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(i.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(i.dims[1]!==c)throw new Error('Input "past" second dimension must be batch_size');if(i.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(i.dims[4]!==l/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(S=i.dims[3])}let W=$+S,X=-1,D=0;if(o)throw new Error("Mask not supported");if(i)throw new Error("past is not supported");if(u){if(u.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(u.dims[0]!==c||u.dims[1]!==t.numHeads||u.dims[2]!==p||u.dims[3]!==W)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:c,sequenceLength:p,pastSequenceLength:S,kvSequenceLength:$,totalSequenceLength:W,maxSequenceLength:X,inputHiddenSize:y,hiddenSize:g,vHiddenSize:k,headSize:Math.floor(g/t.numHeads),vHeadSize:Math.floor(k/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:D,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},ls=(e,t,r)=>t&&e?`
      let total_sequence_length_input = u32(${t.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${e==null?void 0:e.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${r?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,no=(e,t,r,n,s,o,i,u)=>{let c=Mr(i?1:o),p=64,y=o/c;y<p&&(p=32);let g=Math.ceil(o/c/p),l=[{type:12,data:t},{type:12,data:r},{type:12,data:n},{type:12,data:s},{type:12,data:y},{type:12,data:g}],k=yr(e.dataType,c),$=Dr(1,c),S=["type"];i&&S.push("type"),u&&S.push("type");let W=X=>{let D=Yt("x",e.dataType,e.dims,c),se=[D],le=i?ut("seq_lens",i.dataType,i.dims):void 0;le&&se.push(le);let he=u?ut("total_sequence_length_input",u.dataType,u.dims):void 0;he&&se.push(he);let Be=Dr(e.dataType),Re=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${p}>;
  var<workgroup> thread_sum: array<f32, ${p}>;
  ${X.registerUniforms(Re).declareVariables(...se)}
  ${X.mainStart([p,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${ls(le,he,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${p}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${i?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${$}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${$}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(c){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${c}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${p}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${$}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${$}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(c){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${c}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${p}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${D.type.value}(${Be}(1.0) / ${Be}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${$}(x[offset + i]);
        x[offset + i] = ${D.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${i?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${D.type.value}(${Be}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${p};${k};${c}`,inputDependencies:S},getShaderSource:W,getRunData:()=>({outputs:[],dispatchGroup:{x:Math.ceil(o/p),y:s,z:t*r},programUniforms:l})}},el=(e,t,r,n,s,o,i,u,c)=>{let p=i+o.kvSequenceLength,y=[o.batchSize,o.numHeads,o.sequenceLength,p],g=e>1&&n,l=o.kvNumHeads?o.kvNumHeads:o.numHeads,k=g?[o.batchSize,l,p,o.headSize]:void 0,$=o.nReps?o.nReps:1,S=o.scale===0?1/Math.sqrt(o.headSize):o.scale,W=Mr(o.headSize),X=o.headSize/W,D=12,se={x:Math.ceil(p/D),y:Math.ceil(o.sequenceLength/D),z:o.batchSize*o.numHeads},le=[{type:12,data:o.sequenceLength},{type:12,data:X},{type:12,data:p},{type:12,data:o.numHeads},{type:12,data:o.headSize},{type:1,data:S},{type:12,data:i},{type:12,data:o.kvSequenceLength},{type:12,data:$}],he=g&&n&&Oe.size(n.dims)>0,Be=["type","type"];he&&Be.push("type"),s&&Be.push("type"),u&&Be.push("type"),c&&Be.push("type");let Re=[{dims:y,dataType:t.dataType,gpuDataType:0}];g&&Re.push({dims:k,dataType:t.dataType,gpuDataType:0});let dt=Rt=>{let Wt=ut("q",t.dataType,t.dims,W),pr=ut("key",r.dataType,r.dims,W),ur=[Wt,pr];if(he){let tr=ut("past_key",n.dataType,n.dims,W);ur.push(tr)}s&&ur.push(ut("attention_bias",s.dataType,s.dims));let Zt=u?ut("seq_lens",u.dataType,u.dims):void 0;Zt&&ur.push(Zt);let Ar=c?ut("total_sequence_length_input",c.dataType,c.dims):void 0;Ar&&ur.push(Ar);let Wr=Yt("output",t.dataType,y),wr=[Wr];g&&wr.push(Yt("present_key",t.dataType,k,W));let Br=Dr(1,W),Qt=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${D}u;

  var<workgroup> tileQ: array<${Wt.type.storage}, ${D*D}>;
  var<workgroup> tileK: array<${Wt.type.storage}, ${D*D}>;
  ${Rt.registerUniforms(Qt).declareVariables(...ur,...wr)}
  ${Rt.mainStart([D,D,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${$===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${$===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${ls(Zt,Ar,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${he&&g?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${g?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${Br}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${he&&g?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${g?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${Br}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(W){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${W}`)}})()};
        output[outputIdx] = ${Wr.type.value} (sum * uniforms.alpha) + ${s?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${W};${s!==void 0};${n!==void 0};${e}`,inputDependencies:Be},getRunData:()=>({outputs:Re,dispatchGroup:se,programUniforms:le}),getShaderSource:dt}},tl=(e,t,r,n,s,o,i=void 0,u=void 0)=>{let c=o+s.kvSequenceLength,p=s.nReps?s.nReps:1,y=s.vHiddenSize*p,g=e>1&&n,l=s.kvNumHeads?s.kvNumHeads:s.numHeads,k=g?[s.batchSize,l,c,s.headSize]:void 0,$=[s.batchSize,s.sequenceLength,y],S=12,W={x:Math.ceil(s.vHeadSize/S),y:Math.ceil(s.sequenceLength/S),z:s.batchSize*s.numHeads},X=[{type:12,data:s.sequenceLength},{type:12,data:c},{type:12,data:s.vHeadSize},{type:12,data:s.numHeads},{type:12,data:s.headSize},{type:12,data:y},{type:12,data:o},{type:12,data:s.kvSequenceLength},{type:12,data:p}],D=g&&n&&Oe.size(n.dims)>0,se=["type","type"];D&&se.push("type"),i&&se.push("type"),u&&se.push("type");let le=[{dims:$,dataType:t.dataType,gpuDataType:0}];g&&le.push({dims:k,dataType:t.dataType,gpuDataType:0});let he=Be=>{let Re=ut("probs",t.dataType,t.dims),dt=ut("v",r.dataType,r.dims),Rt=[Re,dt];D&&Rt.push(ut("past_value",n.dataType,n.dims));let Wt=i?ut("seq_lens",i.dataType,i.dims):void 0;i&&Rt.push(Wt);let pr=u?ut("total_sequence_length_input",u.dataType,u.dims):void 0;u&&Rt.push(pr);let ur=[Yt("output",t.dataType,$)];g&&ur.push(Yt("present_value",t.dataType,k));let Zt=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${S}u;
  var<workgroup> tileQ: array<${Re.type.value}, ${S*S}>;
  var<workgroup> tileV: array<${Re.type.value}, ${S*S}>;
  ${Be.registerUniforms(Zt).declareVariables(...Rt,...ur)}
  ${Be.mainStart([S,S,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${p===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${p===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${ls(Wt,pr,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${D&&g?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${g?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${Re.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${D&&g?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${g?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${n!==void 0};${e}`,inputDependencies:se},getRunData:()=>({outputs:le,dispatchGroup:W,programUniforms:X}),getShaderSource:he}},Si=(e,t,r,n,s,o,i,u,c,p,y=void 0,g=void 0)=>{let l=Math.min(e.outputCount,1+(i?1:0)+(u?1:0)),k=l>1?p.pastSequenceLength:0,$=k+p.kvSequenceLength,S=c&&Oe.size(c.dims)>0?c:void 0,W=[t,r];l>1&&i&&Oe.size(i.dims)>0&&W.push(i),S&&W.push(S),y&&W.push(y),g&&W.push(g);let X=e.compute(el(l,t,r,i,S,p,k,y,g),{inputs:W,outputs:l>1?[-1,1]:[-1]})[0];e.compute(no(X,p.batchSize,p.numHeads,k,p.sequenceLength,$,y,g),{inputs:y&&g?[X,y,g]:[X],outputs:[]});let D=[X,n];l>1&&u&&Oe.size(u.dims)>0&&D.push(u),y&&D.push(y),g&&D.push(g),e.compute(tl(l,X,n,u,p,k,y,g),{inputs:D,outputs:l>1?[0,2]:[0]})},rl=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],n=t.sequenceLength,s=t.inputHiddenSize,o=t.headSize,i=12,u={x:Math.ceil(t.headSize/i),y:Math.ceil(t.sequenceLength/i),z:t.batchSize*t.numHeads},c=[e.inputs[0],e.inputs[1],e.inputs[2]],p=[{type:12,data:n},{type:12,data:s},{type:12,data:o},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],y=g=>{let l=Yt("output_q",c[0].dataType,r),k=Yt("output_k",c[0].dataType,r),$=Yt("output_v",c[0].dataType,r),S=ut("input",c[0].dataType,c[0].dims),W=ut("weight",c[1].dataType,c[1].dims),X=ut("bias",c[2].dataType,c[2].dims),D=S.type.storage,se=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${i}u;
  var<workgroup> tileInput: array<${D}, ${i*i}>;
  var<workgroup> tileWeightQ: array<${D}, ${i*i}>;
  var<workgroup> tileWeightK: array<${D}, ${i*i}>;
  var<workgroup> tileWeightV: array<${D}, ${i*i}>;
  ${g.registerUniforms(se).declareVariables(S,W,X,l,k,$)}
  ${g.mainStart([i,i,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${D}(0);
    var valueK = ${D}(0);
    var valueV = ${D}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:u,programUniforms:p}),getShaderSource:y},{inputs:c,outputs:[-1,-1,-1]})},nl=(e,t)=>{let r=Ja(e.inputs,t),[n,s,o]=rl(e,r);return Si(e,n,s,o,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r)}}),il,sl,io,ol,Ld=j(()=>{d(),rr(),Jt(),Or(),gr(),il=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(n,s,o)=>{let i=s.length;if(i!==n.length)throw new Error(`${o}: num dimensions != ${i}`);s.forEach((u,c)=>{if(u!==n[c])throw new Error(`${o}: dim[${c}] do not match`)})};if(e[0].dims.length>1){let n=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,n,"Invalid input scale"),r(e[2].dims,n,"Invalid input B"),r(e[3].dims,n,"Invalid input mean"),r(e[4].dims,n,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},sl=(e,t)=>{let{epsilon:r,spatial:n,format:s}=t,o=e[0].dims,i=n?Mr(o[o.length-1]):1,u=s==="NHWC"&&o.length>1?i:1,c=Oe.size(o)/i,p=n,y=p?o.length:o,g=ut("x",e[0].dataType,e[0].dims,i),l=ut("scale",e[1].dataType,e[1].dims,u),k=ut("bias",e[2].dataType,e[2].dims,u),$=ut("inputMean",e[3].dataType,e[3].dims,u),S=ut("inputVar",e[4].dataType,e[4].dims,u),W=Yt("y",e[0].dataType,y,i),X=()=>{let se="";if(n)se=`let cOffset = ${o.length===1?"0u":s==="NHWC"?`outputIndices[${o.length-1}] / ${i}`:"outputIndices[1]"};`;else if(s==="NCHW")se=`
            ${W.indicesSet("outputIndices","0","0")}
            let cOffset = ${W.indicesToOffset("outputIndices")};`;else{se=`var cIndices = ${l.type.indices}(0);
                       cIndices[0] = outputIndices[${o.length-1}];`;for(let le=1;le<l.rank;le++)se+=`cIndices[${le}] = outputIndices[${le}];`;se+=`let cOffset = ${l.indicesToOffset("cIndices")};`}return se},D=se=>`
  const epsilon = ${r};
  ${se.registerUniform("outputSize","u32").declareVariables(g,l,k,$,S,W)}
  ${se.mainStart()}
  ${se.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${W.offsetToIndices(`global_idx * ${i}`)};
    ${X()}
    let scale = ${l.getByOffset("cOffset")};
    let bias = ${k.getByOffset("cOffset")};
    let inputMean = ${$.getByOffset("cOffset")};
    let inputVar = ${S.getByOffset("cOffset")};
    let x = ${g.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${W.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${n}_${i}`,inputDependencies:p?["rank","type","type","type","type"]:void 0},getShaderSource:D,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:p?[{type:12,data:c},...Bt(o)]:[{type:12,data:c}]})}},io=e=>hr(e),ol=(e,t)=>{let{inputs:r,outputCount:n}=e,s=io({...t,outputCount:n});if(P.webgpu.validateInputContent&&il(r,s),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(sl(r,s))}}),so,al,ll,Rd=j(()=>{Jt(),gr(),so=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},al=e=>{let t=e[0].dims,r=e[0].dims[2],n=Oe.size(t)/4,s=e[0].dataType,o=ut("input",s,t,4),i=ut("bias",s,[r],4),u=ut("residual",s,t,4),c=Yt("output",s,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:p=>`
  const channels = ${r}u / 4;
  ${p.declareVariables(o,i,u,c)}

  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let value = ${o.getByOffset("global_idx")}
      + ${i.getByOffset("global_idx % channels")} + ${u.getByOffset("global_idx")};
    ${c.setByOffset("global_idx","value")}
  }`}},ll=e=>{so(e.inputs),e.compute(al(e.inputs))}}),ul,Cr,dl,cl,pl,hl,oo,fl,ml,_l,gl,ao,wl,yl,lo,bl,Gi,uo,ds,Ml,co,vl,xl,po,Tl,El,cs,Cl,$l,ho,fo,kl,mo,Sl,Pl,_o,go,wo,yo,Al,bo,Il,Fl,Mo,Ol,vo=j(()=>{rr(),Jt(),Or(),gr(),ul=(e,t,r,n,s,o,i)=>{let u=Math.ceil(t/4),c="";typeof s=="string"?c=`${s}(a)`:c=s("a");let p=ut("inputData",r,[u],4),y=Yt("outputData",n,[u],4),g=[{name:"vec_size",type:"u32"}];return i&&g.push(...i),`
      ${e.registerUniforms(g).declareVariables(p,y)}

  ${o??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${p.getByOffset("global_idx")};
    ${y.setByOffset("global_idx",c)}
  }`},Cr=(e,t,r,n,s,o=e.dataType,i,u)=>{let c=[{type:12,data:Math.ceil(Oe.size(e.dims)/4)}];return i&&c.push(...i),{name:t,shaderCache:{hint:s,inputDependencies:["type"]},getShaderSource:p=>ul(p,Oe.size(e.dims),e.dataType,o,r,n,u),getRunData:p=>({outputs:[{dims:e.dims,dataType:o}],dispatchGroup:{x:Math.ceil(Oe.size(p[0].dims)/64/4)},programUniforms:c})}},dl=e=>{e.compute(Cr(e.inputs[0],"Abs","abs"))},cl=e=>{e.compute(Cr(e.inputs[0],"Acos","acos"))},pl=e=>{e.compute(Cr(e.inputs[0],"Acosh","acosh"))},hl=e=>{e.compute(Cr(e.inputs[0],"Asin","asin"))},oo=e=>{e.compute(Cr(e.inputs[0],"Asinh","asinh"))},fl=e=>{e.compute(Cr(e.inputs[0],"Atan","atan"))},ml=e=>{e.compute(Cr(e.inputs[0],"Atanh","atanh"))},_l=e=>hr(e),gl=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(Cr(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},ao=e=>{let t,r,n=e.length>=2&&e[1].data!==0,s=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:t=n?e[1].getFloat32Array()[0]:-34028234663852886e22,r=s?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:t=n?e[1].getUint16Array()[0]:64511,r=s?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return hr({min:t,max:r})},wl=(e,t)=>{let r=t||ao(e.inputs),n=Dr(e.inputs[0].dataType);e.compute(Cr(e.inputs[0],"Clip",s=>`clamp(${s}, vec4<${n}>(uniforms.min), vec4<${n}>(uniforms.max))`,void 0,r.cacheKey,void 0,[{type:e.inputs[0].dataType,data:r.min},{type:e.inputs[0].dataType,data:r.max}],[{name:"min",type:n},{name:"max",type:n}]),{inputs:[0]})},yl=e=>{e.compute(Cr(e.inputs[0],"Ceil","ceil"))},lo=e=>{e.compute(Cr(e.inputs[0],"Cos","cos"))},bl=e=>{e.compute(Cr(e.inputs[0],"Cosh","cosh"))},Gi=e=>hr(e),uo=(e,t)=>{let r=Dr(e.inputs[0].dataType);e.compute(Cr(e.inputs[0],"Elu",n=>`elu_vf32(${n})`,`
  const elu_alpha_ = ${r}(${t.alpha});

  fn elu_f32(a: ${r}) -> ${r} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,t.cacheKey))},ds=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Ml=e=>{let t=Dr(e.inputs[0].dataType);e.compute(Cr(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,ds(t)))},co=e=>{e.compute(Cr(e.inputs[0],"Exp","exp"))},vl=e=>{e.compute(Cr(e.inputs[0],"Floor","floor"))},xl=e=>{let t=Dr(e.inputs[0].dataType);e.compute(Cr(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,ds(t)))},po=(e,t)=>{let r=Dr(e.inputs[0].dataType);e.compute(Cr(e.inputs[0],"LeakyRelu",n=>`select(leaky_relu_alpha_ * ${n}, ${n}, ${n} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},Tl=e=>{e.compute(Cr(e.inputs[0],"Not",t=>`!${t}`))},El=e=>{e.compute(Cr(e.inputs[0],"Neg",t=>`-${t}`))},cs=e=>{e.compute(Cr(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},Cl=e=>{let t=Dr(e.inputs[0].dataType);e.compute(Cr(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},$l=e=>{e.compute(Cr(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},ho=e=>hr(e),fo=(e,t)=>{let r=Dr(e.inputs[0].dataType);e.compute(Cr(e.inputs[0],"HardSigmoid",n=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${n} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},kl=e=>{e.compute(Cr(e.inputs[0],"Sin","sin"))},mo=e=>{e.compute(Cr(e.inputs[0],"Sinh","sinh"))},Sl=e=>{e.compute(Cr(e.inputs[0],"Sqrt","sqrt"))},Pl=e=>{e.compute(Cr(e.inputs[0],"Tan","tan"))},_o=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,go=e=>{e.compute(Cr(e.inputs[0],"Tanh",_o))},wo=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${_o("v")};
}
`,yo=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Al=e=>{let t=Dr(e.inputs[0].dataType);e.compute(Cr(e.inputs[0],"FastGelu",yo,wo(t),void 0,e.inputs[0].dataType))},bo=(e,t)=>{let r=Dr(e.inputs[0].dataType);return e.compute(Cr(e.inputs[0],"ThresholdedRelu",n=>`select(vec4<${r}>(0.0), ${n}, ${n} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},Il=e=>{e.compute(Cr(e.inputs[0],"Log","log"))},Fl=(e,t)=>`
const alpha = vec4<${e}>(${t});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,Mo=e=>`quick_gelu_impl(${e})`,Ol=(e,t)=>{let r=Dr(e.inputs[0].dataType);e.compute(Cr(e.inputs[0],"QuickGelu",Mo,Fl(r,t.alpha),t.cacheKey,e.inputs[0].dataType))}}),xo,zl,Bl,Dl=j(()=>{Jt(),gr(),vo(),xo=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},zl=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=ut("input",e[0].dataType,e[0].dims,4),n=ut("bias",e[0].dataType,[e[0].dims[2]],4),s=Yt("output",e[0].dataType,t,4),o=Oe.size(t)/4,i=yr(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:u=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${u.declareVariables(r,n,s)}

  ${ds(i)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes(o)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${s.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Bl=e=>{xo(e.inputs),e.compute(zl(e.inputs))}}),Ll,Rl,kn,Nl,jl,To,Ul,Vl,Wl,Gl,ps,ql,Hl,Nd=j(()=>{rr(),Jt(),gr(),Ll=(e,t,r,n,s,o,i,u,c,p,y,g)=>{let l,k;typeof u=="string"?l=k=(D,se)=>`${u}((${D}),(${se}))`:typeof u=="function"?l=k=u:(l=u.scalar,k=u.vector);let $=Yt("outputData",y,n.length,4),S=ut("aData",c,t.length,4),W=ut("bData",p,r.length,4),X;if(s)if(o){let D=Oe.size(t)===1,se=Oe.size(r)===1,le=t.length>0&&t[t.length-1]%4===0,he=r.length>0&&r[r.length-1]%4===0;D||se?X=$.setByOffset("global_idx",k(D?`${S.type.value}(${S.getByOffset("0")}.x)`:S.getByOffset("global_idx"),se?`${W.type.value}(${W.getByOffset("0")}.x)`:W.getByOffset("global_idx"))):X=`
            let outputIndices = ${$.offsetToIndices("global_idx * 4u")};
            let offsetA = ${S.broadcastedIndicesToOffset("outputIndices",$)};
            let offsetB = ${W.broadcastedIndicesToOffset("outputIndices",$)};
            ${$.setByOffset("global_idx",k(i||le?S.getByOffset("offsetA / 4u"):`${S.type.value}(${S.getByOffset("offsetA / 4u")}[offsetA % 4u])`,i||he?W.getByOffset("offsetB / 4u"):`${W.type.value}(${W.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else X=$.setByOffset("global_idx",k(S.getByOffset("global_idx"),W.getByOffset("global_idx")));else{if(!o)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let D=(se,le,he="")=>{let Be=`aData[indexA${le}][componentA${le}]`,Re=`bData[indexB${le}][componentB${le}]`;return`
            let outputIndices${le} = ${$.offsetToIndices(`global_idx * 4u + ${le}u`)};
            let offsetA${le} = ${S.broadcastedIndicesToOffset(`outputIndices${le}`,$)};
            let offsetB${le} = ${W.broadcastedIndicesToOffset(`outputIndices${le}`,$)};
            let indexA${le} = offsetA${le} / 4u;
            let indexB${le} = offsetB${le} / 4u;
            let componentA${le} = offsetA${le} % 4u;
            let componentB${le} = offsetB${le} % 4u;
            ${se}[${le}] = ${he}(${l(Be,Re)});
          `};y===9?X=`
            var data = vec4<u32>(0);
            ${D("data",0,"u32")}
            ${D("data",1,"u32")}
            ${D("data",2,"u32")}
            ${D("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:X=`
            ${D("outputData[global_idx]",0)}
            ${D("outputData[global_idx]",1)}
            ${D("outputData[global_idx]",2)}
            ${D("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(S,W,$)}

        ${g??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${X}
      }`},Rl=(e,t,r,n,s,o,i=r.dataType)=>{let u=!Oe.areEqual(r.dims,n.dims),c=r.dims,p=Oe.size(r.dims),y=!1,g=!1,l=[u];if(u){let k=vn.calcShape(r.dims,n.dims,!1);if(!k)throw new Error("Can't perform binary op on the given tensors");c=k,p=Oe.size(c);let $=Oe.size(r.dims)===1,S=Oe.size(n.dims)===1,W=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,X=n.dims.length>0&&n.dims[n.dims.length-1]%4===0;l.push($),l.push(S),l.push(W),l.push(X);let D=1;for(let se=1;se<c.length;se++){let le=r.dims[r.dims.length-se]??1,he=n.dims[n.dims.length-se]??1;if(le===he)D*=le;else break}D%4===0?(g=!0,y=!0):($||S||W||X)&&(y=!0)}else y=!0;return l.push(y),{name:e,shaderCache:{hint:t+l.map(k=>k.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:k=>Ll(k,r.dims,n.dims,c,y,u,g,s,r.dataType,n.dataType,i,o),getRunData:()=>({outputs:[{dims:c,dataType:i}],dispatchGroup:{x:Math.ceil(p/64/4)},programUniforms:[{type:12,data:Math.ceil(Oe.size(c)/4)},...Bt(r.dims,n.dims,c)]})}},kn=(e,t,r,n,s,o)=>{e.compute(Rl(t,s??"",e.inputs[0],e.inputs[1],r,n,o))},Nl=e=>{kn(e,"Add",(t,r)=>`${t}+${r}`)},jl=e=>{kn(e,"Div",(t,r)=>`${t}/${r}`)},To=e=>{kn(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Ul=e=>{kn(e,"Mul",(t,r)=>`${t}*${r}`)},Vl=e=>{let t=ut("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;kn(e,"Pow",{scalar:(r,n)=>`pow_custom(${r},${n})`,vector:(r,n)=>`pow_vector_custom(${r},${n})`},`
    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {
      if (b == ${t}(0.0)) {
        return ${t}(1.0);
      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {
        return ${t}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {
      // TODO: implement vectorized pow
      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},Wl=e=>{kn(e,"Sub",(t,r)=>`${t}-${r}`)},Gl=e=>{kn(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},ps=e=>{kn(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},ql=e=>{kn(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},Hl=e=>{kn(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}}),Kl,Xl,Eo,Ql,Yl,Co,jd=j(()=>{rr(),Jt(),Or(),gr(),Kl=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let r=0,n=e[r],s=n.dataType,o=n.dims.length;e.forEach((i,u)=>{if(u!==r){if(i.dataType!==s)throw new Error("input tensors should be one type");if(i.dims.length!==o)throw new Error("input tensors should have the same shape");i.dims.forEach((c,p)=>{if(p!==t&&c!==n.dims[p])throw new Error("non concat dimensions must match")})}})},Xl=(e,t)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${t});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,Eo=(e,t)=>{let r=e.length,n=[];for(let s=0;s<r;++s){let o=t.setByOffset("global_idx",e[s].getByIndices("indices"));r===1?n.push(o):s===0?n.push(`if (inputIndex == ${s}u) { ${o} }`):s===r-1?n.push(`else { ${o} }`):n.push(`else if (inputIndex == ${s}) { ${o} }`)}return n.join(`
`)},Ql=(e,t,r,n)=>{let s=Oe.size(r),o=new Array(e.length),i=new Array(e.length),u=0,c=[],p=[],y=[{type:12,data:s}];for(let S=0;S<e.length;++S)u+=e[S].dims[t],o[S]=u,p.push(e[S].dims.length),i[S]=ut(`input${S}`,n,p[S]),c.push("rank"),y.push({type:12,data:o[S]});for(let S=0;S<e.length;++S)y.push(...Bt(e[S].dims));y.push(...Bt(r));let g=Yt("output",n,r.length),l=g.indicesGet("indices",t),k=Array.from(Array(o.length).keys()).map(S=>`uniforms.sizeInConcatAxis${S}`).join(","),$=S=>`

  ${(()=>{S.registerUniform("outputSize","u32");for(let W=0;W<e.length;W++)S.registerUniform(`sizeInConcatAxis${W}`,"u32");return S.declareVariables(...i,g)})()}

  ${Xl(o.length,k)}

  ${S.mainStart()}
    ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${g.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${l});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${o.length}u>(${k});
      ${l} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${Eo(i,g)}
  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:c},getRunData:()=>({outputs:[{dims:r,dataType:n}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:y}),getShaderSource:$}},Yl=(e,t)=>{let r=e.inputs,n=r[0].dims,s=Oe.normalizeAxis(t.axis,n.length);Kl(r,s);let o=n.slice();o[s]=r.reduce((u,c)=>u+(c.dims.length>s?c.dims[s]:0),0);let i=r.filter(u=>Oe.size(u.dims)>0);e.compute(Ql(i,s,o,r[0].dataType),{inputs:i})},Co=e=>hr({axis:e.axis})}),Yn,Zn,Jn,hs,ei=j(()=>{rr(),Jt(),Yn=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},Zn=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},Jn=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},hs=e=>{let t=(e==null?void 0:e.activation)||"";if(t==="HardSigmoid"){let[r,n]=(e==null?void 0:e.activation_params)||[.2,.5];return{activation:t,alpha:r,beta:n}}else if(t==="Clip"){let[r,n]=(e==null?void 0:e.activation_params)||[In,jn];return{activation:t,clipMax:n,clipMin:r}}else if(t==="LeakyRelu"){let[r]=(e==null?void 0:e.activation_params)||[.01];return{activation:t,alpha:r}}return{activation:t}}}),mn,fs,ms=j(()=>{mn=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},fs=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),$o,ko=j(()=>{$o=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),Zl,Jl,qi,So,eu,_s,tu,Po,gs=j(()=>{rr(),Jt(),gr(),ei(),ms(),Zl=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${t?", batchIndices":""});
        `,Jl=(e,t)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,qi=(e,t,r="f32",n,s=!1,o=32,i=!1,u=32)=>{let c=t[1]*e[1],p=t[0]*e[0],y=s?c:o,g=s?o:c,l=y/t[0],k=o/t[1];if(!((s&&l===4&&e[1]===4||!s&&(l===3||l===4))&&y%t[0]===0&&o%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${s} is true, innerElementSize ${l} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${l} must be 3 or 4.
  tileAWidth ${y} must be divisible by workgroupSize[0]${t[0]}. tileInner ${o} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${l}<${r}>, ${y/l}>, ${g}>;
var<workgroup> mm_Bsub: array<array<vec4<${r}>, ${p/e[0]}>, ${o}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${l};
const tileInner = ${o};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${i?"0":"i32(globalId.z)"};
  ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${c};

  let num_tiles = ${i?`${Math.ceil(u/o)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${i?`i32(globalId.z) * ${u}`:"0"};

  var acc: array<vec4<${r}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${k};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Zl(s,n)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${k}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${n?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${l===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${Jl(s,l)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},So=(e,t)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${t?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${t?", batchIndices":""});
            `,eu=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",_s=(e,t,r="f32",n,s=!1,o=32,i=!1,u=32,c=!1)=>{let p=e[1]*t[1],y=e[0]*t[0],g=s?p:o,l=s?o:p;if(!(l%t[1]===0&&g%t[0]===0&&o%t[1]===0))throw new Error(`tileAHight ${l} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${g} must be divisible by workgroupSize[0]${t[0]}, tileInner ${o} must be divisible by workgroupSize[1]${t[1]}`);let k=l/t[1],$=g/t[0],S=o/t[1],W=c?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${p};
    let globalColStart = i32(workgroupId.x) * ${y};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${l}; inputRow = inputRow + ${t[1]}) {
        for (var inputCol = localCol; inputCol < ${g}; inputCol = inputCol + ${t[0]}) {
          ${So(s,n)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${o}; inputRow = inputRow + ${t[1]}) {
            for (var inputCol = localCol; inputCol < ${y}; inputCol = inputCol + ${t[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${n?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${r}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${s?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${t[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${t[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${p};

let tileRowA = i32(localId.y) * ${k};
let tileColA = i32(localId.x) * ${$};
let tileRowB = i32(localId.y) * ${S};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${k}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${$}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${So(s,n)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${S}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${n?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${r}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${eu(s)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${r}, ${g}>, ${l}>;
  var<workgroup> mm_Bsub : array<array<${r}, ${y}>, ${o}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${o};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${i?"0":"i32(globalId.z)"};
    ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${i?`${Math.ceil(u/o)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${i?`i32(globalId.z) * ${u}`:"0"};

    var acc : array<array<${r}, colPerThread>, rowPerThread>;
    ${W}
  }
`},tu=(e,t,r,n,s,o=!1)=>{let[i,u,c]=s,[p,y,g,l]=n,k=ki(i,c),$=ki(u,c),S=yr(n[0].type.tensor),W=()=>{let D=y.rank,se=p.rank,le=`var aIndices: ${y.type.indices};`;for(let he=D-2-1,Be=se-1;he>=0;he--,Be--)le+=`
aIndices[${he}] = ${se>1?`batchIndices[${Be}]`:"batchIndices"};`;return k.forEach(he=>{le+=`
aIndices[${he}] = 0;`}),le+=`
aIndices[${D-2}] = u32(row);
                   aIndices[${D-1}] = u32(colIn);`,le},X=()=>{let D=g.rank,se=p.rank,le=`var bIndices: ${g.type.indices};`;for(let he=D-2-1,Be=se-1;he>=0;he--,Be--)le+=`
bIndices[${he}] = ${se>1?`batchIndices[${Be}]`:"batchIndices"};`;return $.forEach(he=>{le+=`
bIndices[${he}] = 0;`}),le+=`
bIndices[${D-2}] = u32(row);
                   bIndices[${D-1}] = u32(colIn);`,le};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${p.type.indices}) -> ${mn(e,S)} {
      var value = ${mn(e,S)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${W()}
        value = ${y.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${p.type.indices}) -> ${mn(e,S)} {
      var value = ${mn(e,S)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${X()}
        value = ${g.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${mn(e,S)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${t?`value = value + ${o?"bias[colIn]":`${mn(e,S)}(bias[row])`};`:""}
        ${r}
        ${l.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},Po=(e,t,r,n,s=!1,o)=>{let i=e[0].dims,u=e[1].dims,c=i.slice(0,-2),p=u.slice(0,-2),y=n?n.slice(0,-2):r.slice(0,-2),g=Oe.size(y),l=i[i.length-2],k=i[i.length-1],$=u[u.length-1],S=k%4===0&&$%4===0,W=l<=8?[4,1,1]:[4,4,1],X=[8,8,1],D=[Math.ceil($/X[0]/W[0]),Math.ceil(l/X[1]/W[1]),Math.ceil(g/X[2]/W[2])],se=S?4:1,le=[...c,l,k/se],he=le.length,Be=[...p,k,$/se],Re=Be.length,dt=[g,l,$/se],Rt=[{type:6,data:l},{type:6,data:$},{type:6,data:k}];Zn(t,Rt),Rt.push(...Bt(y,le,Be));let Wt=["rank","rank"],pr=e.length>2;pr&&(Rt.push(...Bt(e[2].dims)),Wt.push("rank")),Rt.push(...Bt(dt));let ur=Zt=>{let Ar=y.length,Wr=zs("batchDims",e[0].dataType,Ar,1),wr=yr(e[0].dataType),Br=ut("a",e[0].dataType,he,se),Qt=ut("b",e[1].dataType,Re,se),tr=Yt("result",e[0].dataType,dt.length,se),kr=[Br,Qt];if(pr){let an=s?se:1;kr.push(ut("bias",e[2].dataType,e[2].dims.length,an))}let nt=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Jn(t,nt);let At=yr(tr.type.tensor),lr=Yn(t,tr.type.value,At),Ur=tu(se,pr,lr,[Wr,Br,Qt,tr],[c,p,y],s);return`
  ${Zt.registerUniforms(nt).registerInternalVariables(Wr).declareVariables(...kr,tr)}
  ${Ur}
  ${S?qi(W,X,wr,Wr):_s(W,X,wr,Wr)}
                   `};return{name:"MatMul",shaderCache:{hint:`${W};${t.activation};${S};${s}`,inputDependencies:Wt},getRunData:()=>({outputs:[{dims:o?o(r):r,dataType:e[0].dataType}],dispatchGroup:{x:D[0],y:D[1],z:D[2]},programUniforms:Rt}),getShaderSource:ur}}}),Ao,ru,Ud=j(()=>{rr(),w(),gr(),ei(),ms(),ko(),gs(),Ao=(e,t,r,n,s=!1,o,i=4,u=4,c=4,p="f32")=>{let y=Rt=>{switch(Rt){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${p}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${Rt} is not supported.`)}},g=Rt=>{switch(Rt){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${Rt} is not supported.`)}},l=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,k=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,$=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",S=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",W=e?"row":"col",X=e?"col":"row",D=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${W} / outWidth;
    let outCol = ${W} % outWidth;

    let WRow = ${X} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${X} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${X} % inChannels;
    var resData = ${mn(i,p)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${$} && xCol >= 0 && xCol < ${S}) {
      ${l}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${y(i)}
    }
    return resData;`,se=e?t&&n?`
    let col = colIn * ${i};
    ${D}`:`
    let col = colIn * ${i};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${D}
    }
    return ${mn(i,p)}(0.0);`:n&&r?`
    let col = colIn * ${i};
    ${D}`:`
    let col = colIn * ${i};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${D}
    }
    return ${mn(i,p)}(0.0);`,le=`${g(u)}`,he=mn(c,p),Be=mn(e?i:u,p),Re=mn(e?u:i,p),dt=Yn(o,he,p);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${Be} {
      ${e?se:le}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${Re} {
      ${e?le:se}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${he}) {
      let col = colIn * ${c};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${k}
      ${fs(s)}
      ${dt}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},ru=(e,t,r,n,s,o,i,u,c)=>{let p=t.format==="NHWC",y=p?e[0].dims[3]:e[0].dims[1],g=r[0],l=p?r[2]:r[3],k=p?r[1]:r[2],$=p?r[3]:r[1],S=p&&(y%4===0||y%3===0)&&$%4===0,W=p?$:l*k,X=p?l*k:$,D=[8,8,1],se=n<=8?[4,1,1]:[4,4,1],le=[Math.ceil(W/D[0]/se[0]),Math.ceil(X/D[1]/se[1]),Math.ceil(g/D[2]/se[2])];me("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${le}`);let he=S?p&&y%4!==0?3:4:1,Be=D[1]*se[1],Re=D[0]*se[0],dt=Math.max(D[0]*he,D[1]),Rt=n%Be===0,Wt=s%Re===0,pr=o%dt===0,ur=S?[he,4,4]:[1,1,1],Zt=[{type:6,data:n},{type:6,data:s},{type:6,data:o},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];Zn(t,Zt),Zt.push(...Bt(e[0].dims,e[1].dims));let Ar=["rank","rank"];i&&(Zt.push(...Bt(e[2].dims)),Ar.push("rank")),Zt.push(...Bt(r));let Wr=wr=>{let Br=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Jn(t,Br);let Qt=S?4:1,tr=yr(e[0].dataType),kr=`
      fn setOutputAtIndex(flatIndex : i32, value : ${S?`vec4<${tr}>`:tr}) {
        result[flatIndex] = ${S?`vec4<${tr}>`:tr}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${S?`vec4<${tr}>`:tr}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${S?"/ 4":""}, value);
      }`,nt=ut("x",e[0].dataType,e[0].dims.length,he===3?1:he),At=ut("w",e[1].dataType,e[1].dims.length,Qt),lr=[nt,At],Ur=Yt("result",e[0].dataType,r.length,Qt);if(i){let an=ut("bias",e[2].dataType,e[2].dims.length,Qt);lr.push(an),kr+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${S?`vec4<${tr}>`:tr} {
          return bias[coords.${p?"w":"y"}${S?"/ 4":""}];
        }`}return`
        ${$o("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${wr.registerUniforms(Br).declareVariables(...lr,Ur)}
        ${kr}
        ${Ao(p,Rt,Wt,pr,i,t,ur[0],ur[1],ur[2],tr)}
        ${S?qi(se,D,tr,void 0,!p,dt):_s(se,D,tr,void 0,!p,dt,!1,void 0,u)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${he};${S};${Rt};${Wt};${pr};${Be};${Re};${dt}`,inputDependencies:Ar},getRunData:()=>({outputs:[{dims:c?c(r):r,dataType:e[0].dataType}],dispatchGroup:{x:le[0],y:le[1],z:le[2]},programUniforms:Zt}),getShaderSource:Wr}}}),Io,Fo,Hi,ti,Oo,nu,iu,su,ou=j(()=>{rr(),w(),Jt(),gr(),ei(),ms(),Io=e=>{let t=1;for(let r=0;r<e.length;r++)t*=e[r];return t},Fo=e=>typeof e=="number"?[e,e,e]:e,Hi=(e,t)=>t<=1?e:e+(e-1)*(t-1),ti=(e,t,r,n=1)=>{let s=Hi(t,n);return Math.floor((e[0]*(r-1)-r+s)/2)},Oo=(e,t,r,n,s)=>{s==null&&(s=ti(e,t[0],n[0]));let o=[0,0,0,r];for(let i=0;i<3;i++)e[i]+2*s>=t[i]&&(o[i]=Math.trunc((e[i]-t[i]+2*s)/n[i]+1));return o},nu=(e,t,r,n,s,o,i,u,c,p)=>{let y,g,l,k;if(e==="VALID"&&(e=0),typeof e=="number"){y={top:e,bottom:e,left:e,right:e,front:e,back:e};let $=Oo([t,r,n,1],[u,c,p],1,[s,o,i],e);g=$[0],l=$[1],k=$[2]}else if(Array.isArray(e)){if(!e.every((S,W,X)=>S===X[0]))throw Error(`Unsupported padding parameter: ${e}`);y={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let $=Oo([t,r,n,1],[u,c,p],1,[s,o,i],e[0]);g=$[0],l=$[1],k=$[2]}else if(e==="SAME_UPPER"){g=Math.ceil(t/s),l=Math.ceil(r/o),k=Math.ceil(n/i);let $=(g-1)*s+u-t,S=(l-1)*o+c-r,W=(k-1)*i+p-n,X=Math.floor($/2),D=$-X,se=Math.floor(S/2),le=S-se,he=Math.floor(W/2),Be=W-he;y={top:se,bottom:le,left:he,right:Be,front:X,back:D}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:y,outDepth:g,outHeight:l,outWidth:k}},iu=(e,t,r,n,s,o=!1,i="channelsLast")=>{let u,c,p,y,g;if(i==="channelsLast")[u,c,p,y,g]=e;else if(i==="channelsFirst")[u,g,c,p,y]=e;else throw new Error(`Unknown dataFormat ${i}`);let[l,,k,$,S]=t,[W,X,D]=Fo(r),[se,le,he]=Fo(n),Be=Hi(k,se),Re=Hi($,le),dt=Hi(S,he),{padInfo:Rt,outDepth:Wt,outHeight:pr,outWidth:ur}=nu(s,c,p,y,W,X,D,Be,Re,dt),Zt=o?l*g:l,Ar=[0,0,0,0,0];return i==="channelsFirst"?Ar=[u,Zt,Wt,pr,ur]:i==="channelsLast"&&(Ar=[u,Wt,pr,ur,Zt]),{batchSize:u,dataFormat:i,inDepth:c,inHeight:p,inWidth:y,inChannels:g,outDepth:Wt,outHeight:pr,outWidth:ur,outChannels:Zt,padInfo:Rt,strideDepth:W,strideHeight:X,strideWidth:D,filterDepth:k,filterHeight:$,filterWidth:S,effectiveFilterDepth:Be,effectiveFilterHeight:Re,effectiveFilterWidth:dt,dilationDepth:se,dilationHeight:le,dilationWidth:he,inShape:e,outShape:Ar,filterShape:t}},su=(e,t,r,n,s,o)=>{let i=o==="channelsLast";i?e[0].dims[3]:e[0].dims[1];let u=[64,1,1],c={x:r.map((W,X)=>X)},p=[Math.ceil(Io(c.x.map(W=>r[W]))/u[0]),1,1];me("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${p}`);let y=1,g=Oe.size(r),l=[{type:12,data:g},{type:12,data:n},{type:12,data:s},{type:12,data:t.strides},{type:12,data:t.dilations}];Zn(t,l),l.push(...Bt(e[0].dims,e[1].dims));let k=["rank","rank"],$=e.length===3;$&&(l.push(...Bt(e[2].dims)),k.push("rank")),l.push(...Bt(r));let S=W=>{let X=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:n.length},{name:"pads",type:"u32",length:s.length},{name:"strides",type:"u32",length:t.strides.length},{name:"dilations",type:"u32",length:t.dilations.length}];Jn(t,X);let D=1,se=yr(e[0].dataType),le=ut("x",e[0].dataType,e[0].dims.length,y),he=ut("W",e[1].dataType,e[1].dims.length,D),Be=[le,he],Re=Yt("result",e[0].dataType,r.length,D),dt="";if($){let pr=ut("bias",e[2].dataType,e[2].dims.length,D);Be.push(pr),dt+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${se} {
          return bias[${i?Xt("coords",4,5):Xt("coords",1,5)}];
        }`}let Rt=mn(y,se),Wt=Yn(t,Rt,se);return`
            ${dt}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${le.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${he.getByIndices("aIndices")};
            }
          ${W.registerUniforms(X).declareVariables(...Be,Re)}
          ${W.mainStart()}
          ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${Re.offsetToIndices("global_idx")};
              let batch = ${Xt("coords",0,le.rank)};
              let d2 = ${i?Xt("coords",le.rank-1,le.rank):Xt("coords",1,le.rank)};
              let xFRCCorner = vec3<u32>(${i?Xt("coords",1,le.rank):Xt("coords",2,le.rank)},
              ${i?Xt("coords",2,le.rank):Xt("coords",3,le.rank)},
              ${i?Xt("coords",3,le.rank):Xt("coords",4,le.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${i?Xt("uniforms.x_shape",1,le.rank):Xt("uniforms.x_shape",2,le.rank)};
              let xShapeZ = ${i?Xt("uniforms.x_shape",2,le.rank):Xt("uniforms.x_shape",3,le.rank)};
              let xShapeW = ${i?Xt("uniforms.x_shape",3,le.rank):Xt("uniforms.x_shape",4,le.rank)};
              let xShapeU = ${i?Xt("uniforms.x_shape",4,le.rank):Xt("uniforms.x_shape",1,le.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${i?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${i?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${i?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${i?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${$?"value = value + getBiasByOutputCoords(coords)":""};
              ${Wt}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${t.cacheKey};${i};${y};${$}`,inputDependencies:k},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:p[0],y:p[1],z:p[2]},programUniforms:l}),getShaderSource:S}}}),au,lu,Vd=j(()=>{rr(),Jt(),gr(),ei(),au=(e,t,r,n)=>{let s=e.length>2,o=s?"value += b[output_channel];":"",i=e[0].dims,u=e[1].dims,c=t.format==="NHWC",p=c?r[3]:r[1],y=p/t.group,g=c&&y>=4?Mr(p):1,l=Oe.size(r)/g,k=[{type:12,data:l},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:y}];Zn(t,k),k.push(...Bt(i,[u[0],u[1],u[2],u[3]/g]));let $=s?["rank","rank","rank"]:["rank","rank"];k.push(...Bt([r[0],r[1],r[2],r[3]/g]));let S=W=>{let X=Yt("output",e[0].dataType,r.length,g),D=yr(X.type.tensor),se=Yn(t,X.type.value,D),le=ut("x",e[0].dataType,i.length),he=ut("w",e[1].dataType,u.length,g),Be=[le,he];s&&Be.push(ut("b",e[2].dataType,e[2].dims,g));let Re=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];Jn(t,Re);let dt=c?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${le.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${he.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${le.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${he.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${W.registerUniforms(Re).declareVariables(...Be,X)}

  ${W.mainStart()}
    ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${X.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${c?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${c?1:2}], outputIndices[${c?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${g} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${c?2:1}];

    var value: ${X.type.value} = ${X.type.value}(0);
    ${dt}
    ${o}
    ${se}
    ${X.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${t.cacheKey}_${g}`,inputDependencies:$},getRunData:()=>({outputs:[{dims:n?n(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:k}),getShaderSource:S}},lu=(e,t,r,n)=>{let s=e.length>2,o=Mr(r[3]),i=Mr(r[2]),u=Oe.size(r)/o/i,c=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/o],p=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/o],y=[r[0],r[1],r[2],r[3]/o],g=[{type:12,data:u},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];Zn(t,g),g.push(...Bt(c,p,y));let l=(i-1)*t.strides[1]+p[1],k=$=>{let S=Yt("output",e[0].dataType,y.length,o),W=yr(S.type.tensor),X=Yn(t,S.type.value,W),D=ut("x",e[0].dataType,c.length,o),se=ut("w",e[1].dataType,p.length,o),le=[D,se];s&&le.push(ut("b",e[2].dataType,e[2].dims,o));let he=s?"value += b[output_channel];":"",Be=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Jn(t,Be),`
  ${$.registerUniforms(Be).declareVariables(...le,S)}
  ${$.mainStart()}
    ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${i}u;
    let col = (index1 % width1) * ${i}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${D.type.value}, ${l}>;
    var values: array<${S.type.value}, ${i}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${p[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${l}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${D.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${D.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${p[1]}; w_width++) {
          let w_val = ${se.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${i}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${i}u; i++) {
      var value = values[i];
      ${he}
      ${X}
      ${S.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${o};${i};${l};${p[0]};${p[1]}`,inputDependencies:s?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n?n(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:g}),getShaderSource:k}}}),zo,ws,uu,du=j(()=>{rr(),Jt(),gs(),gr(),ei(),zo=(e,t,r,n,s=!1,o)=>{let i=e[0].dims,u=e[1].dims,c=i[i.length-2],p=u[u.length-1],y=i[i.length-1],g=Mr(p),l=Mr(y),k=Mr(c),$=Oe.size(r)/g/k,S=e.length>2,W=n?n.slice(0,-2):r.slice(0,-2),X=[Oe.size(W),c,p],D=[{type:12,data:$},{type:12,data:c},{type:12,data:p},{type:12,data:y}];Zn(t,D),D.push(...Bt(W,i,u)),S&&D.push(...Bt(e[2].dims)),D.push(...Bt(X));let se=le=>{let he=zs("batch_dims",e[0].dataType,W.length),Be=ut("a",e[0].dataType,i.length,l),Re=ut("b",e[1].dataType,u.length,g),dt=Yt("output",e[0].dataType,X.length,g),Rt=yr(dt.type.tensor),Wt=Yn(t,dt.type.value,Rt),pr=[Be,Re],ur="";if(S){let kr=s?g:1;pr.push(ut("bias",e[2].dataType,e[2].dims.length,kr)),ur=`${s?`value += bias[col / ${kr}];`:`value += ${dt.type.value}(bias[row + i]);`}`}let Zt=i.slice(0,-2),Ar=u.slice(0,-2),Wr=ki(Zt,W),wr=ki(Ar,W),Br=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Jn(t,Br);let Qt=(kr,nt)=>{let At=kr.rank,lr=kr.name;if(At===2)return`var ${lr}_indices = ${kr.type.indices}(0u, 0u);`;let Ur=he.rank,an=`var ${lr}_indices: ${kr.type.indices};`;for(let ln=At-2-1,Zi=Ur-1;ln>=0;ln--,Zi--)an+=`
${lr}_indices[${ln}] = ${Ur>1?`batch_indices[${Zi}]`:"batch_indices"};`;return nt.forEach(ln=>{an+=`
${lr}_indices[${ln}] = 0;`}),an+=`${lr}_indices[${At-2}] = 0u;
                     ${lr}_indices[${At-1}] = 0u;`,an},tr=()=>{let kr=`var a_data: ${Be.type.value};`;for(let nt=0;nt<l;nt++)kr+=`
              let b_data${nt} = b[(b_offset + (k + ${nt}) * uniforms.N + col) / ${g}];`;for(let nt=0;nt<k;nt++){kr+=`a_data = a[(a_offset + (row + ${nt}) * uniforms.K + k) / ${l}];`;for(let At=0;At<l;At++)kr+=`
            values[${nt}] = fma(${Re.type.value}(a_data${l===1?"":`[${At}]`}), b_data${At}, values[${nt}]);
`}return kr};return`
  ${le.registerUniforms(Br).registerInternalVariables(he).declareVariables(...pr,dt)}
  ${le.mainStart()}
    ${le.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${g})) * ${g};
    var index1 = global_idx / (uniforms.N / ${g});
    let stride1 = uniforms.M / ${k};
    let row = (index1 % stride1) * ${k};
    let batch = index1 / stride1;

    ${r.length===2?"":`let batch_indices = ${he.offsetToIndices("batch")};`}
    ${Qt(Be,Wr)}
    let a_offset = ${Be.indicesToOffset("a_indices")};
    ${Qt(Re,wr)}
    let b_offset = ${Re.indicesToOffset("b_indices")};
    var values: array<${dt.type.value}, ${k}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${l}) {
      ${tr()}
    }
    for (var i = 0u; i < ${k}u; i++) {
      var value = values[i];
      ${ur}
      ${Wt}
      let cur_indices = ${dt.type.indices}(batch, row + i, col);
      let offset = ${dt.indicesToOffset("cur_indices")};
      ${dt.setByOffset(`offset / ${g}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${g};${l};${k};${s}`,inputDependencies:S?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:o?o(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil($/64)},programUniforms:D}),getShaderSource:se}},ws=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},uu=e=>{ws(e.inputs);let t=vn.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let r=t[t.length-1],n=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&n<8?e.compute(zo(e.inputs,{activation:""},t)):e.compute(Po(e.inputs,{activation:""},t))}}),cu,hi,pu,ys,Bo,Do,bs,hu,Lo,Wd=j(()=>{Jt(),Ud(),ou(),gs(),Vd(),ei(),du(),Vn(),cu=(e,t,r,n,s,o)=>{let i=e[0],u=e.slice(o?1:2,o?3:4),c=u.length,p=t[0],y=t.slice(2).map((l,k)=>l+(l-1)*(r[k]-1)),g=u.map((l,k)=>l+n[k]+n[k+c]).map((l,k)=>Math.floor((l-y[k]+s[k])/s[k]));return g.splice(0,0,i),g.splice(o?3:1,0,p),g},hi=[2,3,1,0],pu=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],n=e[1].dims[1]*t.group;if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let s=e[0].dims.length-2;if(t.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(t.strides.length!==s)throw new Error(`strides should be ${s}D`);if(t.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},ys=(e,t)=>{let r=e.kernelShape.slice();r.length<t[1].dims.length-2&&r.push(...Array(t[1].dims.length-2-r.length).fill(0));for(let o=2;o<t[1].dims.length;++o)r[o-2]===0&&(r[o-2]=t[1].dims[o]);let n=e.pads.slice();nn.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,n,e.format==="NHWC",e.autoPad);let s=Object.assign({},e);return Object.assign(s,{kernelShape:r,pads:n}),s},Bo=e=>{let t=hs(e),r=e.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],s=e.dilations,o=e.group,i=e.kernel_shape,u=e.pads,c=e.strides,p=e.w_is_const();return{autoPad:n,format:r,dilations:s,group:o,kernelShape:i,pads:u,strides:c,wIsConst:p,...t,cacheKey:`${e.format};${t.activation};`}},Do=(e,t,r,n)=>{let s=r.format==="NHWC",o=cu(t[0].dims,t[1].dims,r.dilations,r.pads,r.strides,s);if(r.group!==1){let Be=[t[0]];if(s){let Re=e.kernelCustomData.wT??e.compute(Tn(t[1],hi),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Re),Be.push(Re)}else Be.push(t[1]);t.length===3&&Be.push(t[2]),!e.adapterInfo.isArchitecture("ampere")&&s&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1?e.compute(lu(Be,r,o,n),{inputs:Be}):e.compute(au(Be,r,o,n),{inputs:Be});return}let i=t.length===3,u=t[0].dims[s?1:2],c=t[0].dims[s?2:3],p=t[0].dims[s?3:1],y=t[1].dims[2],g=t[1].dims[3],l=o[s?1:2],k=o[s?2:3],$=o[s?3:1],S=s&&y===u&&g===c&&r.pads[0]===0&&r.pads[1]===0;if(S||y===1&&g===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let Be=o[0],Re,dt,Rt,Wt=[];if(s){let Zt=e.kernelCustomData.wT??e.compute(Tn(t[1],hi),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Zt),S){let Ar=u*c*p;Re=t[0].reshape([1,Be,Ar]),dt=Zt.reshape([1,Ar,$]),Rt=[1,Be,$]}else Re=t[0].reshape([Be,u*c,p]),dt=Zt.reshape([1,p,$]),Rt=[Be,l*k,$];Wt.push(Re),Wt.push(dt)}else Re=t[0].reshape([Be,p,u*c]),dt=t[1].reshape([1,$,p]),Rt=[Be,$,l*k],Wt.push(dt),Wt.push(Re);i&&Wt.push(t[2]);let pr=Rt[2],ur=Wt[0].dims[Wt[0].dims.length-1];pr<8&&ur<8?e.compute(zo(Wt,r,o,Rt,s,n),{inputs:Wt}):e.compute(Po(Wt,r,o,Rt,s,n),{inputs:Wt});return}let W=!0,X=e.kernelCustomData.wT??e.compute(Tn(t[1],hi),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=X);let D=[t[0],X];i&&D.push(t[2]);let se=s?l*k:$,le=s?$:l*k,he=y*g*p;e.compute(ru(D,r,o,se,le,he,i,W,n),{inputs:D})},bs=(e,t)=>{let r=t.format==="NHWC",n=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&n.push(e.inputs[2]);let s=[0,t.pads[0],0,t.pads[1]],o=[1].concat(t.strides),i=[1].concat(t.dilations),u=[1].concat(t.kernelShape),c=ys({...t,pads:s,strides:o,dilations:i,kernelShape:u},n);Do(e,n,c,p=>r?[p[0],p[2],p[3]]:[p[0],p[1],p[3]])},hu=(e,t,r)=>{let n=r.format==="NHWC"?"channelsLast":"channelsFirst",s=ys(r,t),o=r.autoPad==="NOTSET"?r.pads:r.autoPad,i=iu(t[0].dims,t[1].dims,r.strides,r.dilations,o,!1,n);e.compute(su(t,s,i.outShape,[i.filterDepth,i.filterHeight,i.filterWidth],[i.padInfo.front,i.padInfo.top,i.padInfo.left],n))},Lo=(e,t)=>{if(pu(e.inputs,t),e.inputs[0].dims.length===3)bs(e,t);else if(e.inputs[0].dims.length===5)hu(e,e.inputs,t);else{let r=ys(t,e.inputs);Do(e,e.inputs,r)}}}),Gd,fu,qd=j(()=>{rr(),w(),gr(),ei(),ms(),ko(),gs(),Gd=(e,t=!1,r,n,s=4)=>{let o=W=>{switch(W){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return ${n}(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${W} is not supported.`)}},i=e?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,u=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,c=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",p=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",y=e?"row":"col",g=e?"col":"row",l=`
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${y} / outWidth;
      let outCol = ${y} % outWidth;

      let WRow = ${g} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${g} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${c}) || fract(xR) > 0.0) {
        return ${n}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${p}) || fract(xC) > 0.0) {
        return ${n}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${g} % inChannels;
      ${i}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${s}];`,k=e?`
      let col = colIn * ${s};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${l}
      }
      return ${n}(0.0);`:`
      let col = colIn * ${s};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${l}
      }
      return ${n}(0.0);`,$=`
      let col = colIn * ${s};
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${o(s)}
      }
      return ${n}(0.0);
      `,S=Yn(r,n);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${n} {
    ${e?k:$}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${n} {
    ${e?$:k}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${n}) {
    let col = colIn * ${s};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${u}
      ${fs(t)}
      ${S}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${s}] = value;
    }
  }`},fu=(e,t,r,n,s,o,i,u)=>{let c=t.format==="NHWC",p=c?e[0].dims[3]:e[0].dims[1],y=r[0],g=c?r[2]:r[3],l=c?r[1]:r[2],k=c?r[3]:r[1],$=c&&p%4===0&&p%3&&k%4===0,S=c?k:g*l,W=c?g*l:k,X=[8,8,1],D=n<=8?[4,1,1]:[4,4,1],se=[Math.ceil(S/X[0]/D[0]),Math.ceil(W/X[1]/D[1]),Math.ceil(y/X[2]/D[2])];me("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${se}`);let le=$?4:1,he=Math.max(X[0]*le,X[1]),Be=$?4:1,Re=[t.kernelShape[c?1:2],t.kernelShape[c?2:3]],dt=[Re[0]+(t.dilations[0]<=1?0:(Re[0]-1)*(t.dilations[0]-1)),Re[1]+(t.dilations[1]<=1?0:(Re[1]-1)*(t.dilations[1]-1))],Rt=[dt[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),dt[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],Wt=[{type:6,data:n},{type:6,data:s},{type:6,data:o},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:Re},{type:6,data:Rt}];Zn(t,Wt),Wt.push(...Bt(e[0].dims,e[1].dims));let pr=["rank","rank"];i&&(Wt.push(...Bt(e[2].dims)),pr.push("rank")),Wt.push(...Bt(r));let ur=Zt=>{let Ar=ut("x",e[0].dataType,e[0].dims.length,Be),Wr=ut("w",e[1].dataType,e[1].dims.length,1),wr=Yt("result",e[0].dataType,r.length,Be),Br=[Ar,Wr],Qt="";if(i){let nt=ut("bias",e[2].dataType,e[2].dims.length,Be);Br.push(nt),Qt+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${nt.type.value} {
            return bias[coords.${c?"w":"y"}${$?"/ 4":""}];
          }`}let tr=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:Re.length},{name:"pads",type:"i32",length:Rt.length}];Jn(t,tr);let kr=yr(e[0].dataType,1);if(kr!=="f16"&&kr!=="f32")throw new Error(`elemType ${kr} is not supported.`);return`
        ${$o("uniforms.result_strides")}
        ${Zt.registerUniforms(tr).declareVariables(...Br,wr)};
        ${Qt}
        ${Gd(c,i,t,Ar.type.value,le)}
        ${$?qi(D,X,kr,void 0,!c,he):_s(D,X,kr,void 0,!c,he,!1,void 0,u)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${D};${X};${$}`,inputDependencies:pr},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:se[0],y:se[1],z:se[2]},programUniforms:Wt}),getShaderSource:ur}}}),mu,fi,Hd=j(()=>{rr(),w(),Jt(),gr(),mu=(e,t,r,n,s,o=!1,i,u,c=!1)=>{let p=c?1:2,y=c?2:3,g=c?3:1,l=o?2:1,k=`
  fn setOutputAtIndex(flatIndex : u32, value : ${o?`vec4<${i}>`:i}) {
    result[flatIndex] = ${o?`vec4<${i}>`:i}(value);
  }`;n&&(k+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${o?`vec4<${i}>`:i} {
      return bias[coords.${c?"w":"y"}${o?"/ 4":""}];
    }`);let $=o?4:1,S=ut("W",t[1].dataType,t[1].dims.length,$),W=ut("Dy",t[0].dataType,t[0].dims.length,$),X=[W,S];n&&X.push(ut("bias",t[2].dataType,[r[g]].length,$));let D=Yt("result",t[0].dataType,r.length,$),se=`{
        let batch: u32 = ${s?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${s?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${s?"global_id.y":"workgroup_id.y"} * ${l};
        let d1: u32 = ${s?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${i}>, ${l}>;
        for (var i = 0; i < ${l}; i++) {
          dotProd[i] = vec4<${i}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${i}(dyCorner.x) + ${i}(wR)) / ${i}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${i}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${i}(dyCorner.y) + ${i}(wC)) / ${i}(uniforms.strides.y);
            let dyC2 = (${i}(dyCorner.y) + 1.0 + ${i}(wC)) / ${i}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${i}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${i}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${W.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${i}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${W.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${i}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${g}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${W.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${i}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${W.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${i}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${l}; i = i + 1) {
          let value = dotProd[i] + ${n?"bias[c+i]":`vec4<${i}>(0.0)`};
          ${D.set("batch","r","c + i","d1","value")};
        }
      }`,le=`
          let outputIndices = ${D.offsetToIndices("global_idx")};
          let batch = ${D.indicesGet("outputIndices",0)};
          let d1 = ${D.indicesGet("outputIndices",g)};
          let r = ${D.indicesGet("outputIndices",p)};
          let c = ${D.indicesGet("outputIndices",y)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${i}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${i}(dyRCorner) + ${i}(wR)) / ${i}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${i}(uniforms.Dy_shape[${p}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${i}(dyCCorner) + ${i}(wC)) / ${i}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${i}(uniforms.Dy_shape[${y}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${c?W.get("batch","idyR","idyC","inputChannel"):W.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${S.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${n?"bias[d1]":`${i}(0.0)`};
          ${D.setByOffset("global_idx","value")};
        `;return`
  ${e.registerUniforms(u).declareVariables(...X,D)}
  ${k}

    ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${o?se:le}}`},fi=(e,t,r)=>{let n=e.length>2,s=t.outputShape,o=Oe.size(s),i=[Math.ceil(o/64),1,1];me("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${i}`);let u=t.format==="NHWC",c=["rank","rank"],p=[t.strides[0],t.strides[1]],y=[t.kernelShape[u?1:2],t.kernelShape[u?2:3]],g=[t.dilations[0],t.dilations[1]],l=[y[0]+(t.dilations[0]<=1?0:(t.kernelShape[u?1:2]-1)*(t.dilations[0]-1)),y[1]+(t.dilations[1]<=1?0:(t.kernelShape[u?2:3]-1)*(t.dilations[1]-1))],k=[l[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),l[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],$=!1,S=t.group,W=e[1].dims,X=W[0]/S,D=W[1],se=[{type:12,data:o},{type:12,data:p},{type:12,data:y},{type:12,data:g},{type:12,data:l},{type:6,data:k},{type:12,data:X},{type:12,data:D},...Bt(e[0].dims,e[1].dims)];n&&(se.push(...Bt(e[2].dims)),c.push("rank")),se.push(...Bt(s));let le=i[1]===1&&i[2]===1,he=Be=>{let Re=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:p.length},{name:"filter_dims",type:"u32",length:y.length},{name:"dilations",type:"u32",length:y.length},{name:"effective_filter_dims",type:"u32",length:l.length},{name:"pads",type:"i32",length:k.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],dt=yr(e[0].dataType);return`${mu(Be,e,s,n,le,$,dt,Re,u)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:c},getRunData:()=>({dispatchGroup:{x:i[0],y:i[1],z:i[2]},outputs:[{dims:r?r(s):s,dataType:e[0].dataType}],programUniforms:se}),getShaderSource:he}}}),_u,gu,wu,Ro,Ms,Kd,yu,bu,Mu,vu,Xd=j(()=>{qd(),Hd(),ei(),Vn(),_u=(e,t,r,n,s,o)=>(e-1)*t+r+(n-1)*s+1-o,gu=(e,t,r,n,s)=>{let o=Math.floor(e/2);t==="SAME_UPPER"?(r[n]=o,r[s]=e-o):t==="SAME_LOWER"&&(r[n]=e-o,r[s]=o)},wu=(e,t,r,n,s,o,i,u,c,p)=>{let y=e.length-2,g=p.length===0;c.length<y&&c.push(...Array(y-c.length).fill(0));let l=e[0],k=t[u?3:1]*s;for(let $=0,S=e.length-y-(u?1:0);$<y;++$,++S){let W=e[S],X=g?W*i[$]:p[$],D=_u(W,i[$],o[$],t[S],r[$],X);gu(D,n,o,$,$+y),g&&p.push(i[$]*(W-1)+c[$]+(t[S]-1)*r[$]+1-o[$]-o[$+y])}p.splice(0,0,l),p.splice(u?3:1,0,k)},Ro=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((g,l)=>g*l,1)===0){r.length=0;for(let g=2;g<t[1].dims.length;++g)r.push(t[1].dims[g])}let n=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(n?3:1,0,t[1].dims[1]);let s=e.pads.slice(),o=e.outputShape.slice(),i=e.outputPadding.slice(),u=t[0].dims,c=e.dilations.slice();if(c.reduce((g,l)=>g+l,0)===0){let g=t[0].dims.length-2;c=new Array(g).fill(1)}let p=e.strides.slice();if(p.reduce((g,l)=>g+l,0)===0){let g=t[0].dims.length-2;p=new Array(g).fill(1)}wu(u,r,c,e.autoPad,e.group,s,p,n,i,o);let y=Object.assign({},e);return Object.assign(y,{kernelShape:r,pads:s,outputPadding:i,outputShape:o,dilations:c,strides:p}),y},Ms=e=>{let t=hs(e),r=e.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],s=e.dilations,o=e.group,i=e.kernelShape,u=e.pads,c=e.strides,p=e.wIsConst(),y=e.outputPadding,g=e.outputShape;return{autoPad:n,format:r,dilations:s,group:o,kernelShape:i,outputPadding:y,outputShape:g,pads:u,strides:c,wIsConst:p,...t,cacheKey:`${e.format};${t.activation};`}},Kd=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],n=e[1].dims[0];if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let s=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==s))throw new Error("invalid bias");let o=e[0].dims.length-2;if(t.dilations.reduce((i,u)=>i+u,0)>0&&t.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(t.strides.reduce((i,u)=>i+u,0)>0&&t.strides.length!==o)throw new Error(`strides should be ${o}D`);if(t.pads.reduce((i,u)=>i+u,0)>0&&t.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(t.outputPadding.length!==o&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${o}D`);if(t.kernelShape.reduce((i,u)=>i+u,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},yu=[2,3,1,0],bu=(e,t,r)=>{let n=Ro(r,t),s=r.format==="NHWC",o=n.outputShape,i=o[s?3:1],u=t[0].dims[s?3:1];if(n.group!==1||i===1&&u===1){e.compute(fi(t,n));return}let c=o[s?1:2],p=o[s?2:3],y=t[1].dims[2],g=t[1].dims[3],l=s?c*p:i,k=s?i:c*p,$=y*g*u,S=!0,W=e.kernelCustomData.wT??e.compute(Tn(t[1],yu),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=W);let X=[t[0],W],D=t.length===3;D&&(!s&&t[2].dims.length===1?X.push(t[2].reshape([t[2].dims[0],1,1])):X.push(t[2])),e.compute(fu(X,n,o,l,k,$,D,S),{inputs:X})},Mu=(e,t)=>{let r=t.format==="NHWC",n=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&n.push(e.inputs[2]);let s=t.kernelShape;(s.length===0||s[0]===0)&&(s=[e.inputs[1].dims[2]]);let o=t.dilations;(o.length===0||o[0]===0)&&(o=[1]);let i=t.strides;(i.length===0||i[0]===0)&&(i=[1]);let u=t.pads;u.length===0&&(u=[0,0]),u=[0,u[0],0,u[1]],i=[1].concat(i),o=[1].concat(o),s=[1].concat(s);let c=Ro({...t,pads:u,strides:i,dilations:o,kernelShape:s},n);e.compute(fi(n,c,p=>r?[p[0],p[2],p[3]]:[p[0],p[1],p[3]]))},vu=(e,t)=>{Kd(e.inputs,t),e.inputs[0].dims.length===3?Mu(e,t):bu(e,e.inputs,t)}}),No,xu,Tu,Eu=j(()=>{rr(),Jt(),Or(),gr(),No=(e,t,r,n)=>{let s=Oe.size(t),o=t.length,i=ut("input",e,o),u=Yt("output",e,o),c=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),p=Oe.normalizeAxis(c,o),y=g=>{let l=` i32(${i.indicesGet("inputIndices","uniforms.axis")}) `,k=Xt("uniforms.input_shape","uniforms.axis",o),$=n.reverse?l+(n.exclusive?" + 1":""):"0",S=n.reverse?k:l+(n.exclusive?"":" + 1");return`
                ${g.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(i,u)}
                ${g.mainStart()}
                  ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${u.offsetToIndices("global_idx")};
                  var sum = ${u.type.value}(0);
                  let first : i32 = ${$};
                  let last : i32 = ${S};
                  for (var i : i32 = first; i < last; i++) {
                    ${i.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${i.getByIndices("inputIndices")};
                  }
                  ${u.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:n.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},{type:12,data:p},...Bt(t,t)]}),getShaderSource:y}},xu=(e,t)=>{let r=e.inputs[0].dims,n=e.inputs[0].dataType,s=e.inputs[1];e.compute(No(n,r,s,t),{inputs:[0]})},Tu=e=>{let t=e.exclusive===1,r=e.reverse===1;return hr({exclusive:t,reverse:r})}}),Cu,$u,jo,ku,Su,Uo=j(()=>{rr(),Jt(),Or(),gr(),Cu=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},$u=(e,t,r,n)=>{let s=[];s.push(`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let o=0;o<t;++o)s.push(r.indicesSet("a",e[o],`i[${o}]`));return s.push("return a;}"),s.join(`
`)},jo=(e,t)=>{let r,n,s,o,i,u,c=t.format==="NHWC",p=t.blocksize,y=t.mode==="DCR";c?([r,n,s,o]=e.dims,i=y?[r,n,s,p,p,o/p**2]:[r,n,s,o/p**2,p,p],u=y?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([r,n,s,o]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],i=y?[r,p,p,o/p**2,n,s]:[r,o/p**2,p,p,n,s],u=y?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let g=e.reshape(i),l=g.dims.length,k=e.dataType,$=ut("a",k,l),S=Yt("output",k,l),W=X=>`
  ${X.registerUniform("output_size","u32").declareVariables($,S)}

  ${$u(u,l,$,S)}

  ${X.mainStart()}
    ${X.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${S.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${S.setByOffset("global_idx",$.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:X=>{let D=c?[r,n*p,s*p,o/p**2]:[r,o/p**2,n*p,s*p],se=Oe.size(D),le=g.dims,he=Oe.sortBasedOnPerm(le,u);return{outputs:[{dims:D,dataType:X[0].dataType}],dispatchGroup:{x:Math.ceil(se/64)},programUniforms:[{type:12,data:se},...Bt(le,he)]}},getShaderSource:W}},ku=(e,t)=>{Cu(e.inputs),e.compute(jo(e.inputs[0],t))},Su=e=>hr({blocksize:e.blocksize,mode:e.mode,format:e.format})}),vs,Ki,Vo,Pu,Wo,xs,Qd,Go,Au,qo,Iu,Yd=j(()=>{rr(),Jt(),Or(),gr(),vs="[a-zA-Z]|\\.\\.\\.",Ki="("+vs+")+",Vo="^"+Ki+"$",Pu="("+Ki+",)*"+Ki,Wo="^"+Pu+"$",xs=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let r=this.symbolToIndices.get(e);r===void 0?r=[t]:r.push(t),this.symbolToIndices.set(e,r)}},Qd=class{constructor(e,t){var s;this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[r,n]=t.includes("->")?t.split("->",2):[t,""];if(!r.match(RegExp(Wo)))throw new Error("Invalid LHS term");if(r.split(",").forEach((o,i)=>{let u=e[i].dims.slice();if(!o.match(RegExp(Vo)))throw new Error("Invalid LHS term");let c=this.processTerm(o,!0,u,i);this.lhs.push(c)}),n==="")n+=[...this.symbolToInfo.entries()].filter(([o,i])=>i.count===1||o==="...").map(([o])=>o).join("");else if(!n.match(RegExp(Ki)))throw new Error("Invalid RHS");(s=n.match(RegExp(vs,"g")))==null||s.forEach(o=>{if(o==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let i=this.symbolToInfo.get(o);if(i===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(i.dimValue)}}),this.rhs=this.processTerm(n,!1,this.outputDims)}addSymbol(e,t,r){let n=this.symbolToInfo.get(e);if(n!==void 0){if(n.dimValue!==t&&n.count!==1)throw new Error("Dimension mismatch");n.count++,n.inputIndices.push(r)}else n={count:1,dimValue:t,inputIndices:[r]};this.symbolToInfo.set(e,n)}processTerm(e,t,r,n=-1){let s=r.length,o=!1,i=[],u=0;if(!e.match(RegExp(Vo))&&!t&&e!=="")throw new Error("Invalid LHS term");let c=e.match(RegExp(vs,"g")),p=new xs(n);return c==null||c.forEach((y,g)=>{if(y==="..."){if(o)throw new Error("Only one ellipsis is allowed per input term");o=!0;let l=s-c.length+1;if(l<0)throw new Error("Ellipsis out of bounds");if(i=r.slice(u,u+l),this.hasEllipsis){if(this.ellipsisDims.length!==i.length||this.ellipsisDims.toString()!==i.toString())throw new Error("Ellipsis dimensions mismatch")}else if(t)this.hasEllipsis=!0,this.ellipsisDims=i;else throw new Error("Ellipsis must be specified in the LHS");for(let k=0;k<i.length;k++){let $=String.fromCharCode(48+k);p.addSymbol($,g+k),this.addSymbol($,r[u++],n)}}else p.addSymbol(y,g+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(y,r[u++],n)}),p}},Go=e=>e+"_max",Au=(e,t,r,n)=>{let s=e.map(p=>p.length).map((p,y)=>ut(`input${y}`,t,p)),o=Oe.size(n),i=Yt("output",t,n.length),u=[...r.symbolToInfo.keys()].filter(p=>!r.rhs.symbolToIndices.has(p)),c=p=>{let y=[],g="var prod = 1.0;",l="var sum = 0.0;",k="sum += prod;",$=[],S=[],W=[],X=[],D=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((le,he)=>{var Be;if(r.rhs.symbolToIndices.has(he)){let Re=(Be=r.rhs.symbolToIndices.get(he))==null?void 0:Be[0];Re!==void 0&&r.lhs.forEach((dt,Rt)=>{if(le.inputIndices.includes(Rt)){let Wt=dt.symbolToIndices.get(he);if(Wt===void 0)throw new Error("Invalid symbol error");Wt.forEach(pr=>{y.push(`${s[Rt].indicesSet(`input${Rt}Indices`,pr,i.indicesGet("outputIndices",Re))}`)})}})}else r.lhs.forEach((Re,dt)=>{if(le.inputIndices.includes(dt)){let Rt=Re.symbolToIndices.get(he);if(Rt===void 0)throw new Error("Invalid symbol error");Rt.forEach(Wt=>{$.push(`${s[dt].indicesSet(`input${dt}Indices`,Wt,`${he}`)}`)}),X.push(`prod *= ${s[dt].getByIndices(`input${dt}Indices`)};`)}}),S.push(`for(var ${he}: u32 = 0; ${he} < uniforms.${Go(he)}; ${he}++) {`),W.push("}")});let se=D?[...y,`let sum = ${s.map((le,he)=>le.getByIndices(`input${he}Indices`)).join(" * ")};`]:[...y,l,...S,...$,g,...X,k,...W];return`
            ${p.registerUniforms(u.map(le=>({name:`${Go(le)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...s,i)}

            ${p.mainStart()}
            ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${i.offsetToIndices("global_idx")};
            ${s.map((le,he)=>`var input${he}Indices: ${s[he].type.indices};`).join(`
`)}
            ${se.join(`
`)};
            ${i.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let p=u.filter(g=>r.symbolToInfo.has(g)).map(g=>{var l;return{type:12,data:((l=r.symbolToInfo.get(g))==null?void 0:l.dimValue)||0}});p.push({type:12,data:o});let y=e.map((g,l)=>[...Bt(g)]).reduce((g,l)=>g.concat(l),p);return y.push(...Bt(n)),{outputs:[{dims:n,dataType:t}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:y}},getShaderSource:c}},qo=(e,t)=>{let r=new Qd(e.inputs,t.equation),n=r.outputDims,s=e.inputs.map((o,i)=>o.dims);e.compute(Au(s,e.inputs[0].dataType,r,n))},Iu=e=>{let t=e.equation.replace(/\s+/g,"");return hr({equation:t})}}),Ho,Ko,Fu,Xo,Zd,Rc=j(()=>{rr(),Jt(),gr(),Ho=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),n=r.length<t.length?0:r.length-t.length,s=t.length<r.length?0:t.length-r.length;for(;n<r.length&&s<t.length;++n,++s)if(r[n]!==t[s]&&r[n]!==1&&t[s]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Ko=(e,t)=>{let r=e.length-t.length,n=[];for(let s=0;s<r;++s)n.push(e[s]);for(let s=0;s<t.length;++s)n.push(t[s]===1?e[s+r]:t[s]);return n},Fu=(e,t)=>e.length>t.length?Ko(e,t):Ko(t,e),Xo=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),n=Fu(t,r),s=e[0].dataType,o=s===9?4:1,i=Math.ceil(Oe.size(n)/o),u=p=>{let y=ut("input",s,t.length,o),g=Yt("output",s,n.length,o),l;if(s===9){let k=($,S,W="")=>`
          let outputIndices${S} = ${g.offsetToIndices(`outputOffset + ${S}u`)};
          let offset${S} = ${y.broadcastedIndicesToOffset(`outputIndices${S}`,g)};
          let index${S} = offset${S} / 4u;
          let component${S} = offset${S} % 4u;
          ${$}[${S}] = ${W}(${y.getByOffset(`index${S}`)}[component${S}]);
        `;l=`
        let outputOffset = global_idx * ${o};
        var data = vec4<u32>(0);
        ${k("data",0,"u32")}
        ${k("data",1,"u32")}
        ${k("data",2,"u32")}
        ${k("data",3,"u32")}
        ${g.setByOffset("global_idx","data")}
      }`}else l=`
        let outputIndices = ${g.offsetToIndices("global_idx")};
        let inputOffset = ${y.broadcastedIndicesToOffset("outputIndices",g)};
        ${g.setByOffset("global_idx",y.getByOffset("inputOffset"))}
      }`;return`
    ${p.registerUniform("vec_size","u32").declareVariables(y,g)}
    ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${l}`},c=[{type:12,data:i},...Bt(t,n)];return{name:"Expand",shaderCache:{hint:`${n.length}`,inputDependencies:["rank"]},getShaderSource:u,getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:c})}},Zd=e=>{Ho(e.inputs),e.compute(Xo(e.inputs),{inputs:[0]})}}),Qo,Yo,Jd=j(()=>{rr(),Jt(),gr(),vo(),Qo=e=>{let t=e[0].dataType,r=Oe.size(e[0].dims),n=Oe.size(e[1].dims),s=n%4===0,o=i=>{let u=ut("x",t,[1],4),c=ut("bias",t,[1],4),p=Yt("y",t,[1],4),y=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],g=k=>`
      let bias${k}_offset: u32 = (global_idx * 4 + ${k}) % uniforms.bias_size;
      let bias${k} = ${c.getByOffset(`bias${k}_offset / 4`)}[bias${k}_offset % 4];`,l=s?`
      let bias = ${c.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${g(0)}${g(1)}${g(2)}${g(3)}
      let bias = ${u.type.value}(bias0, bias1, bias2, bias3);`;return`${i.registerUniforms(y).declareVariables(u,c,p)}

    ${wo(Dr(t))}

    ${i.mainStart(fn)}
      ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${u.getByOffset("global_idx")};
      ${l}
      let x_in = x + bias;
      ${p.setByOffset("global_idx",yo("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${s}`,inputDependencies:["type","type"]},getShaderSource:o,getRunData:i=>({outputs:[{dims:i[0].dims,dataType:i[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:n}],dispatchGroup:{x:Math.ceil(r/fn/4)}})}},Yo=e=>{e.inputs.length<2||Oe.size(e.inputs[1].dims)===0?Al(e):e.compute(Qo(e.inputs))}}),Ou,Zo,zu,Bu,Du=j(()=>{rr(),Jt(),Or(),gr(),Ou=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Zo=(e,t)=>{let r=e[0].dims,n=e[1].dims,s=r.length,o=Oe.normalizeAxis(t.axis,s),i=r.slice(0);i.splice(o,1,...n);let u=r[o],c=e[0].dataType===9?4:1,p=Math.ceil(Oe.size(i)/c),y=[{type:12,data:p},{type:6,data:u},{type:12,data:o},...Bt(e[0].dims,e[1].dims,i)],g=l=>{let k=ut("data",e[0].dataType,e[0].dims.length,c),$=ut("inputIndices",e[1].dataType,e[1].dims.length),S=Yt("output",e[0].dataType,i.length,c),W=D=>{let se=n.length,le=`var indicesIndices${D}  = ${$.type.indices}(0);`;for(let he=0;he<se;he++)le+=`${se>1?`indicesIndices${D}[${he}]`:`indicesIndices${D}`} = ${i.length>1?`outputIndices${D}[uniforms.axis + ${he}]`:`outputIndices${D}`};`;le+=`
          var idx${D} = ${$.getByIndices(`indicesIndices${D}`)};
          if (idx${D} < 0) {
            idx${D} = idx${D} + uniforms.axisDimLimit;
          }
          var dataIndices${D} : ${k.type.indices};
        `;for(let he=0,Be=0;he<s;he++)he===o?(le+=`${s>1?`dataIndices${D}[${he}]`:`dataIndices${D}`} = u32(idx${D});`,Be+=se):(le+=`${s>1?`dataIndices${D}[${he}]`:`dataIndices${D}`} = ${i.length>1?`outputIndices${D}[${Be}]`:`outputIndices${D}`};`,Be++);return le},X;if(e[0].dataType===9){let D=(se,le,he="")=>`
          let outputIndices${le} = ${S.offsetToIndices(`outputOffset + ${le}u`)};
          ${W(le)};
          let offset${le} = ${k.indicesToOffset(`dataIndices${le}`)};
          let index${le} = offset${le} / 4u;
          let component${le} = offset${le} % 4u;
          ${se}[${le}] = ${he}(${k.getByOffset(`index${le}`)}[component${le}]);
        `;X=`
        let outputOffset = global_idx * ${c};
        var value = vec4<u32>(0);
        ${D("value",0,"u32")}
        ${D("value",1,"u32")}
        ${D("value",2,"u32")}
        ${D("value",3,"u32")}
        ${S.setByOffset("global_idx","value")}
      `}else X=`
      let outputIndices = ${S.offsetToIndices("global_idx")};
      ${W("")};
      let value = ${k.getByIndices("dataIndices")};
      ${S.setByOffset("global_idx","value")};
      `;return`
      ${l.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(k,$,S)}
      ${l.mainStart()}
        ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${X}
      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:y}),getShaderSource:g}},zu=e=>hr({axis:e.axis}),Bu=(e,t)=>{let r=e.inputs;Ou(r),e.compute(Zo(e.inputs,t))}}),Lu,Ru,Jo,Nu,ec=j(()=>{rr(),Jt(),Or(),gr(),Lu=(e,t)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let r=Oe.normalizeAxis(t.quantizeAxis,e[0].dims.length),n=t.blockSize,s=e[0],o=e[2],i=e.length===4?e[3]:void 0;if(o.dims.length!==s.dims.length||!s.dims.map((u,c)=>c===r?Math.ceil(u/n)===o.dims[c]:u===o.dims[c]).reduce((u,c)=>u&&c,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(i){if(i.dataType!==s.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(i.dims.length!==o.dims.length||!i.dims.map((u,c)=>u===o.dims[c]).reduce((u,c)=>u&&c,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},Ru=(e,t)=>{let r=e[0].dims,n=e[1].dims,s=r.length,o=Oe.normalizeAxis(t.gatherAxis,s),i=Oe.normalizeAxis(t.quantizeAxis,s),u=r.slice(0);u.splice(o,1,...n);let c=Oe.size(u),p=e[2].dataType,y=e[0].dataType===22,g=[{type:12,data:c},{type:12,data:i},{type:12,data:o},{type:12,data:t.blockSize},...Bt(...e.map((k,$)=>k.dims),u)],l=k=>{let $=ut("data",e[0].dataType,e[0].dims.length),S=ut("inputIndices",e[1].dataType,e[1].dims.length),W=ut("scales",e[2].dataType,e[2].dims.length),X=e.length>3?ut("zeroPoint",e[3].dataType,e[3].dims.length):void 0,D=Yt("output",p,u.length),se=[$,S,W];X&&se.push(X);let le=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${k.registerUniforms(le).declareVariables(...se,D)}
        ${k.mainStart()}
        let output_indices = ${D.offsetToIndices("global_idx")};
        var indices_indices = ${S.type.indices}(0);
        ${n.length>1?`
          for (var i: u32 = 0; i < ${n.length}; i++) {
            let index = ${D.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${S.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${D.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${$.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${D.indicesGet("output_indices","i")};
          ${$.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${S.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${r[o]};
        }
        ${$.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${u.length}; i++) {
          let index = ${D.indicesGet("output_indices",`i + ${n.length} - 1`)};
          ${$.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${$.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${$.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${y?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${W.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${W.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${W.getByIndices("scale_indices")};
        ${X?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${X.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${X.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${y?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${Dr(p)}(quantized_data - zero_point) * scale;
        ${D.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${t.cacheKey};${e.filter((k,$)=>$!==1).map(k=>k.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(k,$)=>"rank")},getRunData:()=>({outputs:[{dims:u,dataType:p}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:g}),getShaderSource:l}},Jo=(e,t)=>{let r=e.inputs;Lu(r,t),e.compute(Ru(e.inputs,t))},Nu=e=>hr({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),ju,Uu,Lr,tc,Nc=j(()=>{rr(),Jt(),Or(),gr(),ju=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},Uu=(e,t)=>{let r=e[0].dims,n=e[0].dataType,s=r.length,o=e[1].dims,i=e[1].dataType,u=Oe.normalizeAxis(t.axis,s),c=r[u],p=o.slice(0),y=Oe.size(p),g=ut("input",n,s),l=ut("indicesInput",i,o.length),k=Yt("output",n,p.length),$=[{type:12,data:y},{type:6,data:c},{type:12,data:u}];return $.push(...Bt(r,o,p)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:p,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:$}),getShaderSource:S=>`
      ${S.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(g,l,k)}
      ${S.mainStart()}
      ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${k.offsetToIndices("global_idx")};

      var idx = ${l.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${g.type.indices}(outputIndices);
      ${g.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${g.getByIndices("inputIndices")};

      ${k.setByOffset("global_idx","value")};
  }`}},Lr=e=>hr({axis:e.axis}),tc=(e,t)=>{let r=e.inputs;ju(r),e.compute(Uu(e.inputs,t))}}),rc,ea,Vu,Wu,nc=j(()=>{rr(),Jt(),gr(),rc=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},ea=(e,t)=>{let r=e[0].dims.slice(),n=e[1].dims.slice(),[s,o,i]=dn.getShapeOfGemmResult(r,t.transA,n,t.transB,e.length===3?e[2].dims:void 0),u=[s,o];if(!u)throw new Error("Can't use gemm on the given tensors");let c=Oe.size(u),p=[{type:12,data:c},{type:12,data:s},{type:12,data:o},{type:12,data:i},{type:1,data:t.alpha},{type:1,data:t.beta}],y=["type","type"];e.length===3&&(p.push(...Bt(e[2].dims)),y.push("rank")),p.push(...Bt(u));let g=l=>{let k="";t.transA&&t.transB?k="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?k="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?k="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(k="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let $=t.alpha===1?"":"value *= uniforms.alpha;",S=ut("a",e[0].dataType,e[0].dims),W=ut("b",e[1].dataType,e[1].dims),X=S.type.value,D=null,se=[S,W];e.length===3&&(D=ut("c",e[2].dataType,e[2].dims.length),se.push(D));let le=Yt("output",e[0].dataType,u.length);se.push(le);let he=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${l.registerUniforms(he).declareVariables(...se)}

  ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${X}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${k}
    }

    ${$}
    ${D!=null?`let cOffset = ${D.broadcastedIndicesToOffset("vec2(m, n)",le)}; value += ${X}(uniforms.beta) * ${D.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:p}),getShaderSource:g}},Vu=e=>{let t=e.transA,r=e.transB,n=e.alpha,s=e.beta;return{transA:t,transB:r,alpha:n,beta:s,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Wu=(e,t)=>{rc(e.inputs),e.compute(ea(e.inputs,t))}}),yn,ta,ra,na,Gu,Pi,ic,sc=j(()=>{rr(),Jt(),Or(),_e(),us(),gr(),Vn(),yn=(e,t)=>e.length>t&&e[t].dims.length>0?e[t]:void 0,ta=(e,t)=>{let r=e[0],n=yn(e,1),s=yn(e,2),o=yn(e,3),i=yn(e,4),u=yn(e,5),c=yn(e,6),p=yn(e,7);if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let y=r.dims[0],g=r.dims[1],l=r.dims.length===3?r.dims[2]:t.numHeads*r.dims[4],k=g,$=0,S=0,W=Math.floor(l/t.numHeads);if(c&&p&&Oe.size(c.dims)&&Oe.size(p.dims)){if(c.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(c.dims[0]!==y||c.dims[1]!==t.numHeads||c.dims[3]!==W)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(p.dims[0]!==y||p.dims[1]!==t.numHeads||p.dims[3]!==W)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(c.dims[2]!==p.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(p.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');$=c.dims[2],S=c.dims[2]}else if(c&&Oe.size(c.dims)||p&&Oe.size(p.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let X;if(n&&Oe.size(n.dims)>0){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(n.dims.length===3){if(n.dims[2]!==r.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');X=2,k=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==t.numHeads||n.dims[3]!==2||n.dims[4]!==W)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(s)throw new Error('Expect "value" be none when "key" has packed kv format.');X=5,k=n.dims[1]}else{if(n.dims[1]!==t.numHeads||n.dims[3]!==W)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');X=0,k=n.dims[2]}}else{if(r.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(r.dims[2]!==t.numHeads||r.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');X=3}if(o&&Oe.size(o.dims)>0){if(o.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(n&&n.dims.length===5&&n.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let D=$+k,se=0;if(i&&Oe.size(i.dims)>0){se=8;let Re=i.dims;throw Re.length===1?Re[0]===y?se=1:Re[0]===3*y+2&&(se=3):Re.length===2&&Re[0]===y&&Re[1]===D&&(se=5),se===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let le=!1,he=l;if(s&&Oe.size(s.dims)>0){if(s.dims.length!==3&&s.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==s.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(s.dims.length===3){if(k!==s.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');he=s.dims[2]}else{if(k!==s.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');he=s.dims[1]*s.dims[3],le=!0}}let Be=!1;if(i&&Oe.size(i.dims)>0)throw new Error("Key padding mask is not supported");if(u&&Oe.size(u.dims)>0){if(u.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(u.dims[0]!==y||u.dims[1]!==t.numHeads||u.dims[2]!==g||u.dims[3]!==D)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:y,sequenceLength:g,pastSequenceLength:$,kvSequenceLength:k,totalSequenceLength:D,maxSequenceLength:S,inputHiddenSize:0,hiddenSize:l,vHiddenSize:he,headSize:W,vHeadSize:Math.floor(he/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:se,scale:t.scale,broadcastResPosBias:Be,passPastInKv:le,qkvFormat:X}},ra=e=>hr({...e}),na=hr({perm:[0,2,1,3]}),Gu=(e,t,r,n,s,o,i)=>{let u=[n,s,o],c=Oe.size(u),p=[{type:12,data:c},{type:12,data:i},{type:12,data:o}],y=g=>{let l=Yt("qkv_with_bias",t.dataType,u),k=ut("qkv",t.dataType,u),$=ut("bias",r.dataType,u),S=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${g.registerUniforms(S).declareVariables(k,$,l)}
  ${g.mainStart()}
    ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:p}),getShaderSource:y},{inputs:[t,r],outputs:[-1]})[0]},Pi=(e,t,r,n,s,o,i,u)=>{let c=o;if(i&&Oe.size(i.dims)>0){if(n===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return c=Gu(e,o,i,t,n,r*s,u),c=c.reshape([t,n,r,s]),r===1||n===1?c:e.compute(Tn(c,na.perm),{inputs:[c],outputs:[-1]})[0]}else return o.dims.length===3&&(c=o.reshape([t,n,r,s])),r===1||n===1?c:e.compute(Tn(c,na.perm),{inputs:[c],outputs:[-1]})[0]},ic=(e,t)=>{let r=ta(e.inputs,t),n=e.inputs[0],s=yn(e.inputs,1),o=yn(e.inputs,2),i=yn(e.inputs,3),u=yn(e.inputs,4),c=yn(e.inputs,5),p=yn(e.inputs,6),y=yn(e.inputs,7);if(n.dims.length===5)throw new Error("Packed QKV is not implemented");if((s==null?void 0:s.dims.length)===5)throw new Error("Packed KV is not implemented");let g=s&&o&&s.dims.length===4&&o.dims.length===4,l=Pi(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,n,i,0);if(g)return Si(e,l,s,o,u,void 0,p,y,c,r);if(!s||!o)throw new Error("key and value must be provided");let k=Pi(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,s,i,r.hiddenSize),$=Pi(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,o,i,2*r.hiddenSize);Si(e,l,k,$,u,void 0,p,y,c,r)}}),qu,Hu,Ku,Xu,ia,Qu,Yu,Zu=j(()=>{rr(),Jt(),Or(),gr(),qu=e=>{if(!e||e.length<1)throw new Error("too few inputs")},Hu=(e,t)=>{let r=[],n=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(s=>r.push(Number(s))),n=r.length),hr({numOutputs:n,axis:t.axis,splitSizes:r})},Ku=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${Xt("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,Xu=e=>{let t=e.length,r=[];for(let n=0;n<t;++n){let s=e[n].setByIndices("indices","input[global_idx]");t===1?r.push(s):n===0?r.push(`if (output_number == ${n}u) { ${s} }`):n===t-1?r.push(`else { ${s} }`):r.push(`else if (output_number == ${n}) { ${s} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${r.join(`
`)}
      }`},ia=(e,t)=>{let r=e[0].dims,n=Oe.size(r),s=e[0].dataType,o=Oe.normalizeAxis(t.axis,r.length),i=new Array(t.numOutputs),u=ut("input",s,r.length),c=new Array(t.numOutputs),p=[],y=[],g=0,l=[{type:12,data:n}];for(let $=0;$<t.numOutputs;$++){g+=t.splitSizes[$],c[$]=g;let S=r.slice();S[o]=t.splitSizes[$],y.push(S),i[$]=Yt(`output${$}`,s,S.length),p.push({dims:y[$],dataType:e[0].dataType})}l.push({type:12,data:c},...Bt(r,...y));let k=$=>`
  ${$.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",c.length).declareVariables(u,...i)}
  ${Ku(c.length)}
  ${Xu(i)}

  ${$.mainStart()}
    ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${u.offsetToIndices("global_idx")};
    var index = ${u.indicesGet("indices",o)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${Xt("uniforms.size_in_split_axis","output_number - 1u",c.length)};
      ${u.indicesSet("indices",o,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:k,getRunData:()=>({outputs:p,dispatchGroup:{x:Math.ceil(n/64)},programUniforms:l})}},Qu=(e,t)=>{qu(e.inputs);let r=e.inputs.length===1?t:Hu(e.inputs,t);e.compute(ia(e.inputs,r),{inputs:[0]})},Yu=e=>{let t=e.axis,r=e.splitSizes,n=e.numOutputs<0?r.length:e.numOutputs;if(n!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return hr({axis:t,numOutputs:n,splitSizes:r})}}),Ju,ed,sa,td,oc=j(()=>{Or(),us(),sc(),Zu(),Vn(),Ju=(e,t)=>{if(t.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let r=e[0],n=e[1],s=e[2],o=e[3],i=e[4];if(t.localWindowSize!==-1)throw new Error("Local attention is not supported");if(t.softcap!==0)throw new Error("Softcap is not supported");if(t.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(t.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let u=!1,c=r.dims[0],p=r.dims[1],y=r.dims.length===3?u?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],g=p,l=0,k=!n||n.dims.length===0,$=Math.floor(k?y/(t.numHeads+2*t.kvNumHeads):y/t.numHeads);k&&(y=$*t.numHeads);let S=o&&o.dims.length!==0,W=i&&i.dims.length!==0;if(S&&o.dims.length===4&&o.dims[0]===c&&o.dims[1]!==t.kvNumHeads&&o.dims[2]===t.kvNumHeads&&o.dims[3]===$)throw new Error("BSNH pastKey/pastValue is not supported");if(S&&W){if(o.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(i.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');l=o.dims[2]}else if(S||W)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let X=1;if(n&&n.dims.length>0){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(n.dims.length===3){if(r.dims[2]%n.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');g=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==t.numHeads||n.dims[3]!==2||n.dims[4]!==$)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(s)throw new Error('Expect "value" be none when "key" has packed kv format.');g=n.dims[1]}else{if(n.dims[1]!==t.numHeads||n.dims[3]!==$)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');g=n.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');X=3}let D=0,se=!1,le=t.kvNumHeads?$*t.kvNumHeads:y;if(s&&s.dims.length>0){if(s.dims.length!==3&&s.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==s.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(s.dims.length===3){if(g!==s.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');le=s.dims[2]}else{if(g!==s.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');le=s.dims[1]*s.dims[3],se=!0}}let he=e.length>4?e[5]:void 0;if(he&&he.dims.length!==1&&he.dims[0]!==c)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:c,sequenceLength:p,pastSequenceLength:l,kvSequenceLength:g,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:y,vHiddenSize:le,headSize:$,vHeadSize:Math.floor(le/t.kvNumHeads),numHeads:t.numHeads,kvNumHeads:t.kvNumHeads,nReps:t.numHeads/t.kvNumHeads,pastPresentShareBuffer:!1,maskType:D,scale:t.scale,broadcastResPosBias:!1,passPastInKv:se,qkvFormat:X}},ed=hr({perm:[0,2,1,3]}),sa=(e,t,r)=>{let n=t,s=r.kvNumHeads;return t.dims.length===3&&r.kvSequenceLength!==0&&(n=t.reshape([r.batchSize,r.kvSequenceLength,s,r.headSize]),n=e.compute(Tn(n,ed.perm),{inputs:[n],outputs:[-1]})[0]),n},td=(e,t)=>{var W;let r=Ju(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(((W=e.inputs[1])==null?void 0:W.dims.length)===5)throw new Error("Packed KV is not implemented");let n=e.inputs[0],s=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,o=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,i=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,u=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,c=e.inputs.length>4?e.inputs[5]:void 0,p=e.inputs.length>5?e.inputs[6]:void 0,y=r.kvNumHeads?r.kvNumHeads:r.numHeads,g=hr({axis:2,numOutputs:3,splitSizes:[r.numHeads*r.headSize,y*r.headSize,y*r.headSize]}),[l,k,$]=!s&&!o?e.compute(ia([n],g),{inputs:[n],outputs:[-1,-1,-1]}):[n,s,o],S=Pi(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,l,void 0,0);Si(e,S,sa(e,k,r),sa(e,$,r),void 0,void 0,i,u,void 0,r,c,p)}}),oa,rd,nd,id,jc=j(()=>{rr(),Jt(),Vn(),gr(),oa=(e,t,r,n,s,o,i,u)=>{let c=Mr(o),p=c===1?"f32":`vec${c}f`,y=c===1?"vec2f":`mat2x${c}f`,g=s*i,l=[s,i,o/c],k=[s,i,2],$=["rank","type","type"],S=[];S.push(...Bt(l,k));let W=X=>{let D=ut("x",t.dataType,3,c),se=ut("scale",r.dataType,r.dims),le=ut("bias",n.dataType,n.dims),he=Yt("output",1,3,2),Be=[D,se,le,he],Re=64;return`
  var<workgroup> workgroup_shared : array<${y}, ${Re}>;
  const workgroup_size = ${Re}u;
  ${X.declareVariables(...Be)}
  ${X.mainStart(Re)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${p}(0);
    var squared_sum = ${p}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${p}(${D.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${y}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${Un("workgroup_shared[0][0]",c)} / f32(hight * ${c});
      let squared_sum_final = ${Un("workgroup_shared[0][1]",c)} / f32(hight * ${c});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${u}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${c};${u}`,inputDependencies:$},getRunData:()=>({outputs:[{dims:k,dataType:1}],dispatchGroup:{x:g},programUniforms:S}),getShaderSource:W},{inputs:[t,r,n],outputs:[-1]})[0]},rd=(e,t,r)=>{let n=t[0].dims,s=n,o=2,i=n[0],u=n[1],c=Oe.sizeFromDimension(n,o),p=Mr(c),y=Oe.size(s)/p,g=oa(e,t[0],t[1],t[2],i,c,u,r.epsilon),l=[i,u,c/p],k=[i,u],$=["type","none"],S=W=>{let X=ut("x",t[0].dataType,l.length,p),D=ut("scale_shift",1,k.length,2),se=Yt("output",t[0].dataType,l.length,p),le=[X,D,se];return`
  ${W.registerUniform("output_size","u32").declareVariables(...le)}
  ${W.mainStart()}
  ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${se.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${D.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${X.getByOffset("global_idx")} * ${se.type.value}(scale_shift.x) + ${se.type.value}(scale_shift.y);
      ${se.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${p}`,inputDependencies:$},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:[{type:12,data:y},...Bt(l,k,l)]}),getShaderSource:S},{inputs:[t[0],g]})},nd=(e,t,r)=>{let n=t[0].dims,s=n,o=n[0],i=n[n.length-1],u=Oe.sizeFromDimension(n,1)/i,c=Mr(i),p=Oe.size(s)/c,y=[{type:12,data:u},{type:12,data:Math.floor(i/c)}],g=["type","type"],l=[0,n.length-1];for(let W=0;W<n.length-2;W++)l.push(W+1);let k=e.compute(Tn(e.inputs[0],l),{inputs:[e.inputs[0]],outputs:[-1]})[0],$=oa(e,k,t[1],t[2],o,u,i,r.epsilon),S=W=>{let X=yr(t[0].dataType),D=c===1?"vec2f":`mat${c}x2f`,se=Be=>{let Re=Be===0?"x":"y",dt=c===1?"f32":`vec${c}f`;switch(c){case 1:return`${X}(${dt}(scale.${Re}))`;case 2:return`vec2<${X}>(${dt}(scale[0].${Re}, scale[1].${Re}))`;case 4:return`vec4<${X}>(${dt}(scale[0].${Re}, scale[1].${Re}, scale[2].${Re}, scale[3].${Re}))`;default:throw new Error(`Not supported compoents ${c}`)}},le=ut("input",t[0].dataType,t[0].dims,c),he=Yt("output",t[0].dataType,s,c);return`
  @group(0) @binding(0) var<storage, read> input : array<${le.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${D}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${he.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${W.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${se(0)}, ${se(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${c}`,inputDependencies:g},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:y}),getShaderSource:S},{inputs:[t[0],$]})},id=(e,t)=>{t.format==="NHWC"?nd(e,e.inputs,t):rd(e,e.inputs,t)}}),aa,sd,od,ac=j(()=>{rr(),Jt(),gr(),aa=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},sd=(e,t,r)=>{let n=t.simplified,s=e[0].dims,o=e[1],i=!n&&e[2],u=s,c=Oe.normalizeAxis(t.axis,s.length),p=Oe.sizeToDimension(s,c),y=Oe.sizeFromDimension(s,c),g=Oe.size(o.dims),l=i?Oe.size(i.dims):0;if(g!==y||i&&l!==y)throw new Error(`Size of X.shape()[axis:] == ${y}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${g} and bias size of ${l}`);let k=[];for(let he=0;he<s.length;++he)he<c?k.push(s[he]):k.push(1);let $=Mr(y),S=["type","type"],W=[{type:12,data:p},{type:1,data:y},{type:12,data:Math.floor(y/$)},{type:1,data:t.epsilon}];i&&S.push("type");let X=r>1,D=r>2,se=he=>{let Be=yr(e[0].dataType),Re=[ut("x",e[0].dataType,e[0].dims,$),ut("scale",o.dataType,o.dims,$)];i&&Re.push(ut("bias",i.dataType,i.dims,$)),Re.push(Yt("output",e[0].dataType,u,$)),X&&Re.push(Yt("mean_data_output",1,k)),D&&Re.push(Yt("inv_std_output",1,k));let dt=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${he.registerUniforms(dt).declareVariables(...Re)}
  ${he.mainStart()}
    ${he.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${ci("f32",$)};
    var mean_square_vector = ${ci("f32",$)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${Qn(Be,$,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Un("mean_vector",$)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Un("mean_square_vector",$)} / uniforms.norm_size ${n?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${Qn(Be,$,"x[j + offset]")};
      let f32scale = ${Qn(Be,$,"scale[j]")};
      output[j + offset] = ${Re[0].type.value}((f32input ${n?"":"- mean"}) * inv_std_dev * f32scale
        ${i?`+ ${Qn(Be,$,"bias[j]")}`:""}
      );
    }

    ${X?"mean_data_output[global_idx] = mean":""};
    ${D?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},le=[{dims:u,dataType:e[0].dataType}];return X&&le.push({dims:k,dataType:1}),D&&le.push({dims:k,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${$};${r};${n}`,inputDependencies:S},getRunData:()=>({outputs:le,dispatchGroup:{x:Math.ceil(p/64)},programUniforms:W}),getShaderSource:se}},od=(e,t)=>{aa(e.inputs),e.compute(sd(e.inputs,t,e.outputCount))}}),ad,ld,ud,dd,cd,lc=j(()=>{rr(),Jt(),Or(),gr(),ad=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],n=r.dims.length;if(r.dims[n-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let s=Math.floor((t.k+t.blockSize-1)/t.blockSize),o=t.blockSize/8*t.bits,i=e[1];if(!Oe.areEqual(i.dims,[t.n,s,o]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let u=e[2].dims;if(Oe.size(u)!==t.n*s)throw new Error("scales input size error.");if(e.length===4){let c=e[3].dims,p=t.bits>4?t.n*s:t.n*Math.floor((s+1)/2);if(Oe.size(c)!==p)throw new Error("zeroPoints input size error.")}},ld=(e,t)=>{let r=e[0].dims,n=r.length,s=r[n-2],o=t.k,i=t.n,u=r.slice(0,n-2),c=Oe.size(u),p=e[1].dims[2]/4,y=e[0].dataType,g=Mr(t.k),l=Mr(p),k=Mr(i),$=u.concat([s,i]),S=s>1&&i/k%2===0?2:1,W=Oe.size($)/k/S,X=64,D=[],se=[c,s,o/g],le=Oe.convertShape(e[1].dims).slice();le.splice(-1,1,p/l),D.push(...Bt(se)),D.push(...Bt(le)),D.push(...Bt(e[2].dims)),e.length===4&&D.push(...Bt(Oe.convertShape(e[3].dims)));let he=[c,s,i/k];D.push(...Bt(he));let Be=Re=>{let dt=se.length,Rt=ut("a",e[0].dataType,dt,g),Wt=ut("b",12,le.length,l),pr=ut("scales",e[2].dataType,e[2].dims.length),ur=[Rt,Wt,pr],Zt=e.length===4?ut("zero_points",12,e[3].dims.length):void 0;Zt&&ur.push(Zt);let Ar=he.length,Wr=Yt("output",e[0].dataType,Ar,k),wr=yr(e[0].dataType),Br=(()=>{switch(g){case 1:return`array<${wr}, 8>`;case 2:return`mat4x2<${wr}>`;case 4:return`mat2x4<${wr}>`;default:throw new Error(`${g}-component is not supported.`)}})(),Qt=()=>{let nt=`
          // reuse a data
            var input_offset = ${Rt.indicesToOffset(`${Rt.type.indices}(batch, row, word_offset)`)};
            var a_data: ${Br};
            for (var j: u32 = 0; j < ${8/g}; j++) {
              a_data[j] = ${Rt.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let At=0;At<k*S;At++)nt+=`
            b_value = ${l===1?`b${At}_data`:`b${At}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${Br}(${Array.from({length:4},(lr,Ur)=>`${wr}(b_value_lower[${Ur}]), ${wr}(b_value_upper[${Ur}])`).join(", ")});
            b_dequantized_values = ${g===1?`${Br}(${Array.from({length:8},(lr,Ur)=>`(b_quantized_values[${Ur}] - ${Zt?`zero_point${At}`:"zero_point"}) * scale${At}`).join(", ")});`:`(b_quantized_values - ${Br}(${Array(8).fill(`${Zt?`zero_point${At}`:"zero_point"}`).join(",")})) * scale${At};`};
            workgroup_shared[local_id.x * ${S} + ${Math.floor(At/k)}]${k>1?`[${At%k}]`:""} += ${Array.from({length:8/g},(lr,Ur)=>`${g===1?`a_data[${Ur}] * b_dequantized_values[${Ur}]`:`dot(a_data[${Ur}], b_dequantized_values[${Ur}])`}`).join(" + ")};
          `;return nt},tr=()=>{let nt=`
            var col_index = col * ${k};
            ${Zt?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${wr}(8);`}
            `;for(let At=0;At<k*S;At++)nt+=`
            let scale${At} = ${pr.getByOffset("col_index * nBlocksPerCol + block")};
            ${Zt?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${Zt.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${At} = ${wr}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return nt},kr=()=>{let nt=`col_index = col * ${k};`;for(let At=0;At<k*S;At++)nt+=`
            let b${At}_data = ${Wt.getByIndices(`${Wt.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return nt+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${Br};
            var b_dequantized_values: ${Br};`,nt};return`
        var<workgroup> workgroup_shared: array<${Wr.type.value}, ${S*X}>;
        ${Re.declareVariables(...ur,Wr)}
        ${Re.mainStart([X,1,1])}
          let output_indices = ${Wr.offsetToIndices(`(global_idx / ${X}) * ${S}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${X}) {
            //process one block
            var word_offset: u32 = block * ${t.blockSize/g};
            ${tr()}
            for (var word: u32 = 0; word < ${p}; word += ${l}) {
              ${kr()}
              for (var i: u32 = 0; i < ${l}; i++) {
                ${Qt()}
                word_offset += ${8/g};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${S}) {
            var output_value: ${Wr.type.value} = ${Wr.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${X}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${S};
            }
            ${Wr.setByIndices(`${Wr.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${t.blockSize};${t.bits};${g};${l};${k};${S};${X}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:$,dataType:y}],dispatchGroup:{x:W},programUniforms:D}),getShaderSource:Be}},ud=(e,t)=>{let r=e[0].dims,n=r.length,s=r[n-2],o=t.k,i=t.n,u=r.slice(0,n-2),c=Oe.size(u),p=e[1].dims[2]/4,y=e[0].dataType,g=Mr(t.k),l=Mr(p),k=u.concat([s,i]),$=128,S=i%8===0?8:i%4===0?4:1,W=$/S,X=W*l*8,D=X/g,se=X/t.blockSize,le=Oe.size(k)/S,he=[],Be=[c,s,o/g],Re=Oe.convertShape(e[1].dims).slice();Re.splice(-1,1,p/l),he.push(...Bt(Be)),he.push(...Bt(Re)),he.push(...Bt(e[2].dims)),e.length===4&&he.push(...Bt(Oe.convertShape(e[3].dims)));let dt=[c,s,i];he.push(...Bt(dt));let Rt=Wt=>{let pr=Be.length,ur=ut("a",e[0].dataType,pr,g),Zt=ut("b",12,Re.length,l),Ar=ut("scales",e[2].dataType,e[2].dims.length),Wr=[ur,Zt,Ar],wr=e.length===4?ut("zero_points",12,e[3].dims.length):void 0;wr&&Wr.push(wr);let Br=dt.length,Qt=Yt("output",e[0].dataType,Br),tr=yr(e[0].dataType),kr=()=>{switch(g){case 1:return`
          let a_data0 = vec4<${tr}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${tr}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${tr}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${tr}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${g}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${ur.type.value}, ${D}>;
        var<workgroup> inter_results: array<array<${Qt.type.value}, ${W}>, ${S}>;
        ${Wt.declareVariables(...Wr,Qt)}
        ${Wt.mainStart([W,S,1])}
          let output_indices = ${Qt.offsetToIndices(`workgroup_index * ${S}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${se} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${D};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${D}; a_offset += ${$})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${ur.getByIndices(`${ur.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${ur.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${se} + local_id.x;
            ${wr?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${wr.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${tr}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${tr}(8);`}
            let scale = ${Ar.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${Zt.getByIndices(`${Zt.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${t.blockSize/g};
            for (var i: u32 = 0; i < ${l}; i++) {
              ${kr()}
              let b_value = ${l===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${tr}>(${Array.from({length:4},(nt,At)=>`${tr}(b_value_lower[${At}]), ${tr}(b_value_upper[${At}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${tr}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(nt,At)=>`${`dot(a_data${At}, b_dequantized_values[${At}])`}`).join(" + ")};
              word_offset += ${8/g};
            }
            workgroupBarrier();
          }

          if (local_idx < ${S}) {
            var output_value: ${Qt.type.value} = ${Qt.type.value}(0);
            for (var b = 0u; b < ${W}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${Qt.setByIndices(`${Qt.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${t.blockSize};${g};${l};${W};${S}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:k,dataType:y}],dispatchGroup:{x:le},programUniforms:he}),getShaderSource:Rt}},dd=(e,t)=>{ad(e.inputs,t),t.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(ud(e.inputs,t)):e.compute(ld(e.inputs,t))},cd=e=>hr(e)}),pd,hd,fd,md,_d,gd,wd,yd,bd,uc=j(()=>{rr(),Jt(),gr(),pd=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},hd=(e,t,r)=>{let n="";for(let s=t-1;s>=0;--s)n+=`
            k = i32(${e.indicesGet("indices",s)}) - ${Xt("uniforms.pads",s,r)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${Xt("uniforms.x_shape",s,t)})) {
              break;
            }
            offset += k * i32(${Xt("uniforms.x_strides",s,t)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${n}
            value = x[offset];
          }
      `},fd=(e,t,r)=>{let n="";for(let s=t-1;s>=0;--s)n+=`
                k = i32(${e.indicesGet("indices",s)}) - ${Xt("uniforms.pads",s,r)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${Xt("uniforms.x_shape",s,t)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${Xt("uniforms.x_shape",s,t)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${Xt("uniforms.x_strides",s,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},md=(e,t,r)=>{let n="";for(let s=t-1;s>=0;--s)n+=`
                k = i32(${e.indicesGet("indices",s)}) - ${Xt("uniforms.pads",s,r)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${Xt("uniforms.x_shape",s,t)})) {
                  k = i32(${Xt("uniforms.x_shape",s,t)}) - 1;
                }
                offset += k * i32(${Xt("uniforms.x_strides",s,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},_d=(e,t,r)=>{let n="";for(let s=t-1;s>=0;--s)n+=`
                k = i32(${e.indicesGet("indices",s)}) - ${Xt("uniforms.pads",s,r)};
                if (k < 0)  {
                  k += i32(${Xt("uniforms.x_shape",s,t)}]);
                }
                if (k >= i32(${Xt("uniforms.x_shape",s,t)})) {
                  k -= i32(${Xt("uniforms.x_shape",s,t)});
                }
                offset += k * i32(${Xt("uniforms.x_strides",s,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},gd=(e,t,r)=>{switch(r.mode){case 0:return hd(e,t,r.pads.length);case 1:return fd(e,t,r.pads.length);case 2:return md(e,t,r.pads.length);case 3:return _d(e,t,r.pads.length);default:throw new Error("Invalid mode")}},wd=(e,t)=>{let r=Oe.padShape(e[0].dims.slice(),t.pads),n=e[0].dims,s=Oe.size(r),o=[{type:12,data:s},{type:6,data:t.pads}],i=e.length>=3&&e[2].data;t.mode===0&&o.push({type:i?e[2].dataType:1,data:t.value}),o.push(...Bt(e[0].dims,r));let u=["rank"],c=p=>{let y=Yt("output",e[0].dataType,r.length),g=ut("x",e[0].dataType,n.length),l=g.type.value,k=gd(y,n.length,t),$=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&$.push({name:"constant_value",type:i?l:"f32"}),`
            ${p.registerUniforms($).declareVariables(g,y)}
            ${p.mainStart()}
            ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${y.offsetToIndices("global_idx")};

            var value = ${l}(0);
            ${k}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}${i}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Oe.size(r)/64)},programUniforms:o}),getShaderSource:c}},yd=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),n=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,s=e[0].dims.length,o=new Int32Array(2*s).fill(0);if(e.length>=4){let u=e[3].getBigInt64Array();for(let c=0;c<u.length;c++)o[Number(u[c])]=Number(r[c]),o[Number(u[c])+s]=Number(r[c+u.length])}else r.forEach((u,c)=>o[Number(c)]=Number(u));let i=[];return o.forEach(u=>i.push(u)),{mode:t.mode,value:n,pads:i}}else return t},bd=(e,t)=>{pd(e.inputs);let r=yd(e.inputs,t);e.compute(wd(e.inputs,r),{inputs:[0]})}}),Xi,la,ua,da,ca,Md,vd,pa,xd,_r,Td,on,cn,_n,ri,dc,Ed,Cd,_,T=j(()=>{d(),rr(),Jt(),gr(),Xi=e=>{if(P.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},la=(e,t,r)=>{let n=t.format==="NHWC",s=e.dims.slice();n&&s.splice(1,0,s.pop());let o=Object.hasOwnProperty.call(t,"dilations"),i=t.kernelShape.slice(),u=t.strides.slice(),c=o?t.dilations.slice():[],p=t.pads.slice();nn.adjustPoolAttributes(r,s,i,u,c,p);let y=nn.computePoolOutputShape(r,s,u,c,i,p,t.autoPad),g=Object.assign({},t);o?Object.assign(g,{kernelShape:i,strides:u,pads:p,dilations:c,cacheKey:t.cacheKey}):Object.assign(g,{kernelShape:i,strides:u,pads:p,cacheKey:t.cacheKey});let l=y.slice();return l.push(l.splice(1,1)[0]),[g,n?l:y]},ua=(e,t)=>{let r=t.format==="NHWC",n=Oe.size(e),s=Oe.size(t.kernelShape),o=[{type:12,data:n},{type:12,data:s}],i=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let u=t.kernelShape[t.kernelShape.length-1],c=t.strides[t.strides.length-1],p=t.pads[t.pads.length/2-1],y=t.pads[t.pads.length-1],g=!!(p+y);o.push({type:12,data:u},{type:12,data:c},{type:12,data:p},{type:12,data:y}),i.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let l=!1;if(t.kernelShape.length===2){let k=t.kernelShape[t.kernelShape.length-2],$=t.strides[t.strides.length-2],S=t.pads[t.pads.length/2-2],W=t.pads[t.pads.length-2];l=!!(S+W),o.push({type:12,data:k},{type:12,data:$},{type:12,data:S},{type:12,data:W}),i.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[o,i,!0,g,l]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let u=Oe.computeStrides(t.kernelShape);o.push({type:12,data:u},{type:12,data:t.pads},{type:12,data:t.strides}),i.push({name:"kernelStrides",type:"u32",length:u.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let c=t.pads.reduce((p,y)=>p+y);return[o,i,!!c,!1,!1]}},da=(e,t,r,n,s,o,i,u,c,p,y,g)=>{let l=s.format==="NHWC",k=t.type.value,$=Yt("output",t.type.tensor,n);if(s.kernelShape.length<=2){let S="",W="",X="",D=r-(l?2:1);if(y?S=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${D}] = indices[${D}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${D}] < 0 || xIndices[${D}]
                      >= uniforms.x_shape[${D}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${o}
                }`:S=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${D}] = indices[${D}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${o}
                }`,s.kernelShape.length===2){let se=r-(l?3:2);g?W=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${se}] = indices[${se}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${se}] < 0 || xIndices[${se}] >= uniforms.x_shape[${se}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:W=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${se}] = indices[${se}] * uniforms.sh - uniforms.phStart + j;
                `,X=`
              }
            `}return`
            ${e.registerUniforms(c).declareVariables(t,$)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${$.offsetToIndices("global_idx")};
              var xIndices = ${$.offsetToIndices("global_idx")};

              var value = ${k}(${u});
              var pad = 0;
              ${W}
              ${S}
              ${X}
              ${i}

              output[global_idx] = value;
            }`}else{if(l)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let S=s.kernelShape.length,W=s.pads.length,X="";return p?X=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${t.indicesToOffset("xIndices")}];
                ${o}
              }`:X=`
              }
              let x_val = x[${t.indicesToOffset("xIndices")}];
              ${o}
            `,`
            ${e.registerUniforms(c).declareVariables(t,$)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${$.offsetToIndices("global_idx")};
              var xIndices = ${$.offsetToIndices("global_idx")};

              var offsets: array<u32, ${S}>;

              var value = ${k}(${u});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${S-1}u; j++) {
                  offsets[j] = offset / ${Xt("uniforms.kernelStrides","j",S)};
                  offset -= offsets[j] * ${Xt("uniforms.kernelStrides","j",S)};
                }
                offsets[${S-1}] = offset;

                isPad = false;
                for (var j = ${r-S}u; j < ${r}u; j++) {
                  xIndices[j] = indices[j] * ${Xt("uniforms.strides",`j - ${r-S}u`,S)}
                    + offsets[j - ${r-S}u] - ${Xt("uniforms.pads","j - 2u",W)};
                  ${X}
              }
              ${i}

              output[global_idx] = value;
            }`}},ca=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Md=e=>`${ca(e)};${e.countIncludePad}`,vd=e=>`${ca(e)};${e.storageOrder};${e.dilations}`,pa=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),xd=(e,t,r,n)=>{let[s,o]=la(t,n,r),i=ut("x",t.dataType,t.dims.length),u=i.type.value,c="value += x_val;",p="";s.countIncludePad?p+=`value /= ${u}(uniforms.kernelSize);`:p+=`value /= ${u}(i32(uniforms.kernelSize) - pad);`;let[y,g,l,k,$]=ua(o,s);y.push(...Bt(t.dims,o));let S=["rank"];return{name:e,shaderCache:{hint:`${n.cacheKey};${l};${k};${$}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:o,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(Oe.size(o)/64)},programUniforms:y}),getShaderSource:W=>da(W,i,t.dims.length,o.length,s,c,p,0,g,l,k,$)}},_r=e=>{let t=e.count_include_pad!==0,r=pa(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let n={countIncludePad:t,...r,cacheKey:""};return{...n,cacheKey:Md(n)}},Td=(e,t)=>{Xi(e.inputs),e.compute(xd("AveragePool",e.inputs[0],!1,t))},on={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},cn=e=>{let t=e.format;return{format:t,...on,cacheKey:t}},_n=(e,t)=>{Xi(e.inputs),e.compute(xd("GlobalAveragePool",e.inputs[0],!0,t))},ri=(e,t,r,n)=>{let[s,o]=la(t,n,r),i=`
      value = max(x_val, value);
    `,u="",c=ut("x",t.dataType,t.dims.length),p=["rank"],[y,g,l,k,$]=ua(o,s);return y.push(...Bt(t.dims,o)),{name:e,shaderCache:{hint:`${n.cacheKey};${l};${k};${$}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:o,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(Oe.size(o)/64)},programUniforms:y}),getShaderSource:S=>da(S,c,t.dims.length,o.length,s,i,u,t.dataType===10?-65504:-1e5,g,l,k,$)}},dc=(e,t)=>{Xi(e.inputs),e.compute(ri("MaxPool",e.inputs[0],!1,t))},Ed=e=>{let t=e.storage_order,r=e.dilations,n=pa(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let s={storageOrder:t,dilations:r,...n,cacheKey:""};return{...s,cacheKey:vd(s)}},Cd=e=>{let t=e.format;return{format:t,...on,cacheKey:t}},_=(e,t)=>{Xi(e.inputs),e.compute(ri("GlobalMaxPool",e.inputs[0],!0,t))}}),q,Ae,et,We,xt=j(()=>{rr(),Jt(),Or(),gr(),q=(e,t)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((r,n)=>r===e[2].dims[n]).reduce((r,n)=>r&&n,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(t.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((s,o)=>o===t.axis||s===e[0].dims[o]).reduce((s,o)=>s&&o,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let r=e[0].dims[t.axis],n=e[1].dims[t.axis];if(t.blockSize<Math.ceil(r/n)||t.blockSize>Math.ceil(r/(n-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},Ae=(e,t)=>{let r=Oe.normalizeAxis(t.axis,e[0].dims.length),n=e[0].dataType,s=n===3,o=e[0].dims,i=e[1].dataType,u=Oe.size(o),c=n===3||n===2,p=c?[Math.ceil(Oe.size(e[0].dims)/4)]:e[0].dims,y=e[1].dims,g=e.length>2?e[2]:void 0,l=g?c?[Math.ceil(Oe.size(g.dims)/4)]:g.dims:void 0,k=y.length===0||y.length===1&&y[0]===1,$=k===!1&&y.length===1,S=Mr(u),W=k&&(!c||S===4),X=W?S:1,D=W&&!c?S:1,se=ut("input",c?12:n,p.length,D),le=ut("scale",i,y.length),he=g?ut("zero_point",c?12:n,l.length):void 0,Be=Yt("output",i,o.length,X),Re=[se,le];he&&Re.push(he);let dt=[p,y];g&&dt.push(l);let Rt=[{type:12,data:u/X},{type:12,data:r},{type:12,data:t.blockSize},...Bt(...dt,o)],Wt=pr=>{let ur=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${pr.registerUniforms(ur).declareVariables(...Re,Be)}
      ${pr.mainStart()}
          ${pr.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${Be.offsetToIndices("global_idx")};

          // Set input x
          ${c?`
            let input = ${se.getByOffset("global_idx / 4")};
            let x_vec = ${s?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${X===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${se.getByOffset("global_idx")};`};

          // Set scale input
          ${k?`let scale_value= ${le.getByOffset("0")}`:$?`
            let scale_index = ${Be.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${le.getByOffset("scale_index")};`:`
            var scale_indices: ${le.type.indices} = output_indices;
            let index = ${le.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${le.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${le.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${he?k?c?`
                let zero_point_input = ${he.getByOffset("0")};
                let zero_point_vec =  ${s?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${he.getByOffset("0")}`:$?c?`
                let zero_point_index = ${Be.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${he.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${s?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${Be.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${he.getByOffset("zero_point_index")};`:c?`
                let zero_point_offset = ${le.indicesToOffset("scale_indices")};
                let zero_point_input = ${he.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${s?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${he.getByIndices("scale_indices")};`:`let zero_point_value = ${c?s?"i32":"u32":se.type.value}(0);`};
      // Compute and write output
      ${Be.setByOffset("global_idx",`${Be.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:t.cacheKey,inputDependencies:he?["rank","rank","rank"]:["rank","rank"]},getShaderSource:Wt,getRunData:()=>({outputs:[{dims:o,dataType:i}],dispatchGroup:{x:Math.ceil(u/X/64),y:1,z:1},programUniforms:Rt})}},et=(e,t)=>{q(e.inputs,t),e.compute(Ae(e.inputs,t))},We=e=>hr({axis:e.axis,blockSize:e.blockSize})}),Dt,Ht,ar,Rr=j(()=>{d(),rr(),gr(),Dt=(e,t,r)=>{let n=e===t,s=e<t&&r<0,o=e>t&&r>0;if(n||s||o)throw new Error("Range these inputs' contents are invalid.")},Ht=(e,t,r,n)=>{let s=Math.abs(Math.ceil((t-e)/r)),o=[s],i=s,u=[{type:12,data:i},{type:n,data:e},{type:n,data:r},...Bt(o)],c=p=>{let y=Yt("output",n,o.length),g=y.type.value,l=[{name:"outputSize",type:"u32"},{name:"start",type:g},{name:"delta",type:g}];return`
        ${p.registerUniforms(l).declareVariables(y)}
        ${p.mainStart()}
        ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${g}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${n}`},getShaderSource:c,getRunData:()=>({outputs:[{dims:o,dataType:n}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:u})}},ar=e=>{let t=0,r=0,n=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],n=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],n=e.inputs[2].getFloat32Array()[0]),P.webgpu.validateInputContent&&Dt(t,r,n),e.compute(Ht(t,r,n,e.inputs[0].dataType),{inputs:[]})}}),Nr,xr,cr,zr,Pr,Tr,jr,En,pn,Kr,en,Zr,bn,ni,Ts,ha,Uc,Ln,Ai,Vc=j(()=>{rr(),Jt(),Or(),gr(),Nr=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},xr=(e,t,r)=>{t.every(s=>s>=0&&s<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let n=new Array(r).fill(1);return t.forEach((s,o)=>n[s]=e[o]),n},cr=(e,t,r,n,s,o)=>{let[i,u,c]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],p=e[0].dims.length;if(i>0&&e.length>i&&e[i].dims.length>0)e[i].getFloat32Array().forEach(y=>o.push(y));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(u>0&&e.length>u&&e[u].dims.length===1&&e[u].dims[0]>0){if(e[u].getFloat32Array().forEach(y=>n.push(y)),n.length!==0&&n.length!==p&&r>=18&&n.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Nr(n,t),t.axes.length>0&&xr(n,t.axes,p).forEach((y,g)=>n[g]=y)}if(c>0&&e.length>c&&e[c].dims.length===1&&e[c].dims[0]>0&&(e[c].getBigInt64Array().forEach(y=>s.push(Number(y))),s.length!==0&&s.length!==p&&r>=18&&s.length!==t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(n.length!==0&&n.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(s.length!==0&&s.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof n<"u"&&typeof s<"u"&&n.length>0&&s.length>p)throw new Error("Resize requires only of scales or sizes to be specified")},zr=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +
                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /
                        ${t}(lengthResized - 1);
                  } else {
                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);
                  const adjustment = ${t}(lengthResized) / outputWidth;
                  const center = ${t}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Pr=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Tr=(e,t,r)=>{let n=new Array(r).fill(0).concat(new Array(r).fill(1)),s=e.length===0?n:e.slice();return t.length>0?(t.forEach((o,i)=>{n[o]=s[i],n[i+r]=s[t.length+i]}),n):s},jr=(e,t,r,n)=>{let s=[];if(r.length>0)if(n.length>0){if(e.forEach(o=>s.push(o)),Math.max(...n)>e.length)throw new Error("axes is out of bound");n.forEach((o,i)=>s[o]=r[i])}else r.forEach(o=>s.push(o));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");s=e.map((o,i)=>Math.round(o*t[i]))}return s},En=(e,t,r)=>{let n=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(o=>t[o]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(o=>t[o]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let s=e.slice();return r.axes.length>0?(r.axes.forEach(o=>t[o]=n),r.axes.forEach(o=>s[o]=Math.round(e[o]*t[o]))):(t.fill(n,0,t.length),s.forEach((o,i)=>s[i]=Math.round(o*t[i]))),s},pn=(e,t,r,n,s)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {
      var original_indices: array<${e.type.value}, ${r.length}>;
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${Xt("uniforms.scales","i",n)};
        var roi_low = ${Xt("uniforms.roi","i",s)};
        var roi_hi = ${Xt("uniforms.roi",`i + ${t.length}`,s)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${Xt("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${Xt("uniforms.output_shape","i",r.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,Kr=(e,t,r,n,s,o,i)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${Xt("uniforms.scales","i",s)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${Xt("uniforms.roi","i",o)};
          var roi_hi = ${Xt("uniforms.roi",`i + ${r.length}`,o)};
          var input_shape_i = ${Xt("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${Xt("uniforms.output_shape","i",n.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${i} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,en=(e,t)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${Xt("uniforms.input_shape","i",t.length)}) {
          return false;
        }
      }
      return true;
    }`,Zr=(e,t,r,n)=>e.rank>n?`
    ${e.indicesSet("input_indices",t,"channel")};
    ${e.indicesSet("input_indices",r,"batch")};
`:"",bn=(e,t,r,n,s)=>{let[o,i,u,c]=r.length===2?[-1,0,1,-1]:[0,2,3,1],p=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${p} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",i,`max(0, min(row, ${r[i]} - 1))`)};
      ${e.indicesSet("input_indices",u,`max(0, min(col, ${r[u]} - 1))`)};
      ${Zr(e,c,o,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${p} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${p} = originalIndices[${i}];
      var col:${p} = originalIndices[${u}];
      ${n?`if (row < 0 || row > (${r[i]} - 1) || col < 0 || col > (${r[u]} - 1)) {
        return ${s};
      }`:""};
      row = max(0, min(row, ${r[i]} - 1));
      col = max(0, min(col, ${r[u]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${r.length>2?`u32(originalIndices[${c}])`:"0"};
      var batch: u32 =  ${r.length>2?`u32(originalIndices[${o}])`:"0"};
      var x11: ${p} = getInputValue(batch, channel, row1, col1);
      var x12: ${p} = getInputValue(batch, channel, row1, col2);
      var x21: ${p} = getInputValue(batch, channel, row2, col1);
      var x22: ${p} = getInputValue(batch, channel, row2, col2);
      var dx1: ${p} = abs(row - ${p}(row1));
      var dx2: ${p} = abs(${p}(row2) - row);
      var dy1: ${p} = abs(col - ${p}(col1));
      var dy2: ${p} = abs(${p}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},ni=(e,t,r,n,s,o,i,u,c,p)=>{let y=r.length===2,[g,l]=y?[0,1]:[2,3],k=e.type.value,$=S=>{let W=S===g?"row":"col";return`
      fn ${W}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${k} {
        var output_index = ${t.indicesGet("output_indices",S)};
        var originalIdx: ${k} = getOriginalCoordinateFromResizedCoordinate(output_index, ${s[S]},
        ${n[S]}, ${r[S]}, ${o[S]}, ${o[S]} + ${r.length});
        var fractOriginalIdx: ${k} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${u} && (originalIdx < 0 || originalIdx > (${r[S]} - 1))) {
          return ${c};
        }
        var data: array<${k}, 4> = array<${k}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${W}: ${k} = originalIdx + ${k}(i);
          if (${W} < 0 || ${W} >= ${r[S]}) {
            ${p?`coefs[i + 1] = 0.0;
                        continue;`:u?`return ${c};`:`${W} = max(0, min(${W}, ${r[S]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",S,`u32(${W})`)};
          data[i + 1] = ${S===g?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${$(g)};
    ${$(l)};
  fn getCubicInterpolationCoefs(s: ${k}) -> array<${k}, 4> {
    var absS = abs(s);
    var coeffs: array<${k}, 4> = array<${k}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${k} = 1.0 - absS;
    var twoMinusAbsS: ${k} = 2.0 - absS;
    var onePlusAbsS: ${k} = 1.0 + absS;
    coeffs[0] = ((${i} * onePlusAbsS - 5 * ${i}) * onePlusAbsS + 8 * ${i}) * onePlusAbsS - 4 * ${i};
    coeffs[1] = ((${i} + 2) * absS - (${i} + 3)) * absS * absS + 1;
    coeffs[2] = ((${i} + 2) * oneMinusAbsS - (${i} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${i} * twoMinusAbsS - 5 * ${i}) * twoMinusAbsS + 8 * ${i}) * twoMinusAbsS - 4 * ${i};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${k}, 4>, coefs: array<${k}, 4>) -> ${k} {
    var coefsSum: ${k} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${k} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},Ts=(e,t,r,n,s)=>{let[o,i,u,c,p]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],y=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${y} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",i,`max(0, min(depth, ${r[i]} - 1))`)};
      ${e.indicesSet("input_indices",u,`max(0, min(height, ${r[u]} - 1))`)};
      ${e.indicesSet("input_indices",c,`max(0, min(width, ${r[c]} - 1))`)};
      ${Zr(e,p,o,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${y} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${y} = originalIndices[${i}];
      var height:${y} = originalIndices[${u}];
      var width:${y} = originalIndices[${c}];
      ${n?`if (depth < 0 || depth > (${r[i]} - 1) || height < 0 || height > (${r[u]} - 1) || width < 0 || (width > ${r[c]} - 1)) {
      return ${s};
        }`:""};

    depth = max(0, min(depth, ${r[i]} - 1));
      height = max(0, min(height, ${r[u]} - 1));
      width = max(0, min(width, ${r[c]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${r.length>3?`u32(originalIndices[${p}])`:"0"};
      var batch: u32 =  ${r.length>3?`u32(originalIndices[${o}])`:"0"};

      var x111: ${y} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${y} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${y} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${y} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${y} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${y} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${y} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${y} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${y} = abs(depth - ${y}(depth1));
      var dx2: ${y} = abs(${y}(depth2) - depth);
      var dy1: ${y} = abs(height - ${y}(height1));
      var dy2: ${y} = abs(${y}(height2) - height);
      var dz1: ${y} = abs(width - ${y}(width1));
      var dz2: ${y} = abs(${y}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},ha=(e,t,r,n,s,o)=>{let i=e.dims,u=Tr(o,t.axes,i.length),c=jr(i,n,s,t.axes),p=n.slice();n.length===0&&(p=i.map((D,se)=>D===0?1:c[se]/D),t.keepAspectRatioPolicy!=="stretch"&&(c=En(i,p,t)));let y=Yt("output",e.dataType,c.length),g=ut("input",e.dataType,i.length),l=Oe.size(c),k=i.length===c.length&&i.every((D,se)=>D===c[se]),$=t.coordinateTransformMode==="tf_crop_and_resize",S=t.extrapolationValue,W=g.type.value,X=D=>`
      ${k?"":`
      ${zr(t.coordinateTransformMode,W)};
      ${(()=>{switch(t.mode){case"nearest":return`
              ${en(g,i)};
              ${Pr(t.nearestMode,r,W)};
              ${Kr(g,y,i,c,p.length,u.length,$)};
              `;case"linear":return`
              ${pn(y,i,c,p.length,u.length)};
              ${(()=>{if(i.length===2||i.length===4)return`${bn(g,y,i,$,S)}`;if(i.length===3||i.length===5)return`${Ts(g,y,i,$,S)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(i.length===2||i.length===4)return`${ni(g,y,i,c,p,u,t.cubicCoeffA,$,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${D.registerUniform("output_size","u32").registerUniform("scales","f32",p.length).registerUniform("roi","f32",u.length).declareVariables(g,y)}
      ${D.mainStart()}
        ${D.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${k?"output[global_idx] = input[global_idx];":`
        let output_indices = ${y.offsetToIndices("global_idx")};
        var input_indices: ${g.type.indices};
        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${g.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${t.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${i.length===2||i.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${p.length>0?p:""}|${s.length>0?s:""}|${u.length>0?u:""}|${k}|${i}`,inputDependencies:["rank"]},getShaderSource:X,getRunData:()=>({outputs:[{dims:c,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:[{type:12,data:l},{type:1,data:p},{type:1,data:u},...Bt(i,c)]})}},Uc=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Ln=(e,t)=>{let r=[],n=[],s=[],o=Uc(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");cr(e.inputs,t,o,r,n,s),e.compute(ha(e.inputs[0],t,o,r,n,s),{inputs:[0]})},Ai=e=>{let t=e.antialias,r=e.axes,n=e.coordinateTransformMode,s=e.cubicCoeffA,o=e.excludeOutside!==0,i=e.extrapolationValue,u=e.keepAspectRatioPolicy,c=e.mode,p=e.nearestMode===""?"simple":e.nearestMode;return hr({antialias:t,axes:r,coordinateTransformMode:n,cubicCoeffA:s,excludeOutside:o,extrapolationValue:i,keepAspectRatioPolicy:u,mode:c,nearestMode:p})}}),cc,pc,$d,xm=j(()=>{rr(),Jt(),Or(),gr(),cc=(e,t)=>{let[r,n,s,o]=e,{numHeads:i,rotaryEmbeddingDim:u}=t;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!Oe.areEqual(n.dims,[])&&!Oe.areEqual(n.dims,[1])&&n.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${n.dims.length}`);if(s.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${s.dims.length}`);if(o.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${o.dims.length}`);if(!Oe.areEqual(s.dims,o.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(u>0&&i===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let c=r.dims[0],p=r.dims[r.dims.length-2],y=s.dims[0],g=Oe.sizeFromDimension(r.dims,1)/p,l=u===0?s.dims[1]*2:g/i;if(u>l)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(n.dims.length===2){if(c!==n.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${n.dims[0]}`);if(p!==n.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${n.dims[1]}`)}if(l/2!==s.dims[1]&&u/2!==s.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${s.dims[1]}`);if(p>y)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},pc=(e,t)=>{let{interleaved:r,numHeads:n,rotaryEmbeddingDim:s,scale:o}=t,i=e[0].dims[0],u=Oe.sizeFromDimension(e[0].dims,1),c=e[0].dims[e[0].dims.length-2],p=u/c,y=e[2].dims[1],g=s===0?y*2:p/n,l=new Array(i,c,p/g,g-y),k=Oe.computeStrides(l),$=[{type:1,data:o},{type:12,data:l},{type:12,data:k},...e[0].dims.length===3?new Array({type:12,data:[u,p,g,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[u,g,c*g,1]}):[],...Bt(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],S=W=>{let X=ut("input",e[0].dataType,e[0].dims.length),D=ut("position_ids",e[1].dataType,e[1].dims.length),se=ut("cos_cache",e[2].dataType,e[2].dims.length),le=ut("sin_cache",e[3].dataType,e[3].dims.length),he=Yt("output",e[0].dataType,e[0].dims.length);return W.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:l.length},{name:"global_strides",type:"u32",length:k.length},{name:"input_output_strides",type:"u32",length:k.length}]),`
        ${W.declareVariables(X,D,se,le,he)}

        ${W.mainStart(fn)}
          let half_rotary_emb_dim = uniforms.${se.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${W.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${D.broadcastedIndicesToOffset("bsnh.xy",Yt("",D.type.tensor,2))};
            let position_id =
                u32(${D.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});
            let j = i + select(half_rotary_emb_dim, 1, ${r});
            let re = ${X.getByOffset("i")} * ${se.get("position_id","bsnh[3]")} -
                ${X.getByOffset("j")} * ${le.get("position_id","bsnh[3]")};
            ${he.setByOffset("i","re")}
            let im = ${X.getByOffset("i")} * ${le.get("position_id","bsnh[3]")} +
                ${X.getByOffset("j")} * ${se.get("position_id","bsnh[3]")};
            ${he.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${he.setByOffset("k",X.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:hr({interleaved:r}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:S,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Oe.size(l)/fn)},programUniforms:$})}},$d=(e,t)=>{cc(e.inputs,t),e.compute(pc(e.inputs,t))}}),Lp,Rp,Np,Tm=j(()=>{rr(),Jt(),gr(),Lp=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],n=e[2];if(t.dataType!==r.dataType||t.dataType!==n.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let s=t.dims[t.dims.length-1],o=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==s)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==o)throw new Error("Skip must have the same sequence length as input");if(n.dims.length!==1)throw new Error("Gamma must be 1D");if(n.dims[n.dims.length-1]!==s)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let i=e[3];if(i.dims.length!==1)throw new Error("Beta must be 1D");if(i.dims[i.dims.length-1]!==s)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let i=e[4];if(i.dims.length!==1)throw new Error("Bias must be 1D");if(i.dims[i.dims.length-1]!==s)throw new Error("Bias must have the same hidden size as input")}},Rp=(e,t,r,n)=>{let s=t.simplified,o=e[0].dims,i=Oe.size(o),u=o,c=i,p=o.slice(-1)[0],y=n?o.slice(0,-1).concat(1):[],g=!s&&e.length>3,l=e.length>4,k=n&&r>1,$=n&&r>2,S=r>3,W=64,X=Mr(p),D=[{type:12,data:c},{type:12,data:X},{type:12,data:p},{type:1,data:t.epsilon}],se=he=>{let Be=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],Re=[ut("x",e[0].dataType,e[0].dims,X),ut("skip",e[1].dataType,e[1].dims,X),ut("gamma",e[2].dataType,e[2].dims,X)];g&&Re.push(ut("beta",e[3].dataType,e[3].dims,X)),l&&Re.push(ut("bias",e[4].dataType,e[4].dims,X)),Re.push(Yt("output",e[0].dataType,u,X)),k&&Re.push(Yt("mean_output",1,y)),$&&Re.push(Yt("inv_std_output",1,y)),S&&Re.push(Yt("input_skip_bias_sum",e[0].dataType,u,X));let dt=yr(e[0].dataType),Rt=yr(1,X);return`

      ${he.registerUniforms(Be).declareVariables(...Re)}
      var<workgroup> sum_shared : array<${Rt}, ${W}>;
      var<workgroup> sum_squared_shared : array<${Rt}, ${W}>;

      ${he.mainStart([W,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${W};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${W};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${W-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${l?"bias[offset1d + i]":dt+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${S?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${Qn(dt,X,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${W};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${Un("sum",X)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Un("square_sum",X)} / f32(uniforms.hidden_size) ${s?"":"- mean * mean"} + uniforms.epsilon);
        ${k?"mean_output[global_idx] = mean;":""}
        ${$?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${s?"":`- ${dt}(mean)`}) *
            ${dt}(inv_std_dev) * gamma[offset1d + i]
            ${g?"+ beta[offset1d + i]":""};
        }
      }`},le=[{dims:u,dataType:e[0].dataType}];return r>1&&le.push({dims:y,dataType:1}),r>2&&le.push({dims:y,dataType:1}),r>3&&le.push({dims:o,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${X};${k};${$};${S}`,inputDependencies:e.map((he,Be)=>"type")},getShaderSource:se,getRunData:()=>({outputs:le,dispatchGroup:{x:Math.ceil(c/p)},programUniforms:D})}},Np=(e,t)=>{Lp(e.inputs);let r=[0];e.outputCount>1&&r.push(-3),e.outputCount>2&&r.push(-3),e.outputCount>3&&r.push(3),e.compute(Rp(e.inputs,t,e.outputCount,!1),{outputs:r})}}),jp,kd,Up,Wc,Vp,Wp,Gp,qp,Em=j(()=>{rr(),Jt(),Or(),gr(),jp=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,n)=>{if(e[n+1].dataType!==6&&e[n+1].dataType!==7)throw new Error(`Input ${n} must be an array of int32 or int64`)})},kd=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(n=>r.push(Number(n)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(n=>r.push(Number(n)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},Up=(e,t)=>{if(e.length>1){let r=kd(e,1),n=kd(e,2),s=kd(e,3);return s.length===0&&(s=[...Array(e[0].dims.length).keys()]),hr({starts:r,ends:n,axes:s})}else return t},Wc=(e,t,r,n,s)=>{let o=e;return e<0&&(o+=r[n[t]]),s[t]<0?Math.max(0,Math.min(o,r[n[t]]-1)):Math.max(0,Math.min(o,r[n[t]]))},Vp=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${r.length}; i >= 0; i--) {
            let input_shape_i = ${Xt("uniforms.input_shape","i",r.length)};
            let steps_i = ${Xt("uniforms.steps","i",r.length)};
            let signs_i = ${Xt("uniforms.signs","i",r.length)};
            let starts_i = ${Xt("uniforms.starts","i",r.length)};
            var output_index = ${t.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,Wp=(e,t)=>{let r=e[0].dims,n=Oe.size(r),s=t.axes.length>0?Oe.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],o=kd(e,4);o.forEach(X=>X!==0||(()=>{throw new Error("step cannot be 0")})),o.length===0&&(o=Array(s.length).fill(1));let i=t.starts.map((X,D)=>Wc(X,D,r,s,o)),u=t.ends.map((X,D)=>Wc(X,D,r,s,o));if(s.length!==i.length||s.length!==u.length)throw new Error("start, ends and axes should have the same number of elements");if(s.length!==r.length)for(let X=0;X<r.length;++X)s.includes(X)||(i.splice(X,0,0),u.splice(X,0,r[X]),o.splice(X,0,1));let c=o.map(X=>Math.sign(X));o.forEach((X,D,se)=>{if(X<0){let le=(u[D]-i[D])/X,he=i[D],Be=he+le*o[D];i[D]=Be,u[D]=he,se[D]=-X}});let p=r.slice(0);s.forEach((X,D)=>{p[X]=Math.ceil((u[X]-i[X])/o[X])});let y={dims:p,dataType:e[0].dataType},g=Yt("output",e[0].dataType,p.length),l=ut("input",e[0].dataType,e[0].dims.length),k=Oe.size(p),$=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:i.length},{name:"signs",type:"i32",length:c.length},{name:"steps",type:"u32",length:o.length}],S=[{type:12,data:k},{type:12,data:i},{type:6,data:c},{type:12,data:o},...Bt(e[0].dims,p)],W=X=>`
      ${X.registerUniforms($).declareVariables(l,g)}
        ${Vp(l,g,r)}
        ${X.mainStart()}
          ${X.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${g.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${g.setByOffset("global_idx",l.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${c.length}_${i.length}_${o.length}`,inputDependencies:["rank"]},getShaderSource:W,getRunData:()=>({outputs:[y],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:S})}},Gp=(e,t)=>{jp(e.inputs,t);let r=Up(e.inputs,t);e.compute(Wp(e.inputs,r),{inputs:[0]})},qp=e=>{let t=e.starts,r=e.ends,n=e.axes;return hr({starts:t,ends:r,axes:n})}}),Hp,Kp,Xp,Qp,Cm=j(()=>{rr(),Jt(),Or(),Vn(),gr(),Hp=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Kp=(e,t)=>{let r=e.inputs[0],n=r.dims,s=Oe.size(n),o=64,i=n.length,u=Oe.normalizeAxis(t.axis,i),c=u<n.length-1,p,y=[];c?(y=Array.from({length:i},(Re,dt)=>dt),y[u]=i-1,y[i-1]=u,p=e.compute(Tn(r,y),{inputs:[r],outputs:[-1]})[0]):p=r;let g=p.dims,l=g[i-1],k=s/l,$=Mr(l),S=l/$,W=(Re,dt)=>dt===4?`max(max(${Re}.x, ${Re}.y), max(${Re}.z, ${Re}.w))`:dt===2?`max(${Re}.x, ${Re}.y)`:dt===3?`max(max(${Re}.x, ${Re}.y), ${Re}.z)`:Re,X=ut("x",p.dataType,p.dims,$),D=Yt("result",p.dataType,p.dims,$),se=X.type.value,le=yr(p.dataType)==="f32"?`var threadMax = ${se}(-3.402823e+38f);`:`var threadMax = ${se}(-65504.0h);`,he=Re=>`
      var<workgroup> rowMaxShared : ${se};
      var<workgroup> rowSumShared : ${se};
      var<workgroup> threadShared : array<${se}, ${o}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${se} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${se}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${Re.registerUniform("packedCols","i32").declareVariables(X,D)}
      ${Re.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${o};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${le}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${se}(${W("threadShared[0]",$)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${se}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${se}(${Un("threadShared[0]",$)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,Be=e.compute({name:"Softmax",shaderCache:{hint:`${$}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:g,dataType:p.dataType}],dispatchGroup:{x:k},programUniforms:[{type:6,data:S}]}),getShaderSource:he},{inputs:[p],outputs:[c?-1:0]})[0];c&&e.compute(Tn(Be,y),{inputs:[Be]})},Xp=(e,t)=>{Hp(e.inputs),Kp(e,t)},Qp=e=>hr({axis:e.axis})}),Gc,Yp,Zp,Jp,eh,$m=j(()=>{rr(),Jt(),gr(),Gc=e=>Array.from(e.getBigInt64Array(),Number),Yp=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Gc(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Zp=(e,t)=>{let r=[];for(let n=0;n<e.length;++n)r.push(e[n]*t[n]);return r},Jp=(e,t)=>{let r=e[0].dims,n=t??Gc(e[1]),s=Zp(r,n),o=Oe.size(s),i=e[0].dataType,u=ut("input",i,r.length),c=Yt("output",i,s.length),p=y=>`
      const inputShape = ${u.indices(...r)};
      ${y.registerUniform("output_size","u32").declareVariables(u,c)}
      ${y.mainStart()}
      ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${c.offsetToIndices("global_idx")};
      var input_indices: ${u.type.indices};
      for (var i = 0; i < ${r.length}; i++) {
        let input_dim_i = ${u.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${c.indicesGet("output_indices","i")}  % input_dim_i;

        ${u.indicesSet("input_indices","i","input_dim_value")}
      }
      ${c.setByOffset("global_idx",u.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},...Bt(e[0].dims,s)]}),getShaderSource:p}},eh=e=>{Yp(e.inputs),e.compute(Jp(e.inputs),{inputs:[0]})}}),th,rh,nh,km=j(()=>{rr(),Jt(),gr(),th=(e,t,r,n,s)=>{let o=Yt("output_data",s,r.length,4),i=ut("a_data",t[1].dataType,t[1].dims.length,4),u=ut("b_data",t[2].dataType,t[2].dims.length,4),c=ut("c_data",t[0].dataType,t[0].dims.length,4),p,y=(g,l,k)=>`select(${l}, ${g}, ${k})`;if(!n)p=o.setByOffset("global_idx",y(i.getByOffset("global_idx"),u.getByOffset("global_idx"),c.getByOffset("global_idx")));else{let g=(l,k,$="")=>{let S=`a_data[index_a${k}][component_a${k}]`,W=`b_data[index_b${k}][component_b${k}]`,X=`bool(c_data[index_c${k}] & (0xffu << (component_c${k} * 8)))`;return`
            let output_indices${k} = ${o.offsetToIndices(`global_idx * 4u + ${k}u`)};
            let offset_a${k} = ${i.broadcastedIndicesToOffset(`output_indices${k}`,o)};
            let offset_b${k} = ${u.broadcastedIndicesToOffset(`output_indices${k}`,o)};
            let offset_c${k} = ${c.broadcastedIndicesToOffset(`output_indices${k}`,o)};
            let index_a${k} = offset_a${k} / 4u;
            let index_b${k} = offset_b${k} / 4u;
            let index_c${k} = offset_c${k} / 4u;
            let component_a${k} = offset_a${k} % 4u;
            let component_b${k} = offset_b${k} % 4u;
            let component_c${k} = offset_c${k} % 4u;
            ${l}[${k}] = ${$}(${y(S,W,X)});
          `};s===9?p=`
            var data = vec4<u32>(0);
            ${g("data",0,"u32")}
            ${g("data",1,"u32")}
            ${g("data",2,"u32")}
            ${g("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:p=`
            ${g("output_data[global_idx]",0)}
            ${g("output_data[global_idx]",1)}
            ${g("output_data[global_idx]",2)}
            ${g("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(c,i,u,o)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${p}
      }`},rh=e=>{let t=e[1].dims,r=e[2].dims,n=e[0].dims,s=e[1].dataType,o=!(Oe.areEqual(t,r)&&Oe.areEqual(r,n)),i=t,u=Oe.size(t);if(o){let p=vn.calcShape(vn.calcShape(t,r,!1),n,!1);if(!p)throw new Error("Can't perform where op on the given tensors");i=p,u=Oe.size(i)}let c=Math.ceil(u/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:p=>th(p,e,i,o,s),getRunData:()=>({outputs:[{dims:i,dataType:s}],dispatchGroup:{x:Math.ceil(u/64/4)},programUniforms:[{type:12,data:c},...Bt(n,t,r,i)]})}},nh=e=>{e.compute(rh(e.inputs))}}),ih,Sm=j(()=>{Za(),us(),Ld(),Rd(),Dl(),Nd(),jd(),Wd(),Xd(),Eu(),Uo(),Yd(),Rc(),Jd(),Du(),ec(),Nc(),nc(),oc(),jc(),ac(),du(),lc(),sc(),uc(),T(),xt(),Rr(),Js(),Vc(),xm(),Tm(),Em(),Cm(),Zu(),$m(),Vn(),vo(),km(),ih=new Map([["Abs",[dl]],["Acos",[cl]],["Acosh",[pl]],["Add",[Nl]],["ArgMax",[Ya,ro]],["ArgMin",[to,ro]],["Asin",[hl]],["Asinh",[oo]],["Atan",[fl]],["Atanh",[ml]],["Attention",[nl]],["AveragePool",[Td,_r]],["BatchNormalization",[ol]],["BiasAdd",[ll]],["BiasSplitGelu",[Bl]],["Cast",[gl,_l]],["Ceil",[yl]],["Clip",[wl]],["Concat",[Yl,Co]],["Conv",[Lo,Bo]],["ConvTranspose",[vu,Ms]],["Cos",[lo]],["Cosh",[bl]],["CumSum",[xu,Tu]],["DepthToSpace",[ku,Su]],["DequantizeLinear",[et,We]],["Div",[jl]],["Einsum",[qo,Iu]],["Elu",[uo,Gi]],["Equal",[To]],["Erf",[Ml]],["Exp",[co]],["Expand",[Zd]],["FastGelu",[Yo]],["Floor",[vl]],["FusedConv",[Lo,Bo]],["Gather",[Bu,zu]],["GatherElements",[tc,Lr]],["GatherBlockQuantized",[Jo,Nu]],["Gelu",[xl]],["Gemm",[Wu,Vu]],["GlobalAveragePool",[_n,cn]],["GlobalMaxPool",[_,Cd]],["Greater",[Gl]],["GreaterOrEqual",[ql]],["GroupQueryAttention",[td]],["HardSigmoid",[fo,ho]],["InstanceNormalization",[id]],["LayerNormalization",[od]],["LeakyRelu",[po,Gi]],["Less",[ps]],["LessOrEqual",[Hl]],["Log",[Il]],["MatMul",[uu]],["MatMulNBits",[dd,cd]],["MaxPool",[dc,Ed]],["Mul",[Ul]],["MultiHeadAttention",[ic,ra]],["Neg",[El]],["Not",[Tl]],["Pad",[bd]],["Pow",[Vl]],["QuickGelu",[Ol,Gi]],["Range",[ar]],["Reciprocal",[cs]],["ReduceMin",[Ka]],["ReduceMean",[Xs]],["ReduceMax",[Ha]],["ReduceSum",[Xa]],["ReduceProd",[Ys]],["ReduceL1",[Ga]],["ReduceL2",[qa]],["ReduceLogSum",[Zs]],["ReduceLogSumExp",[Qs]],["ReduceSumSquare",[Qa]],["Relu",[Cl]],["Resize",[Ln,Ai]],["RotaryEmbedding",[$d]],["Sigmoid",[$l]],["Sin",[kl]],["Sinh",[mo]],["Slice",[Gp,qp]],["SkipLayerNormalization",[Np]],["Split",[Qu,Yu]],["Sqrt",[Sl]],["Softmax",[Xp,Qp]],["Sub",[Wl]],["Tan",[Pl]],["Tanh",[go]],["ThresholdedRelu",[bo,Gi]],["Tile",[eh]],["Transpose",[Bd,xa]],["Where",[nh]]])}),sh,Pm=j(()=>{d(),w(),gr(),sh=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,r,n,s){Qe(e.programInfo.name);let o=this.backend.device,i=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let u=[];for(let p of t)u.push({binding:u.length,resource:{buffer:p.buffer}});for(let p of r)u.push({binding:u.length,resource:{buffer:p.buffer}});s&&u.push({binding:u.length,resource:s});let c=o.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:u,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let p={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:c,dispatchGroup:n};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(p)}i.setPipeline(e.computePipeline),i.setBindGroup(0,c),i.dispatchWorkgroups(...n),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Ke(e.programInfo.name)}dispose(){}build(e,t){Qe(e.name);let r=this.backend.device,n=[];r.features.has("shader-f16")&&n.push("enable f16;");let s=ba(t,this.backend.device.limits),o=e.getShaderSource(s),i=`${n.join(`
`)}
${s.additionalImplementations}
${o}`,u=r.createShaderModule({code:i,label:e.name});me("verbose",()=>`[WebGPU] ${e.name} shader code: ${i}`);let c=r.createComputePipeline({compute:{module:u,entryPoint:"main"},layout:"auto",label:e.name});return Ke(e.name),{programInfo:e,computePipeline:c,uniformVariablesInfo:s.variablesInfo}}normalizeDispatchGroupSize(e){let t=typeof e=="number"?e:e.x,r=typeof e=="number"?1:e.y||1,n=typeof e=="number"?1:e.z||1,s=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=s&&r<=s&&n<=s)return[t,r,n];let o=t*r*n,i=Math.ceil(Math.sqrt(o));if(i>s){if(i=Math.ceil(Math.cbrt(o)),i>s)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[i,i,i]}else return[i,i,1]}}}),oh,ah,lh,uh,Am=j(()=>{d(),rr(),w(),te(),Hr(),Sm(),Pm(),oh=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let n=0;n<e.length;++n){let s=e[n].dataType;switch(t[n]){case"none":{r.push("");break}case"type":{r.push(`${s}`);break}case"rank":{let o=e[n].dims.length;r.push(`${s};${o}`);break}case"dims":{let o=e[n].dims.join(",");r.push(`${s};${o}`);break}default:throw new Error(`unsupported input dependency: ${t[n]}`)}}return r.join("|")},ah=(e,t,r)=>{var s,o;let n=e.name;return(s=e.shaderCache)!=null&&s.hint&&(n+="["+e.shaderCache.hint+"]"),n+=":"+r+`:${oh(t,((o=e.shaderCache)==null?void 0:o.inputDependencies)??new Array(t.length).fill("dims"))}`,n},lh=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},uh=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;let r=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:r};t.features.has("chromium-experimental-timestamp-query-inside-passes")?r.push("chromium-experimental-timestamp-query-inside-passes"):t.features.has("timestamp-query")&&r.push("timestamp-query"),t.features.has("shader-f16")&&r.push("shader-f16"),this.device=await t.requestDevice(n),this.adapterInfo=new lh(t.info||await t.requestAdapterInfo()),this.gpuDataManager=mr(this),this.programManager=new sh(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,di(e.logLevel,!!e.debug),this.device.onuncapturederror=s=>{s.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${s.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Qe(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{var n;let t=new BigUint64Array(e.getMappedRange()),r=this.pendingQueries.get(e);for(let s=0;s<t.length/2;s++){let o=r[s],i=o.kernelId,u=this.kernels.get(i),c=u.kernelType,p=u.kernelName,y=o.programName,g=o.inputTensorViews,l=o.outputTensorViews,k=t[s*2],$=t[s*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=k);let S=Number(k-this.queryTimeBase),W=Number($-this.queryTimeBase);if(!Number.isSafeInteger(S)||!Number.isSafeInteger(W))throw new RangeError("incorrect timestamp range");if((n=this.env.webgpu.profiling)!=null&&n.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:g.map(X=>({dims:X.dims,dataType:An(X.dataType)})),outputsMetadata:l.map(X=>({dims:X.dims,dataType:An(X.dataType)})),kernelId:i,kernelType:c,kernelName:p,programName:y,startTime:S,endTime:W});else{let X="";g.forEach((se,le)=>{X+=`input[${le}]: [${se.dims}] | ${An(se.dataType)}, `});let D="";l.forEach((se,le)=>{D+=`output[${le}]: [${se.dims}] | ${An(se.dataType)}, `}),console.log(`[profiling] kernel "${i}|${c}|${p}|${y}" ${X}${D}execution time: ${W-S} ns`)}Je("GPU",`${y}::${k}::${$}`)}e.unmap(),this.pendingQueries.delete(e)}),Ke()}run(e,t,r,n,s,o){Qe(e.name);let i=[];for(let D=0;D<t.length;++D){let se=t[D].data;if(se===0)continue;let le=this.gpuDataManager.get(se);if(!le)throw new Error(`no GPU data for input: ${se}`);i.push(le)}let{outputs:u,dispatchGroup:c,programUniforms:p}=e.getRunData(t),y=r.length===0?u.map((D,se)=>se):r;if(y.length!==u.length)throw new Error(`Output size ${y.length} must be equal to ${u.length}.`);let g=[],l=[];for(let D=0;D<u.length;++D){if(!Number.isInteger(y[D])||y[D]<-3||y[D]>=o)throw new Error(`Invalid output index: ${y[D]}`);if(y[D]===-3)continue;let se=y[D]===-1,le=y[D]===-2,he=se||le?s(u[D].dataType,u[D].dims):n(y[D],u[D].dataType,u[D].dims);if(g.push(he),he.data===0)continue;let Be=this.gpuDataManager.get(he.data);if(!Be)throw new Error(`no GPU data for output: ${he.data}`);if(se&&this.temporaryData.push(Be),le){let Re=this.kernelPersistentData.get(this.currentKernelId);Re||(Re=[],this.kernelPersistentData.set(this.currentKernelId,Re)),Re.push(Be)}l.push(Be)}if(i.length!==t.length||l.length!==g.length){if(l.length===0)return Ke(e.name),g;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let k;if(p){let D=0,se=[];p.forEach(Re=>{let dt=typeof Re.data=="number"?[Re.data]:Re.data;if(dt.length===0)return;let Rt=Re.type===10?2:4,Wt,pr;Re.type===10?(pr=dt.length>4?16:dt.length>2?8:dt.length*Rt,Wt=dt.length>4?16:Rt*dt.length):(pr=dt.length<=2?dt.length*Rt:16,Wt=16),D=Math.ceil(D/pr)*pr,se.push(D);let ur=Re.type===10?8:4;D+=dt.length>4?Math.ceil(dt.length/ur)*Wt:dt.length*Rt});let le=16;D=Math.ceil(D/le)*le;let he=new ArrayBuffer(D);p.forEach((Re,dt)=>{let Rt=se[dt],Wt=typeof Re.data=="number"?[Re.data]:Re.data;if(Re.type===6)new Int32Array(he,Rt,Wt.length).set(Wt);else if(Re.type===12)new Uint32Array(he,Rt,Wt.length).set(Wt);else if(Re.type===10)new Uint16Array(he,Rt,Wt.length).set(Wt);else if(Re.type===1)new Float32Array(he,Rt,Wt.length).set(Wt);else throw new Error(`Unsupported uniform type: ${An(Re.type)}`)});let Be=this.gpuDataManager.create(D,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(Be.buffer,0,he,0,D),this.gpuDataManager.release(Be.id),k={offset:0,size:D,buffer:Be.buffer}}let $=this.programManager.normalizeDispatchGroupSize(c),S=$[1]===1&&$[2]===1,W=ah(e,t,S),X=this.programManager.getArtifact(W);if(X||(X=this.programManager.build(e,$),this.programManager.setArtifact(W,X),me("info",()=>`[artifact] key: ${W}, programName: ${e.name}`)),p&&X.uniformVariablesInfo){if(p.length!==X.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${X.uniformVariablesInfo.length}, got ${p.length} in program "${X.programInfo.name}".`);for(let D=0;D<p.length;D++){let se=p[D],le=se.type,he=typeof se.data=="number"?1:se.data.length,[Be,Re]=X.uniformVariablesInfo[D];if(le!==Be||he!==Re)throw new Error(`Uniform variable ${D} mismatch: expect type ${Be} with size ${Re}, got type ${le} with size ${he} in program "${X.programInfo.name}".`)}}if(me("info",()=>`[ProgramManager] run "${e.name}" (key=${W}) with ${$[0]}x${$[1]}x${$[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let D={kernelId:this.currentKernelId,programName:X.programInfo.name,inputTensorViews:t,outputTensorViews:g};this.pendingKernels.push(D),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(D)}return this.programManager.run(X,i,l,$,k),Ke(e.name),g}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,r,n){let s=ih.get(e);if(!s)throw new Error(`kernel not implemented: ${e}`);let o={kernelType:e,kernelName:n,kernelEntry:s[0],attributes:[s[1],r]};this.kernels.set(t,o)}releaseKernel(e){let t=this.kernelPersistentData.get(e);if(t){for(let r of t)this.gpuDataManager.release(r.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,r){let n=this.kernels.get(e);if(!n)throw new Error(`kernel not created: ${e}`);let s=n.kernelType,o=n.kernelName,i=n.kernelEntry,u=n.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${s}] ${o}" is not allowed to be called recursively`);this.currentKernelId=e,u[0]&&(u[1]=u[0](u[1]),u[0]=void 0),me("info",()=>`[WebGPU] Start to run kernel "[${s}] ${o}"...`);let c=this.env.debug;this.temporaryData=[];try{return c&&this.device.pushErrorScope("validation"),i(t,u[1]),0}catch(p){return r.push(Promise.resolve(`[WebGPU] Kernel "[${s}] ${o}" failed. ${p}`)),1}finally{c&&r.push(this.device.popErrorScope().then(p=>p?`GPU validation error for kernel "[${s}] ${o}": ${p.message}`:null));for(let p of this.temporaryData)this.gpuDataManager.release(p.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,r,n){let s=this.sessionExternalDataMapping.get(e);s||(s=new Map,this.sessionExternalDataMapping.set(e,s));let o=s.get(t),i=this.gpuDataManager.registerExternalBuffer(r,n,o);return s.set(t,[i,r]),i}unregisterBuffers(e){let t=this.sessionExternalDataMapping.get(e);t&&(t.forEach(r=>this.gpuDataManager.unregisterExternalBuffer(r[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,r){return async()=>{let n=await or(this,e,t);return L(n.buffer,r)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){var e;this.queryType="none",(((e=this.env.webgpu.profiling)==null?void 0:e.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){me("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){me("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){me("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),r=e.length;this.pendingKernels=[];for(let n=0;n<r;n++){let s=this.getComputePassEncoder(),o=e[n];this.writeTimestamp(this.pendingDispatchNumber*2),s.setPipeline(o.computePipeline),s.setBindGroup(0,o.bindGroup),s.dispatchWorkgroups(...o.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(t[n]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),dh,qc,Hc,Kc,ch,ph,Im=j(()=>{w(),dh=1,qc=()=>dh++,Hc=class{constructor(e){this.sessionId=e.sessionId,this.mlContext=e.context,this.mlTensor=e.tensor,this.dataType=e.dataType,this.tensorShape=e.shape}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}destroy(){me("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e){return e?this.mlContext.readTensor(this.mlTensor,e):this.mlContext.readTensor(this.mlTensor)}sameTypeAndShape(e,t){return this.dataType===e&&this.tensorShape.every((r,n)=>r===t[n])}},Kc=class{constructor(e,t){this.tensorManager=e,this.wrapper=t}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&this.tensorManager.releaseTensor(this.tensorWrapper)}async ensureTensor(e,t,r){if(this.wrapper){if(this.wrapper.sameTypeAndShape(e,t))return this.wrapper.tensor;r&&(this.activeUpload=new Uint8Array(await this.wrapper.read())),this.tensorManager.releaseTensor(this.wrapper)}let n=MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(e,t,n,!0,!0),r&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){if(this.wrapper){this.wrapper.write(e);return}this.activeUpload?this.activeUpload.set(e):this.activeUpload=new Uint8Array(e)}async download(e){if(this.activeUpload)if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(this.activeUpload):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(this.activeUpload);return}else return this.activeUpload.buffer;if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read(e):this.wrapper.read()}},ch=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}reserveTensorId(){let e=qc();return this.tensorTrackersById.set(e,new Kc(this)),e}releaseTensorId(e){let t=this.tensorTrackersById.get(e);t&&(this.tensorTrackersById.delete(e),t.tensorWrapper&&this.releaseTensor(t.tensorWrapper))}async ensureTensor(e,t,r,n){me("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${e}, dataType: ${t}, shape: ${r}, copyOld: ${n}}`);let s=this.tensorTrackersById.get(e);if(!s)throw new Error("Tensor not found.");return s.ensureTensor(t,r,n)}upload(e,t){let r=this.tensorTrackersById.get(e);if(!r)throw new Error("Tensor not found.");r.upload(t)}async download(e,t){me("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${t==null?void 0:t.byteLength}}`);let r=this.tensorTrackersById.get(e);if(!r)throw new Error("Tensor not found.");return r.download(t)}releaseTensorsForSession(e){for(let t of this.freeTensors)t.sessionId===e&&t.destroy();this.freeTensors=this.freeTensors.filter(t=>t.sessionId!==e)}registerTensor(e,t,r,n){let s=qc(),o=new Hc({sessionId:this.backend.currentSessionId,context:e,tensor:t,dataType:r,shape:n});return this.tensorTrackersById.set(s,new Kc(this,o)),this.externalTensors.add(o),s}async getCachedTensor(e,t,r,n,s){let o=this.backend.currentSessionId;for(let[c,p]of this.freeTensors.entries())if(p.sameTypeAndShape(e,t)){let y=this.freeTensors.splice(c,1)[0];return y.sessionId=o,y}let i=this.backend.currentContext;me("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${e}, shape: ${t}}`);let u=await i.createTensor({dataType:e,shape:t,dimensions:t,usage:r,writable:n,readable:s});return new Hc({sessionId:o,context:i,tensor:u,dataType:e,shape:t})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},ph=(...e)=>new ch(...e)}),Xc,hh,Fm=j(()=>{rr(),Ir(),te(),Im(),w(),Xc=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),hh=class{constructor(e){this.tensorManager=ph(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,di(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){this.activeSessionId=e}get currentContext(){let e=this.getMLContext(this.currentSessionId);if(!e)throw new Error(`No MLContext found for session ${this.currentSessionId}`);return e}registerMLContext(e,t){this.mlContextBySessionId.set(e,t);let r=this.sessionIdsByMLContext.get(t);r||(r=new Set,this.sessionIdsByMLContext.set(t,r)),r.add(e)}onReleaseSession(e){let t=this.mlContextBySessionId.get(e);if(!t)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let r=this.sessionIdsByMLContext.get(t);r.delete(e),r.size===0&&this.sessionIdsByMLContext.delete(t)}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){me("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,t,r,n){let s=Xc.get(t);if(!s)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e,s,r,n)}uploadTensor(e,t){if(!br().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");me("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${t.byteLength}}`),this.tensorManager.upload(e,t)}async downloadTensor(e,t){return this.tensorManager.download(e,t)}createMLTensorDownloader(e,t){return async()=>{let r=await this.tensorManager.download(e);return L(r,t)}}registerMLTensor(e,t,r){let n=Xc.get(t);if(!n)throw new Error(`Unsupported ONNX data type: ${t}`);let s=this.tensorManager.registerTensor(this.currentContext,e,n,r);return me("verbose",()=>`[WebNN] registerMLTensor {tensor: ${e}, dataType: ${n}, dimensions: ${r}} -> {tensorId: ${s}}`),s}registerMLConstant(e,t,r,n,s,o){if(!o)throw new Error("External mounted files are not available.");let i=e;e.startsWith("./")&&(i=e.substring(2));let u=o.get(i);if(!u)throw new Error(`File with name ${i} not found in preloaded files.`);if(t+r>u.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let c=u.slice(t,t+r).buffer,p;switch(s.dataType){case"float32":p=new Float32Array(c);break;case"float16":p=new Uint16Array(c);break;case"int32":p=new Int32Array(c);break;case"uint32":p=new Uint32Array(c);break;case"int64":p=new BigInt64Array(c);break;case"uint64":p=new BigUint64Array(c);break;case"int8":p=new Int8Array(c);break;case"uint8":p=new Uint8Array(c);break;default:throw new Error(`Unsupported data type: ${s.dataType} in creating WebNN Constant from external data.`)}return me("verbose",()=>`[WebNN] registerMLConstant {dataType: ${s.dataType}, shape: ${s.shape}}}`),n.constant(s,p)}flush(){}}}),fh={};I(fh,{init:()=>_h});var hc,mh,_h,Om=j(()=>{rr(),Am(),w(),Jt(),Fm(),hc=class em{constructor(t,r,n,s){this.module=t,this.dataType=r,this.data=n,this.dims=s}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=Oe.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=Oe.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=Oe.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let t=Oe.size(this.dims);return t===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(Oe.size(t)!==Oe.size(this.dims))throw new Error("Invalid new shape");return new em(this.module,this.dataType,this.data,t)}},mh=class{constructor(e,t,r){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=t.adapterInfo;let n=e.HEAPU32,s=r>>>2;this.opKernelContext=n[s++];let o=n[s++];this.outputCount=n[s++],this.customDataOffset=n[s++],this.customDataSize=n[s++];let i=[];for(let u=0;u<o;u++){let c=n[s++],p=n[s++],y=n[s++],g=[];for(let l=0;l<y;l++)g.push(n[s++]);i.push(new hc(e,c,p,g))}this.inputs=i}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(e,t){var i;let r=((i=t==null?void 0:t.inputs)==null?void 0:i.map(u=>typeof u=="number"?this.inputs[u]:u))??this.inputs,n=(t==null?void 0:t.outputs)??[],s=(u,c,p)=>new hc(this.module,c,this.output(u,p),p),o=(u,c)=>{let p=Nn(u,c);if(!p)throw new Error(`Unsupported data type: ${u}`);let y=p>0?this.backend.gpuDataManager.create(p).id:0;return new hc(this.module,u,y,c)};return this.backend.run(e,r,n,s,o,this.outputCount)}output(e,t){let r=this.module.stackSave();try{let n=this.module.stackAlloc((1+t.length)*4),s=n>>2;this.module.HEAPU32[s++]=t.length;for(let o=0;o<t.length;o++)this.module.HEAPU32[s++]=t[o];return this.module._JsepOutput(this.opKernelContext,e,n)}catch(n){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(r)}}},_h=async(e,t,r,n)=>{let s=t.jsepInit;if(!s)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let o=new uh;await o.initialize(r,n),s("webgpu",[o,i=>o.alloc(i),i=>o.free(i),(i,u,c,p=!1)=>{if(p)me("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${i}, dst=${u}, size=${c}`),o.memcpy(i,u);else{me("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${i}, gpuDataId=${u}, size=${c}`);let y=t.HEAPU8.subarray(i>>>0,(i>>>0)+c);o.upload(u,y)}},async(i,u,c)=>{me("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${i}, dataOffset=${u}, size=${c}`),await o.download(i,()=>t.HEAPU8.subarray(u>>>0,(u>>>0)+c))},(i,u,c)=>o.createKernel(i,u,c,t.UTF8ToString(t._JsepGetNodeName(u))),i=>o.releaseKernel(i),(i,u,c,p)=>{me("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${c}, kernel=${i}, contextDataOffset=${u}`);let y=new mh(t,o,u);return o.computeKernel(i,y,p)},()=>o.captureBegin(),()=>o.captureEnd(),()=>o.replay()])}else{let o=new hh(r);s("webnn",[o,()=>o.reserveTensorId(),i=>o.releaseTensorId(i),async(i,u,c,p)=>o.ensureTensor(i,u,c,p),(i,u)=>{o.uploadTensor(i,u)},async(i,u)=>o.downloadTensor(i,u)])}}}),gh,Qc,Yc,Qi,wh,fc,Zc,Jc,ep,tp,rp,np,yh=j(()=>{Kn(),li(),rr(),Ir(),vi(),Ni(),gh=(e,t)=>{br()._OrtInit(e,t)!==0&&qr("Can't initialize onnxruntime.")},Qc=async e=>{gh(e.wasm.numThreads,Dn(e.logLevel))},Yc=async(e,t)=>{{let r=(Om(),R(fh)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=e.webgpu.adapter;if(n){if(typeof n.limits!="object"||typeof n.features!="object"||typeof n.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let s=e.webgpu.powerPreference;if(s!==void 0&&s!=="low-power"&&s!=="high-performance")throw new Error(`Invalid powerPreference setting: "${s}"`);let o=e.webgpu.forceFallbackAdapter;if(o!==void 0&&typeof o!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${o}"`);if(n=await navigator.gpu.requestAdapter({powerPreference:s,forceFallbackAdapter:o}),!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await r("webgpu",br(),e,n)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",br(),e)}}},Qi=new Map,wh=e=>{let t=br(),r=t.stackSave();try{let n=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,n,n+4)!==0&&qr("Can't get session input/output count."),[t.HEAP32[n/4],t.HEAP32[n/4+1]]}finally{t.stackRestore(r)}},fc=e=>{let t=br(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},Zc=async(e,t)=>{var g,l,k;let r,n,s=br();Array.isArray(e)?[r,n]=e:e.buffer===s.HEAPU8.buffer?[r,n]=[e.byteOffset,e.byteLength]:[r,n]=fc(e);let o=0,i=0,u=0,c=[],p=[],y=[];try{if([i,c]=Ri(t),(t==null?void 0:t.externalData)&&s.mountExternalData){let he=[];for(let Be of t.externalData){let Re=typeof Be=="string"?Be:Be.path;he.push(ui(typeof Be=="string"?Be:Be.data).then(dt=>{s.mountExternalData(Re,dt)}))}await Promise.all(he)}for(let he of(t==null?void 0:t.executionProviders)??[])if((typeof he=="string"?he:he.name)==="webnn"){if(s.shouldTransferToMLTensor=!1,s.currentContext)throw new Error("WebNN execution provider is already set.");if(typeof he!="string"){let Be=he,Re=Be==null?void 0:Be.context,dt=Be==null?void 0:Be.gpuDevice,Rt=Be==null?void 0:Be.deviceType,Wt=Be==null?void 0:Be.powerPreference;Re?s.currentContext=Re:dt?s.currentContext=await navigator.ml.createContext(dt):s.currentContext=await navigator.ml.createContext({deviceType:Rt,powerPreference:Wt})}else s.currentContext=await navigator.ml.createContext();break}o=await s._OrtCreateSession(r,n,i),o===0&&qr("Can't create a session."),(g=s.jsepOnCreateSession)==null||g.call(s),s.currentContext&&(s.jsepRegisterMLContext(o,s.currentContext),s.currentContext=void 0,s.shouldTransferToMLTensor=!0);let[$,S]=wh(o),W=!!(t!=null&&t.enableGraphCapture),X=[],D=[],se=[];for(let he=0;he<$;he++){let Be=s._OrtGetInputName(o,he);Be===0&&qr("Can't get an input name."),p.push(Be),X.push(s.UTF8ToString(Be))}for(let he=0;he<S;he++){let Be=s._OrtGetOutputName(o,he);Be===0&&qr("Can't get an output name."),y.push(Be);let Re=s.UTF8ToString(Be);D.push(Re);{if(W&&(t==null?void 0:t.preferredOutputLocation)===void 0){se.push("gpu-buffer");continue}let dt=typeof(t==null?void 0:t.preferredOutputLocation)=="string"?t.preferredOutputLocation:((l=t==null?void 0:t.preferredOutputLocation)==null?void 0:l[Re])??"cpu";if(dt!=="cpu"&&dt!=="cpu-pinned"&&dt!=="gpu-buffer"&&dt!=="ml-tensor")throw new Error(`Not supported preferred output location: ${dt}.`);if(W&&dt!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${dt}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);se.push(dt)}}let le=null;return se.some(he=>he==="gpu-buffer"||he==="ml-tensor")&&(u=s._OrtCreateBinding(o),u===0&&qr("Can't create IO binding."),le={handle:u,outputPreferredLocations:se,outputPreferredLocationsEncoded:se.map(he=>Ci(he))}),Qi.set(o,[o,p,y,le,W,!1]),[o,X,D]}catch($){throw p.forEach(S=>s._OrtFree(S)),y.forEach(S=>s._OrtFree(S)),u!==0&&s._OrtReleaseBinding(u),o!==0&&s._OrtReleaseSession(o),$}finally{s._free(r),i!==0&&s._OrtReleaseSessionOptions(i),c.forEach($=>s._free($)),(k=s.unmountExternalData)==null||k.call(s)}},Jc=e=>{var c;let t=br(),r=Qi.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[n,s,o,i,u]=r;i&&(u&&t._OrtClearBoundOutputs(i.handle),t._OrtReleaseBinding(i.handle)),(c=t.jsepOnReleaseSession)==null||c.call(t,e),s.forEach(p=>t._OrtFree(p)),o.forEach(p=>t._OrtFree(p)),t._OrtReleaseSession(n),Qi.delete(e)},ep=(e,t,r,n,s,o=!1)=>{if(!e){t.push(0);return}let i=br(),u=e[0],c=e[1],p=e[3],y,g;if(u==="string"&&(p==="gpu-buffer"||p==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(o&&p!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${s} when enableGraphCapture is true.`);if(p==="gpu-buffer"){let $=e[2].gpuBuffer;g=Nn(Xn(u),c);let S=i.jsepRegisterBuffer;if(!S)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');y=S(n,s,$,g)}else if(p==="ml-tensor"){let $=e[2].mlTensor;g=Nn(Xn(u),c);let S=i.jsepRegisterMLTensor;if(!S)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');y=S($,Xn(u),c)}else{let $=e[2];if(Array.isArray($)){g=4*$.length,y=i._malloc(g),r.push(y);let S=y/4;for(let W=0;W<$.length;W++){if(typeof $[W]!="string")throw new TypeError(`tensor data at index ${W} is not a string`);i.HEAPU32[S++]=vr($[W],r)}}else g=$.byteLength,y=i._malloc(g),r.push(y),i.HEAPU8.set(new Uint8Array($.buffer,$.byteOffset,g),y)}let l=i.stackSave(),k=i.stackAlloc(4*c.length);try{let $=k/4;c.forEach(W=>i.HEAP32[$++]=W);let S=i._OrtCreateTensor(Xn(u),y,g,k,c.length,Ci(p));S===0&&qr(`Can't create tensor for input/output. session=${n}, index=${s}.`),t.push(S)}finally{i.stackRestore(l)}},tp=async(e,t,r,n,s,o)=>{var Wt,pr;let i=br(),u=Qi.get(e);if(!u)throw new Error(`cannot run inference. invalid session id: ${e}`);let c=u[0],p=u[1],y=u[2],g=u[3],l=u[4],k=u[5],$=t.length,S=n.length,W=0,X=[],D=[],se=[],le=[],he=i.stackSave(),Be=i.stackAlloc($*4),Re=i.stackAlloc($*4),dt=i.stackAlloc(S*4),Rt=i.stackAlloc(S*4);try{(Wt=i.jsepOnRunStart)==null||Wt.call(i,c),[W,X]=Oi(o);for(let Qt=0;Qt<$;Qt++)ep(r[Qt],D,le,e,t[Qt],l);for(let Qt=0;Qt<S;Qt++)ep(s[Qt],se,le,e,$+n[Qt],l);let ur=Be/4,Zt=Re/4,Ar=dt/4,Wr=Rt/4;for(let Qt=0;Qt<$;Qt++)i.HEAPU32[ur++]=D[Qt],i.HEAPU32[Zt++]=p[t[Qt]];for(let Qt=0;Qt<S;Qt++)i.HEAPU32[Ar++]=se[Qt],i.HEAPU32[Wr++]=y[n[Qt]];if(g&&!k){let{handle:Qt,outputPreferredLocations:tr,outputPreferredLocationsEncoded:kr}=g;if(p.length!==$)throw new Error(`input count from feeds (${$}) is expected to be always equal to model's input count (${p.length}).`);for(let nt=0;nt<$;nt++){let At=t[nt];await i._OrtBindInput(Qt,p[At],D[nt])!==0&&qr(`Can't bind input[${nt}] for session=${e}.`)}for(let nt=0;nt<S;nt++){let At=n[nt];(pr=s[nt])!=null&&pr[3]?i._OrtBindOutput(Qt,y[At],se[nt],0)!==0&&qr(`Can't bind pre-allocated output[${nt}] for session=${e}.`):i._OrtBindOutput(Qt,y[At],0,kr[At])!==0&&qr(`Can't bind output[${nt}] to ${tr[nt]} for session=${e}.`)}Qi.set(e,[c,p,y,g,l,!0])}let wr;g?wr=await i._OrtRunWithBinding(c,g.handle,S,dt,W):wr=await i._OrtRun(c,Re,Be,$,Rt,S,dt,W),wr!==0&&qr("failed to call OrtRun().");let Br=[];for(let Qt=0;Qt<S;Qt++){let tr=i.HEAPU32[dt/4+Qt];if(tr===se[Qt]){Br.push(s[Qt]);continue}let kr=i.stackSave(),nt=i.stackAlloc(4*4),At=!1,lr,Ur=0;try{i._OrtGetTensorData(tr,nt,nt+4,nt+8,nt+12)!==0&&qr(`Can't access output tensor data on index ${Qt}.`);let an=nt/4,ln=i.HEAPU32[an++];Ur=i.HEAPU32[an++];let Zi=i.HEAPU32[an++],gc=i.HEAPU32[an++],Sn=[];for(let hn=0;hn<gc;hn++)Sn.push(i.HEAPU32[Zi/4+hn]);i._OrtFree(Zi);let gn=Sn.reduce((hn,xn)=>hn*xn,1);lr=An(ln);let $s=g==null?void 0:g.outputPreferredLocations[n[Qt]];if(lr==="string"){if($s==="gpu-buffer"||$s==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let hn=[],xn=Ur/4;for(let Wn=0;Wn<gn;Wn++){let Ji=i.HEAPU32[xn++],wc=Wn===gn-1?void 0:i.HEAPU32[xn]-Ji;hn.push(i.UTF8ToString(Ji,wc))}Br.push([lr,Sn,hn,"cpu"])}else if($s==="gpu-buffer"&&gn>0){let hn=i.jsepGetBuffer;if(!hn)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let xn=hn(Ur),Wn=Nn(ln,gn);if(Wn===void 0||!Ti(lr))throw new Error(`Unsupported data type: ${lr}`);At=!0,Br.push([lr,Sn,{gpuBuffer:xn,download:i.jsepCreateDownloader(xn,Wn,lr),dispose:()=>{i._OrtReleaseTensor(tr)}},"gpu-buffer"])}else if($s==="ml-tensor"&&gn>0){let hn=i.jsepEnsureTensor;if(!hn)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(Nn(ln,gn)===void 0||!Ei(lr))throw new Error(`Unsupported data type: ${lr}`);let xn=await hn(Ur,ln,Sn,!1);At=!0,Br.push([lr,Sn,{mlTensor:xn,download:i.jsepCreateMLTensorDownloader(Ur,lr),dispose:()=>{i.jsepReleaseTensorId(Ur),i._OrtReleaseTensor(tr)}},"ml-tensor"])}else{let hn=xi(lr),xn=new hn(gn);new Uint8Array(xn.buffer,xn.byteOffset,xn.byteLength).set(i.HEAPU8.subarray(Ur,Ur+xn.byteLength)),Br.push([lr,Sn,xn,"cpu"])}}finally{i.stackRestore(kr),lr==="string"&&Ur&&i._free(Ur),At||i._OrtReleaseTensor(tr)}}return g&&!l&&(i._OrtClearBoundOutputs(g.handle),Qi.set(e,[c,p,y,g,l,!1])),Br}finally{i.stackRestore(he),D.forEach(ur=>i._OrtReleaseTensor(ur)),se.forEach(ur=>i._OrtReleaseTensor(ur)),le.forEach(ur=>i._free(ur)),W!==0&&i._OrtReleaseRunOptions(W),X.forEach(ur=>i._free(ur))}},rp=e=>{let t=br(),r=Qi.get(e);if(!r)throw new Error("invalid session id");let n=r[0],s=t._OrtEndProfiling(n);s===0&&qr("Can't get an profile file name."),t._OrtFree(s)},np=e=>{let t=[];for(let r of e){let n=r[2];!Array.isArray(n)&&"buffer"in n&&t.push(n.buffer)}return t}}),Yi,Bn,fa,Sd,Pd,mc,ip,_c,Es,Cs,bh,Mh,vh,xh,Th,Eh,Ch,$h,kh=j(()=>{d(),yh(),Ir(),Nt(),Yi=()=>!!P.wasm.proxy&&typeof document<"u",fa=!1,Sd=!1,Pd=!1,_c=new Map,Es=(e,t)=>{let r=_c.get(e);r?r.push(t):_c.set(e,[t])},Cs=()=>{if(fa||!Sd||Pd||!Bn)throw new Error("worker not ready")},bh=e=>{switch(e.data.type){case"init-wasm":fa=!1,e.data.err?(Pd=!0,ip[1](e.data.err)):(Sd=!0,ip[0]()),mc&&(URL.revokeObjectURL(mc),mc=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=_c.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},Mh=async()=>{if(!Sd){if(fa)throw new Error("multiple calls to 'initWasm()' detected.");if(Pd)throw new Error("previous call to 'initWasm()' failed.");if(fa=!0,Yi())return new Promise((e,t)=>{Bn==null||Bn.terminate(),Tt().then(([r,n])=>{try{Bn=n,Bn.onerror=o=>t(o),Bn.onmessage=bh,ip=[e,t];let s={type:"init-wasm",in:P};Bn.postMessage(s),mc=r}catch(s){t(s)}},t)});try{await Vr(P.wasm),await Qc(P),Sd=!0}catch(e){throw Pd=!0,e}finally{fa=!1}}},vh=async e=>{if(Yi())return Cs(),new Promise((t,r)=>{Es("init-ep",[t,r]);let n={type:"init-ep",in:{epName:e,env:P}};Bn.postMessage(n)});await Yc(P,e)},xh=async e=>Yi()?(Cs(),new Promise((t,r)=>{Es("copy-from",[t,r]);let n={type:"copy-from",in:{buffer:e}};Bn.postMessage(n,[e.buffer])})):fc(e),Th=async(e,t)=>{if(Yi()){if(t!=null&&t.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Cs(),new Promise((r,n)=>{Es("create",[r,n]);let s={type:"create",in:{model:e,options:{...t}}},o=[];e instanceof Uint8Array&&o.push(e.buffer),Bn.postMessage(s,o)})}else return Zc(e,t)},Eh=async e=>{if(Yi())return Cs(),new Promise((t,r)=>{Es("release",[t,r]);let n={type:"release",in:e};Bn.postMessage(n)});Jc(e)},Ch=async(e,t,r,n,s,o)=>{if(Yi()){if(r.some(i=>i[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(s.some(i=>i))throw new Error("pre-allocated output tensor is not supported for proxy.");return Cs(),new Promise((i,u)=>{Es("run",[i,u]);let c=r,p={type:"run",in:{sessionId:e,inputIndices:t,inputs:c,outputIndices:n,options:o}};Bn.postMessage(p,np(c))})}else return tp(e,t,r,n,s,o)},$h=async e=>{if(Yi())return Cs(),new Promise((t,r)=>{Es("end-profiling",[t,r]);let n={type:"end-profiling",in:e};Bn.postMessage(n)});rp(e)}}),sp,Sh,Ph,zm=j(()=>{d(),kh(),rr(),f(),Ni(),sp=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},Sh=e=>{switch(e[3]){case"cpu":return new re(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!Ti(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:r,download:n,dispose:s}=e[2];return re.fromGpuBuffer(r,{dataType:t,dims:e[1],download:n,dispose:s})}case"ml-tensor":{let t=e[0];if(!Ei(t))throw new Error(`not supported data type: ${t} for deserializing MLTensor tensor`);let{mlTensor:r,download:n,dispose:s}=e[2];return re.fromMLTensor(r,{dataType:t,dims:e[1],download:n,dispose:s})}default:throw new Error(`invalid data location: ${e[3]}`)}},Ph=class{async fetchModelAndCopyToWasmMemory(e){return xh(await ui(e))}async loadModel(e,t){Qe();let r;typeof e=="string"?r=await this.fetchModelAndCopyToWasmMemory(e):r=e,[this.sessionId,this.inputNames,this.outputNames]=await Th(r,t),Ke()}async dispose(){return Eh(this.sessionId)}async run(e,t,r){Qe();let n=[],s=[];Object.entries(e).forEach(g=>{let l=g[0],k=g[1],$=this.inputNames.indexOf(l);if($===-1)throw new Error(`invalid input '${l}'`);n.push(k),s.push($)});let o=[],i=[];Object.entries(t).forEach(g=>{let l=g[0],k=g[1],$=this.outputNames.indexOf(l);if($===-1)throw new Error(`invalid output '${l}'`);o.push(k),i.push($)});let u=n.map((g,l)=>sp(g,()=>`input "${this.inputNames[s[l]]}"`)),c=o.map((g,l)=>g?sp(g,()=>`output "${this.outputNames[i[l]]}"`):null),p=await Ch(this.sessionId,s,u,i,c,r),y={};for(let g=0;g<p.length;g++)y[this.outputNames[i[g]]]=o[g]??Sh(p[g]);return Ke(),y}startProfiling(){}endProfiling(){$h(this.sessionId)}}}),Ah={};I(Ah,{OnnxruntimeWebAssemblyBackend:()=>ap,initializeFlags:()=>op,wasmBackend:()=>Ih});var op,ap,Ih,Bm=j(()=>{d(),kh(),zm(),Nt(),op=()=>{if((typeof P.wasm.initTimeout!="number"||P.wasm.initTimeout<0)&&(P.wasm.initTimeout=0),P.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof P.wasm.proxy!="boolean"&&(P.wasm.proxy=!1),typeof P.wasm.trace!="boolean"&&(P.wasm.trace=!1),typeof P.wasm.numThreads!="number"||!Number.isInteger(P.wasm.numThreads)||P.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)P.wasm.numThreads=1;else{let e=typeof navigator>"u"?Ee("node:os").cpus().length:navigator.hardwareConcurrency;P.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},ap=class{async init(e){op(),await Mh(),await vh(e)}async createInferenceSessionHandler(e,t){let r=new Ph;return await r.loadModel(e,t),Promise.resolve(r)}},Ih=new ap});d(),d(),d();var Dm="1.21.0-dev.20241024-d9ca84ef96",Lm=x;{let e=(Bm(),R(Ah)).wasmBackend;xe("webgpu",e,5),xe("webnn",e,5),xe("cpu",e,10),xe("wasm",e,10)}Object.defineProperty(P.versions,"web",{value:Dm,enumerable:!0});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},"./src/backends/onnx.js":(De,ae,z)=>{var F;z.r(ae),z.d(ae,{Tensor:()=>Ee.Tensor,createInferenceSession:()=>N,deviceToExecutionProviders:()=>xe,isONNXProxy:()=>J,isONNXTensor:()=>ie});var ue=z("./src/env.js"),oe=z("?2ce3"),de=z("./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs"),Ee=z("./node_modules/onnxruntime-common/dist/esm/index.js");const j=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),I=[];let M,R;const Q=Symbol.for("onnxruntime");if(Q in globalThis)R=globalThis[Q];else if(ue.apis.IS_NODE_ENV){switch(R=oe??(F||(F=z.t(oe,2))),Hn.platform){case"win32":I.push("dml");break;case"linux":Hn.arch==="x64"&&I.push("cuda");break}I.push("cpu"),M=["cpu"]}else R=de,ue.apis.IS_WEBNN_AVAILABLE&&I.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),ue.apis.IS_WEBGPU_AVAILABLE&&I.push("webgpu"),I.push("wasm"),M=["wasm"];const ne=R.InferenceSession;function xe(Z=null){if(!Z)return M;switch(Z){case"auto":return I;case"gpu":return I.filter(H=>["webgpu","cuda","dml","webnn-gpu"].includes(H))}if(I.includes(Z))return[j[Z]??Z];throw new Error(`Unsupported device: "${Z}". Should be one of: ${I.join(", ")}.`)}let we=null;async function N(Z,H,O){we&&await we;const G=ne.create(Z,H);we??(we=G);const P=await G;return P.config=O,P}function ie(Z){return Z instanceof R.Tensor}const Me=R==null?void 0:R.env;Me!=null&&Me.wasm&&(Me.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${ue.env.version}/dist/`,Me.wasm.proxy=!1,(typeof crossOriginIsolated>"u"||!crossOriginIsolated)&&(Me.wasm.numThreads=1)),Me!=null&&Me.webgpu&&(Me.webgpu.powerPreference="high-performance");function J(){var Z;return(Z=Me==null?void 0:Me.wasm)==null?void 0:Z.proxy}ue.env.backends.onnx=Me},"./src/configs.js":(De,ae,z)=>{z.r(ae),z.d(ae,{AutoConfig:()=>I,PretrainedConfig:()=>j,getKeyValueShapes:()=>Ee});var F=z("./src/utils/core.js"),ue=z("./src/utils/hub.js");async function oe(M,R){return await(0,ue.getModelJSON)(M,"config.json",!0,R)}function de(M){const R={};let Q={};switch(M.model_type){case"llava":case"paligemma":case"florence2":Q=de(M.text_config);break;case"moondream1":Q=de(M.phi_config);break;case"musicgen":Q=de(M.decoder);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":R.num_heads="n_head",R.num_layers="n_layer",R.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"phi":case"phi3":case"falcon":R.num_heads="num_attention_heads",R.num_layers="num_hidden_layers",R.hidden_size="hidden_size";break;case"llama":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":R.num_heads="num_key_value_heads",R.num_layers="num_hidden_layers",R.hidden_size="hidden_size",R.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":R.num_heads="num_key_value_heads",R.num_layers="num_hidden_layers",R.dim_kv="head_dim";break;case"openelm":R.num_heads="num_kv_heads",R.num_layers="num_transformer_layers",R.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":R.num_heads="num_heads",R.num_layers="num_layers",R.hidden_size="hidden_size";break;case"bloom":R.num_heads="n_head",R.num_layers="n_layer",R.hidden_size="hidden_size";break;case"mpt":R.num_heads="n_heads",R.num_layers="n_layers",R.hidden_size="d_model";break;case"t5":case"mt5":case"longt5":R.num_decoder_layers="num_decoder_layers",R.num_decoder_heads="num_heads",R.decoder_dim_kv="d_kv",R.num_encoder_layers="num_layers",R.num_encoder_heads="num_heads",R.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":R.num_decoder_layers="decoder_layers",R.num_decoder_heads="decoder_attention_heads",R.decoder_hidden_size="d_model",R.num_encoder_layers="encoder_layers",R.num_encoder_heads="encoder_attention_heads",R.encoder_hidden_size="d_model";break;case"speecht5":R.num_decoder_layers="decoder_layers",R.num_decoder_heads="decoder_attention_heads",R.decoder_hidden_size="hidden_size",R.num_encoder_layers="encoder_layers",R.num_encoder_heads="encoder_attention_heads",R.encoder_hidden_size="hidden_size";break;case"trocr":R.num_encoder_layers=R.num_decoder_layers="decoder_layers",R.num_encoder_heads=R.num_decoder_heads="decoder_attention_heads",R.encoder_hidden_size=R.decoder_hidden_size="d_model";break;case"musicgen_decoder":R.num_encoder_layers=R.num_decoder_layers="num_hidden_layers",R.num_encoder_heads=R.num_decoder_heads="num_attention_heads",R.encoder_hidden_size=R.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const xe=de(M.decoder),we="num_decoder_layers"in xe,N=(0,F.pick)(M,["model_type","is_encoder_decoder"]);return we?(N.num_decoder_layers=xe.num_decoder_layers,N.num_decoder_heads=xe.num_decoder_heads,N.decoder_hidden_size=xe.decoder_hidden_size,N.num_encoder_layers=xe.num_encoder_layers,N.num_encoder_heads=xe.num_encoder_heads,N.encoder_hidden_size=xe.encoder_hidden_size):(N.num_layers=xe.num_layers,N.num_heads=xe.num_heads,N.hidden_size=xe.hidden_size),N}const ne={...Q,...(0,F.pick)(M,["model_type","multi_query","is_encoder_decoder"])};for(const xe in R)ne[xe]=M[R[xe]];return ne}function Ee(M,{prefix:R="past_key_values"}={}){const Q={},ne=M.normalized_config,xe=1;if(ne.is_encoder_decoder&&"num_encoder_heads"in ne&&"num_decoder_heads"in ne){const we=ne.encoder_dim_kv??ne.encoder_hidden_size/ne.num_encoder_heads,N=ne.decoder_dim_kv??ne.decoder_hidden_size/ne.num_decoder_heads,ie=[xe,ne.num_encoder_heads,0,we],Me=[xe,ne.num_decoder_heads,0,N];for(let J=0;J<ne.num_decoder_layers;++J)Q[`${R}.${J}.encoder.key`]=ie,Q[`${R}.${J}.encoder.value`]=ie,Q[`${R}.${J}.decoder.key`]=Me,Q[`${R}.${J}.decoder.value`]=Me}else{const we=ne.num_heads,N=ne.num_layers,ie=ne.dim_kv??ne.hidden_size/(ne.num_attention_heads??we);if(ne.model_type==="falcon"){const Me=[xe*we,0,ie];for(let J=0;J<N;++J)Q[`${R}.${J}.key`]=Me,Q[`${R}.${J}.value`]=Me}else if(ne.multi_query){const Me=[xe*we,0,2*ie];for(let J=0;J<N;++J)Q[`${R}.${J}.key_value`]=Me}else if(ne.model_type==="bloom"){const Me=[xe*we,ie,0],J=[xe*we,0,ie];for(let Z=0;Z<N;++Z)Q[`${R}.${Z}.key`]=Me,Q[`${R}.${Z}.value`]=J}else if(ne.model_type==="openelm")for(let Me=0;Me<N;++Me){const J=[xe,we[Me],0,ie];Q[`${R}.${Me}.key`]=J,Q[`${R}.${Me}.value`]=J}else{const Me=[xe,we,0,ie];for(let J=0;J<N;++J)Q[`${R}.${J}.key`]=Me,Q[`${R}.${J}.value`]=Me}}return Q}class j{constructor(R){Se(this,"model_type",null);Se(this,"is_encoder_decoder",!1);Se(this,"max_position_embeddings");Se(this,"transformers.js_config");Object.assign(this,R),this.normalized_config=de(this)}static async from_pretrained(R,{progress_callback:Q=null,config:ne=null,cache_dir:xe=null,local_files_only:we=!1,revision:N="main"}={}){ne&&!(ne instanceof j)&&(ne=new j(ne));const ie=ne??await oe(R,{progress_callback:Q,config:ne,cache_dir:xe,local_files_only:we,revision:N});return new this(ie)}}class I{static async from_pretrained(...R){return j.from_pretrained(...R)}}},"./src/env.js":(De,ae,z)=>{var P;z.r(ae),z.d(ae,{apis:()=>N,env:()=>O});var F=z("?569f"),ue=z("?3f59"),oe=z("?154a");const de="3.0.1",Ee=typeof self<"u",j=Ee&&self.constructor.name==="DedicatedWorkerGlobalScope",I=Ee&&"caches"in self,M=typeof navigator<"u"&&"gpu"in navigator,R=typeof navigator<"u"&&"ml"in navigator,Q=typeof Hn<"u",ne=Q&&((P=Hn==null?void 0:Hn.release)==null?void 0:P.name)==="node",xe=!G(F),we=!G(ue),N=Object.freeze({IS_BROWSER_ENV:Ee,IS_WEBWORKER_ENV:j,IS_WEB_CACHE_AVAILABLE:I,IS_WEBGPU_AVAILABLE:M,IS_WEBNN_AVAILABLE:R,IS_PROCESS_AVAILABLE:Q,IS_NODE_ENV:ne,IS_FS_AVAILABLE:xe,IS_PATH_AVAILABLE:we}),ie=xe&&we,Me=ie?ue.dirname(ue.dirname(oe.fileURLToPath(self.location.href))):"./",J=ie?ue.join(Me,"/.cache/"):null,Z="/models/",H=ie?ue.join(Me,Z):Z,O={version:de,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!Ee,localModelPath:H,useFS:xe,useBrowserCache:I,useFSCache:xe,cacheDir:J,useCustomCache:!1,customCache:null};function G(ye){return Object.keys(ye).length===0}},"./src/generation/configuration_utils.js":(De,ae,z)=>{z.r(ae),z.d(ae,{GenerationConfig:()=>ue});var F=z("./src/utils/core.js");class ue{constructor(de){Se(this,"max_length",20);Se(this,"max_new_tokens",null);Se(this,"min_length",0);Se(this,"min_new_tokens",null);Se(this,"early_stopping",!1);Se(this,"max_time",null);Se(this,"do_sample",!1);Se(this,"num_beams",1);Se(this,"num_beam_groups",1);Se(this,"penalty_alpha",null);Se(this,"use_cache",!0);Se(this,"temperature",1);Se(this,"top_k",50);Se(this,"top_p",1);Se(this,"typical_p",1);Se(this,"epsilon_cutoff",0);Se(this,"eta_cutoff",0);Se(this,"diversity_penalty",0);Se(this,"repetition_penalty",1);Se(this,"encoder_repetition_penalty",1);Se(this,"length_penalty",1);Se(this,"no_repeat_ngram_size",0);Se(this,"bad_words_ids",null);Se(this,"force_words_ids",null);Se(this,"renormalize_logits",!1);Se(this,"constraints",null);Se(this,"forced_bos_token_id",null);Se(this,"forced_eos_token_id",null);Se(this,"remove_invalid_values",!1);Se(this,"exponential_decay_length_penalty",null);Se(this,"suppress_tokens",null);Se(this,"begin_suppress_tokens",null);Se(this,"forced_decoder_ids",null);Se(this,"guidance_scale",null);Se(this,"num_return_sequences",1);Se(this,"output_attentions",!1);Se(this,"output_hidden_states",!1);Se(this,"output_scores",!1);Se(this,"return_dict_in_generate",!1);Se(this,"pad_token_id",null);Se(this,"bos_token_id",null);Se(this,"eos_token_id",null);Se(this,"encoder_no_repeat_ngram_size",0);Se(this,"decoder_start_token_id",null);Se(this,"generation_kwargs",{});Object.assign(this,(0,F.pick)(de,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(De,ae,z)=>{z.r(ae),z.d(ae,{ClassifierFreeGuidanceLogitsProcessor:()=>ie,ForcedBOSTokenLogitsProcessor:()=>j,ForcedEOSTokenLogitsProcessor:()=>I,LogitsProcessor:()=>oe,LogitsProcessorList:()=>Ee,LogitsWarper:()=>de,MinLengthLogitsProcessor:()=>xe,MinNewTokensLengthLogitsProcessor:()=>we,NoBadWordsLogitsProcessor:()=>N,NoRepeatNGramLogitsProcessor:()=>Q,RepetitionPenaltyLogitsProcessor:()=>ne,SuppressTokensAtBeginLogitsProcessor:()=>M,TemperatureLogitsWarper:()=>Me,TopKLogitsWarper:()=>Z,TopPLogitsWarper:()=>J,WhisperTimeStampLogitsProcessor:()=>R});var F=z("./src/utils/generic.js");z("./src/utils/tensor.js");var ue=z("./src/utils/maths.js");class oe extends F.Callable{_call(O,G){throw Error("`_call` should be implemented in a subclass")}}class de extends F.Callable{_call(O,G){throw Error("`_call` should be implemented in a subclass")}}class Ee extends F.Callable{constructor(){super(),this.processors=[]}push(O){this.processors.push(O)}extend(O){this.processors.push(...O)}_call(O,G){let P=G;for(const ye of this.processors)P=ye(O,P);return P}[Symbol.iterator](){return this.processors.values()}}class j extends oe{constructor(O){super(),this.bos_token_id=O}_call(O,G){for(let P=0;P<O.length;++P)if(O[P].length===1){const ye=G[P].data;ye.fill(-1/0),ye[this.bos_token_id]=0}return G}}class I extends oe{constructor(O,G){super(),this.max_length=O,this.eos_token_id=Array.isArray(G)?G:[G]}_call(O,G){for(let P=0;P<O.length;++P)if(O[P].length===this.max_length-1){const ye=G[P].data;ye.fill(-1/0);for(const $e of this.eos_token_id)ye[$e]=0}return G}}class M extends oe{constructor(O,G){super(),this.begin_suppress_tokens=O,this.begin_index=G}_call(O,G){for(let P=0;P<O.length;++P)if(O[P].length===this.begin_index){const ye=G[P].data;for(const $e of this.begin_suppress_tokens)ye[$e]=-1/0}return G}}class R extends oe{constructor(O,G){super(),this.eos_token_id=Array.isArray(O.eos_token_id)?O.eos_token_id[0]:O.eos_token_id,this.no_timestamps_token_id=O.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=G.length,G.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=O.max_initial_timestamp_index}_call(O,G){for(let P=0;P<O.length;++P){const ye=G[P].data;if(ye[this.no_timestamps_token_id]=-1/0,O[P].length===this.begin_index-1){ye.fill(-1/0),ye[this.timestamp_begin]=0;continue}const $e=O[P].slice(this.begin_index),Fe=$e.length>=1&&$e[$e.length-1]>=this.timestamp_begin,Ve=$e.length<2||$e[$e.length-2]>=this.timestamp_begin;if(Fe&&(Ve?ye.subarray(this.timestamp_begin).fill(-1/0):ye.subarray(0,this.eos_token_id).fill(-1/0)),O[P].length===this.begin_index&&this.max_initial_timestamp_index!==null){const wt=this.timestamp_begin+this.max_initial_timestamp_index;ye.subarray(wt+1).fill(-1/0)}const Ne=(0,ue.log_softmax)(ye),_t=Math.log(Ne.subarray(this.timestamp_begin).map(Math.exp).reduce((wt,Te)=>wt+Te)),ct=(0,ue.max)(Ne.subarray(0,this.timestamp_begin))[0];_t>ct&&ye.subarray(0,this.timestamp_begin).fill(-1/0)}return G}}class Q extends oe{constructor(O){super(),this.no_repeat_ngram_size=O}getNgrams(O){const G=O.length,P=[];for(let $e=0;$e<G+1-this.no_repeat_ngram_size;++$e){const Fe=[];for(let Ve=0;Ve<this.no_repeat_ngram_size;++Ve)Fe.push(O[$e+Ve]);P.push(Fe.map(Number))}const ye=new Map;for(const $e of P){const Fe=$e.slice(0,$e.length-1),Ve=JSON.stringify(Fe),Ne=ye.get(Ve)??[];Ne.push($e[$e.length-1]),ye.set(Ve,Ne)}return ye}getGeneratedNgrams(O,G){const P=G.slice(G.length+1-this.no_repeat_ngram_size,G.length);return O.get(JSON.stringify(P.map(Number)))??[]}calcBannedNgramTokens(O){const G=[];if(O.length+1<this.no_repeat_ngram_size)return G;{const P=this.getNgrams(O);return this.getGeneratedNgrams(P,O)}}_call(O,G){for(let P=0;P<O.length;++P){const ye=G[P].data,$e=this.calcBannedNgramTokens(O[P]);for(const Fe of $e)ye[Fe]=-1/0}return G}}class ne extends oe{constructor(O){super(),this.penalty=O}_call(O,G){for(let P=0;P<O.length;++P){const ye=G[P].data;for(const $e of O[P]){const Fe=Number($e);ye[Fe]<0?ye[Fe]*=this.penalty:ye[Fe]/=this.penalty}}return G}}class xe extends oe{constructor(O,G){super(),this.min_length=O,this.eos_token_id=Array.isArray(G)?G:[G]}_call(O,G){for(let P=0;P<O.length;++P)if(O[P].length<this.min_length){const ye=G[P].data;for(const $e of this.eos_token_id)ye[$e]=-1/0}return G}}class we extends oe{constructor(O,G,P){super(),this.prompt_length_to_skip=O,this.min_new_tokens=G,this.eos_token_id=Array.isArray(P)?P:[P]}_call(O,G){for(let P=0;P<O.length;++P)if(O[P].length-this.prompt_length_to_skip<this.min_new_tokens){const $e=G[P].data;for(const Fe of this.eos_token_id)$e[Fe]=-1/0}return G}}class N extends oe{constructor(O,G){super(),this.bad_words_ids=O,this.eos_token_id=Array.isArray(G)?G:[G]}_call(O,G){for(let P=0;P<O.length;++P){const ye=G[P].data,$e=O[P];for(const Fe of this.bad_words_ids){let Ve=!0;for(let Ne=1;Ne<=Fe.length-1&&Fe.length<$e.length;++Ne)if(Fe.at(-Ne-1)!=$e.at(-Ne)){Ve=!1;break}Ve&&(ye[Fe.at(-1)]=-1/0)}}return G}}class ie extends oe{constructor(O){if(super(),O<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${O}.`);this.guidance_scale=O}_call(O,G){if(G.dims[0]!==2*O.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${G.dims[0]} for the logits and ${O.length} for the input ids.`);const P=O.length,ye=G.slice([0,P],null),$e=G.slice([P,G.dims[0]],null);for(let Fe=0;Fe<$e.data.length;++Fe)$e.data[Fe]+=(ye.data[Fe]-$e.data[Fe])*this.guidance_scale;return $e}}class Me extends de{constructor(O){super(),this.temperature=O}_call(O,G){const P=G.data;for(let ye=0;ye<P.length;++ye)P[ye]/=this.temperature;return G}}class J extends de{constructor(O,{filter_value:G=-1/0,min_tokens_to_keep:P=1}={}){if(super(),O<0||O>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${O}`);if(!Number.isInteger(P)||P<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${P}`);this.top_p=O,this.filter_value=G,this.min_tokens_to_keep=P}}class Z extends de{constructor(O,{filter_value:G=-1/0,min_tokens_to_keep:P=1}={}){if(super(),!Number.isInteger(O)||O<0)throw new Error(`\`top_k\` must be a positive integer, but is ${O}`);this.top_k=Math.max(O,P),this.filter_value=G}}},"./src/generation/logits_sampler.js":(De,ae,z)=>{z.r(ae),z.d(ae,{LogitsSampler:()=>de});var F=z("./src/utils/generic.js"),ue=z("./src/utils/tensor.js"),oe=z("./src/utils/maths.js");z("./src/generation/configuration_utils.js");class de extends F.Callable{constructor(R){super(),this.generation_config=R}async _call(R){return this.sample(R)}async sample(R){throw Error("sample should be implemented in subclasses.")}getLogits(R,Q){let ne=R.dims.at(-1),xe=R.data;if(Q===-1)xe=xe.slice(-ne);else{let we=Q*ne;xe=xe.slice(we,we+ne)}return xe}randomSelect(R){let Q=0;for(let xe=0;xe<R.length;++xe)Q+=R[xe];let ne=Math.random()*Q;for(let xe=0;xe<R.length;++xe)if(ne-=R[xe],ne<=0)return xe;return 0}static getSampler(R){if(R.do_sample)return new j(R);if(R.num_beams>1)return new I(R);if(R.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${R.num_return_sequences}.`);return new Ee(R)}}class Ee extends de{async sample(R){const Q=(0,oe.max)(R.data)[1];return[[BigInt(Q),0]]}}class j extends de{async sample(R){let Q=R.dims.at(-1);this.generation_config.top_k>0&&(Q=Math.min(this.generation_config.top_k,Q));const[ne,xe]=await(0,ue.topk)(R,Q),we=(0,oe.softmax)(ne.data);return Array.from({length:this.generation_config.num_beams},()=>{const N=this.randomSelect(we);return[xe.data[N],Math.log(we[N])]})}}class I extends de{async sample(R){let Q=R.dims.at(-1);this.generation_config.top_k>0&&(Q=Math.min(this.generation_config.top_k,Q));const[ne,xe]=await(0,ue.topk)(R,Q),we=(0,oe.softmax)(ne.data);return Array.from({length:this.generation_config.num_beams},(N,ie)=>[xe.data[ie],Math.log(we[ie])])}}},"./src/generation/stopping_criteria.js":(De,ae,z)=>{z.r(ae),z.d(ae,{EosTokenCriteria:()=>Ee,InterruptableStoppingCriteria:()=>j,MaxLengthCriteria:()=>de,StoppingCriteria:()=>ue,StoppingCriteriaList:()=>oe});var F=z("./src/utils/generic.js");class ue extends F.Callable{_call(M,R){throw Error("StoppingCriteria needs to be subclassed")}}class oe extends F.Callable{constructor(){super(),this.criteria=[]}push(M){this.criteria.push(M)}extend(M){M instanceof oe?M=M.criteria:M instanceof ue&&(M=[M]),this.criteria.push(...M)}_call(M,R){const Q=new Array(M.length).fill(!1);for(const ne of this.criteria){const xe=ne(M,R);for(let we=0;we<Q.length;++we)Q[we]||(Q[we]=xe[we])}return Q}[Symbol.iterator](){return this.criteria.values()}}class de extends ue{constructor(M,R=null){super(),this.max_length=M,this.max_position_embeddings=R}_call(M){return M.map(R=>R.length>=this.max_length)}}class Ee extends ue{constructor(M){super(),Array.isArray(M)||(M=[M]),this.eos_token_id=M}_call(M,R){return M.map(Q=>{const ne=Q.at(-1);return this.eos_token_id.some(xe=>ne==xe)})}}class j extends ue{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(M,R){return new Array(M.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(De,ae,z)=>{z.r(ae),z.d(ae,{BaseStreamer:()=>de,TextStreamer:()=>j,WhisperTextStreamer:()=>I});var F=z("./src/utils/core.js"),ue=z("./src/tokenizers.js"),oe=z("./src/env.js");class de{put(R){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const Ee=oe.apis.IS_PROCESS_AVAILABLE?M=>Hn.stdout.write(M):M=>console.log(M);class j extends de{constructor(R,{skip_prompt:Q=!1,callback_function:ne=null,token_callback_function:xe=null,decode_kwargs:we={},...N}={}){super(),this.tokenizer=R,this.skip_prompt=Q,this.callback_function=ne??Ee,this.token_callback_function=xe,this.decode_kwargs={...we,...N},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(R){var we;if(R.length>1)throw Error("TextStreamer only supports batch size of 1");if(this.skip_prompt&&this.next_tokens_are_prompt){this.next_tokens_are_prompt=!1;return}const Q=R[0];(we=this.token_callback_function)==null||we.call(this,Q),this.token_cache=(0,F.mergeArrays)(this.token_cache,Q);const ne=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let xe;ne.endsWith(`
`)?(xe=ne.slice(this.print_len),this.token_cache=[],this.print_len=0):ne.length>0&&(0,ue.is_chinese_char)(ne.charCodeAt(ne.length-1))?(xe=ne.slice(this.print_len),this.print_len+=xe.length):(xe=ne.slice(this.print_len,ne.lastIndexOf(" ")+1),this.print_len+=xe.length),this.on_finalized_text(xe,!1)}end(){let R;this.token_cache.length>0?(R=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):R="",this.next_tokens_are_prompt=!0,this.on_finalized_text(R,!0)}on_finalized_text(R,Q){var ne,xe;R.length>0&&((ne=this.callback_function)==null||ne.call(this,R)),Q&&this.callback_function===Ee&&oe.apis.IS_PROCESS_AVAILABLE&&((xe=this.callback_function)==null||xe.call(this,`
`))}}class I extends j{constructor(R,{skip_prompt:Q=!1,callback_function:ne=null,token_callback_function:xe=null,on_chunk_start:we=null,on_chunk_end:N=null,on_finalize:ie=null,time_precision:Me=.02,skip_special_tokens:J=!0,decode_kwargs:Z={}}={}){super(R,{skip_prompt:Q,callback_function:ne,token_callback_function:xe,decode_kwargs:{skip_special_tokens:J,...Z}}),this.timestamp_begin=R.timestamp_begin,this.on_chunk_start=we,this.on_chunk_end=N,this.on_finalize=ie,this.time_precision=Me,this.waiting_for_timestamp=!1}put(R){var ne,xe;if(R.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const Q=R[0];if(Q.length===1){const we=Number(Q[0])-this.timestamp_begin;if(we>=0){const N=we*this.time_precision;this.waiting_for_timestamp?(ne=this.on_chunk_end)==null||ne.call(this,N):(xe=this.on_chunk_start)==null||xe.call(this,N),this.waiting_for_timestamp=!this.waiting_for_timestamp,R=[[]]}}return super.put(R)}end(){var R;super.end(),(R=this.on_finalize)==null||R.call(this)}}},"./src/models.js":(De,ae,z)=>{z.r(ae),z.d(ae,{ASTForAudioClassification:()=>os,ASTModel:()=>Xt,ASTPreTrainedModel:()=>Un,AlbertForMaskedLM:()=>rr,AlbertForQuestionAnswering:()=>Ci,AlbertForSequenceClassification:()=>Ei,AlbertModel:()=>Ti,AlbertPreTrainedModel:()=>Dn,AutoModel:()=>aa,AutoModelForAudioClassification:()=>uc,AutoModelForAudioFrameClassification:()=>la,AutoModelForCTC:()=>bd,AutoModelForCausalLM:()=>dd,AutoModelForDepthEstimation:()=>Md,AutoModelForDocumentQuestionAnswering:()=>ua,AutoModelForImageClassification:()=>hd,AutoModelForImageFeatureExtraction:()=>pa,AutoModelForImageMatting:()=>da,AutoModelForImageSegmentation:()=>fd,AutoModelForImageToImage:()=>ca,AutoModelForMaskGeneration:()=>yd,AutoModelForMaskedLM:()=>cd,AutoModelForNormalEstimation:()=>vd,AutoModelForObjectDetection:()=>gd,AutoModelForQuestionAnswering:()=>lc,AutoModelForSemanticSegmentation:()=>md,AutoModelForSeq2SeqLM:()=>ac,AutoModelForSequenceClassification:()=>sd,AutoModelForSpeechSeq2Seq:()=>ad,AutoModelForTextToSpectrogram:()=>ld,AutoModelForTextToWaveform:()=>ud,AutoModelForTokenClassification:()=>od,AutoModelForUniversalSegmentation:()=>_d,AutoModelForVision2Seq:()=>pd,AutoModelForXVector:()=>Xi,AutoModelForZeroShotObjectDetection:()=>wd,BartForConditionalGeneration:()=>te,BartForSequenceClassification:()=>_e,BartModel:()=>L,BartPretrainedModel:()=>w,BaseModelOutput:()=>pt,BeitForImageClassification:()=>El,BeitModel:()=>Tl,BeitPreTrainedModel:()=>po,BertForMaskedLM:()=>$t,BertForQuestionAnswering:()=>ze,BertForSequenceClassification:()=>st,BertForTokenClassification:()=>re,BertModel:()=>yt,BertPreTrainedModel:()=>qe,BlenderbotForConditionalGeneration:()=>Fr,BlenderbotModel:()=>or,BlenderbotPreTrainedModel:()=>jt,BlenderbotSmallForConditionalGeneration:()=>rn,BlenderbotSmallModel:()=>Hr,BlenderbotSmallPreTrainedModel:()=>mr,BloomForCausalLM:()=>tl,BloomModel:()=>el,BloomPreTrainedModel:()=>no,CLIPModel:()=>va,CLIPPreTrainedModel:()=>pi,CLIPSegForImageSegmentation:()=>Pa,CLIPSegModel:()=>Sa,CLIPSegPreTrainedModel:()=>Ls,CLIPTextModel:()=>zd,CLIPTextModelWithProjection:()=>Tn,CLIPVisionModel:()=>Bd,CLIPVisionModelWithProjection:()=>xa,CamembertForMaskedLM:()=>fe,CamembertForQuestionAnswering:()=>sr,CamembertForSequenceClassification:()=>Pe,CamembertForTokenClassification:()=>Xe,CamembertModel:()=>V,CamembertPreTrainedModel:()=>f,CausalLMOutput:()=>ri,CausalLMOutputWithPast:()=>dc,ChineseCLIPModel:()=>ka,ChineseCLIPPreTrainedModel:()=>$a,ClapAudioModelWithProjection:()=>Vo,ClapModel:()=>vs,ClapPreTrainedModel:()=>Uo,ClapTextModelWithProjection:()=>Ki,CodeGenForCausalLM:()=>Ra,CodeGenModel:()=>La,CodeGenPreTrainedModel:()=>$n,CohereForCausalLM:()=>zn,CohereModel:()=>Wa,CoherePreTrainedModel:()=>Ks,ConvBertForMaskedLM:()=>A,ConvBertForQuestionAnswering:()=>ot,ConvBertForSequenceClassification:()=>ee,ConvBertForTokenClassification:()=>ve,ConvBertModel:()=>Y,ConvBertPreTrainedModel:()=>E,ConvNextForImageClassification:()=>mn,ConvNextModel:()=>ei,ConvNextPreTrainedModel:()=>hs,ConvNextV2ForImageClassification:()=>$o,ConvNextV2Model:()=>ms,ConvNextV2PreTrainedModel:()=>fs,DPTForDepthEstimation:()=>Vl,DPTModel:()=>Ul,DPTPreTrainedModel:()=>To,DebertaForMaskedLM:()=>ge,DebertaForQuestionAnswering:()=>Ye,DebertaForSequenceClassification:()=>ke,DebertaForTokenClassification:()=>Le,DebertaModel:()=>U,DebertaPreTrainedModel:()=>tt,DebertaV2ForMaskedLM:()=>Et,DebertaV2ForQuestionAnswering:()=>Vt,DebertaV2ForSequenceClassification:()=>Ot,DebertaV2ForTokenClassification:()=>Tt,DebertaV2Model:()=>St,DebertaV2PreTrainedModel:()=>ht,DecisionTransformerModel:()=>Uu,DecisionTransformerPreTrainedModel:()=>ju,DeiTForImageClassification:()=>Fl,DeiTModel:()=>Il,DeiTPreTrainedModel:()=>bo,DepthAnythingForDepthEstimation:()=>Gl,DepthAnythingPreTrainedModel:()=>Wl,DepthProForDepthEstimation:()=>Xl,DepthProPreTrainedModel:()=>Kl,DetrForObjectDetection:()=>$l,DetrForSegmentation:()=>ho,DetrModel:()=>Cl,DetrObjectDetectionOutput:()=>fo,DetrPreTrainedModel:()=>cs,DetrSegmentationOutput:()=>kl,Dinov2ForImageClassification:()=>Jl,Dinov2Model:()=>Zl,Dinov2PreTrainedModel:()=>ko,DistilBertForMaskedLM:()=>Kt,DistilBertForQuestionAnswering:()=>vt,DistilBertForSequenceClassification:()=>je,DistilBertForTokenClassification:()=>Ue,DistilBertModel:()=>Nt,DistilBertPreTrainedModel:()=>qt,DonutSwinModel:()=>Jn,DonutSwinPreTrainedModel:()=>Zn,EfficientNetForImageClassification:()=>Fu,EfficientNetModel:()=>Ko,EfficientNetPreTrainedModel:()=>Ho,ElectraForMaskedLM:()=>Mt,ElectraForQuestionAnswering:()=>d,ElectraForSequenceClassification:()=>kt,ElectraForTokenClassification:()=>x,ElectraModel:()=>Ut,ElectraPreTrainedModel:()=>at,EsmForMaskedLM:()=>Vr,EsmForSequenceClassification:()=>br,EsmForTokenClassification:()=>Ir,EsmModel:()=>Er,EsmPreTrainedModel:()=>dr,FalconForCausalLM:()=>Su,FalconModel:()=>ku,FalconPreTrainedModel:()=>jo,FastViTForImageClassification:()=>ml,FastViTModel:()=>fl,FastViTPreTrainedModel:()=>oo,Florence2ForConditionalGeneration:()=>Ds,Florence2PreTrainedModel:()=>Ma,GLPNForDepthEstimation:()=>Yn,GLPNModel:()=>jd,GLPNPreTrainedModel:()=>Co,GPT2LMHeadModel:()=>Fn,GPT2Model:()=>Aa,GPT2PreTrainedModel:()=>Rs,GPTBigCodeForCausalLM:()=>Gs,GPTBigCodeModel:()=>as,GPTBigCodePreTrainedModel:()=>Ws,GPTJForCausalLM:()=>On,GPTJModel:()=>Dd,GPTJPreTrainedModel:()=>Vs,GPTNeoForCausalLM:()=>za,GPTNeoModel:()=>Oa,GPTNeoPreTrainedModel:()=>js,GPTNeoXForCausalLM:()=>Da,GPTNeoXModel:()=>Ba,GPTNeoXPreTrainedModel:()=>Us,Gemma2ForCausalLM:()=>Ka,Gemma2Model:()=>Ha,Gemma2PreTrainedModel:()=>Qs,GemmaForCausalLM:()=>qa,GemmaModel:()=>Ga,GemmaPreTrainedModel:()=>Xs,GraniteForCausalLM:()=>Va,GraniteModel:()=>Ua,GranitePreTrainedModel:()=>Hs,GroupViTModel:()=>hl,GroupViTPreTrainedModel:()=>pl,HieraForImageClassification:()=>vo,HieraModel:()=>Ol,HieraPreTrainedModel:()=>Mo,HubertForCTC:()=>qd,HubertForSequenceClassification:()=>mu,HubertModel:()=>fu,HubertPreTrainedModel:()=>Gd,ImageMattingOutput:()=>Ed,JAISLMHeadModel:()=>Fa,JAISModel:()=>Ia,JAISPreTrainedModel:()=>Ns,LlamaForCausalLM:()=>ja,LlamaModel:()=>Na,LlamaPreTrainedModel:()=>qs,LlavaForConditionalGeneration:()=>ki,LlavaPreTrainedModel:()=>ba,LongT5ForConditionalGeneration:()=>Vi,LongT5Model:()=>Ui,LongT5PreTrainedModel:()=>$i,M2M100ForConditionalGeneration:()=>Hi,M2M100Model:()=>Fo,M2M100PreTrainedModel:()=>Io,MBartForCausalLM:()=>It,MBartForConditionalGeneration:()=>Ct,MBartForSequenceClassification:()=>zt,MBartModel:()=>rt,MBartPreTrainedModel:()=>Ce,MPNetForMaskedLM:()=>Bi,MPNetForQuestionAnswering:()=>Ri,MPNetForSequenceClassification:()=>Di,MPNetForTokenClassification:()=>Li,MPNetModel:()=>zi,MPNetPreTrainedModel:()=>Kn,MT5ForConditionalGeneration:()=>me,MT5Model:()=>Wi,MT5PreTrainedModel:()=>di,MarianMTModel:()=>Ud,MarianModel:()=>ru,MarianPreTrainedModel:()=>Ao,MaskFormerForInstanceSegmentation:()=>Yl,MaskFormerModel:()=>Ql,MaskFormerPreTrainedModel:()=>Eo,MaskedLMOutput:()=>cn,MistralForCausalLM:()=>Tu,MistralModel:()=>xu,MistralPreTrainedModel:()=>No,MobileBertForMaskedLM:()=>qr,MobileBertForQuestionAnswering:()=>Oi,MobileBertForSequenceClassification:()=>vi,MobileBertModel:()=>Cn,MobileBertPreTrainedModel:()=>vr,MobileNetV1ForImageClassification:()=>Ou,MobileNetV1Model:()=>Jd,MobileNetV1PreTrainedModel:()=>Yo,MobileNetV2ForImageClassification:()=>Bu,MobileNetV2Model:()=>zu,MobileNetV2PreTrainedModel:()=>Zo,MobileNetV3ForImageClassification:()=>Ru,MobileNetV3Model:()=>Lu,MobileNetV3PreTrainedModel:()=>Du,MobileNetV4ForImageClassification:()=>ec,MobileNetV4Model:()=>Nu,MobileNetV4PreTrainedModel:()=>Jo,MobileViTForImageClassification:()=>yl,MobileViTModel:()=>wl,MobileViTPreTrainedModel:()=>ao,MobileViTV2ForImageClassification:()=>Gi,MobileViTV2Model:()=>bl,MobileViTV2PreTrainedModel:()=>lo,ModelOutput:()=>Ge,Moondream1ForConditionalGeneration:()=>gr,MptForCausalLM:()=>nl,MptModel:()=>rl,MptPreTrainedModel:()=>Si,MusicgenForCausalLM:()=>Rc,MusicgenForConditionalGeneration:()=>Qo,MusicgenModel:()=>Zd,MusicgenPreTrainedModel:()=>Xo,NomicBertModel:()=>lt,NomicBertPreTrainedModel:()=>Je,OPTForCausalLM:()=>sl,OPTModel:()=>il,OPTPreTrainedModel:()=>us,OpenELMForCausalLM:()=>Qa,OpenELMModel:()=>Xa,OpenELMPreTrainedModel:()=>Ys,OwlViTForObjectDetection:()=>Ml,OwlViTModel:()=>ds,OwlViTPreTrainedModel:()=>uo,Owlv2ForObjectDetection:()=>xl,Owlv2Model:()=>vl,Owlv2PreTrainedModel:()=>co,Phi3ForCausalLM:()=>ls,Phi3Model:()=>Ja,Phi3PreTrainedModel:()=>Za,PhiForCausalLM:()=>ro,PhiModel:()=>Ya,PhiPreTrainedModel:()=>to,PreTrainedModel:()=>ce,PretrainedMixin:()=>Lr,PvtForImageClassification:()=>ll,PvtModel:()=>al,PvtPreTrainedModel:()=>so,PyAnnoteForAudioFrameClassification:()=>lu,PyAnnoteModel:()=>au,PyAnnotePreTrainedModel:()=>ou,QuestionAnsweringModelOutput:()=>_n,Qwen2ForCausalLM:()=>eo,Qwen2Model:()=>Js,Qwen2PreTrainedModel:()=>Zs,RTDetrForObjectDetection:()=>Pl,RTDetrModel:()=>Sl,RTDetrObjectDetectionOutput:()=>_o,RTDetrPreTrainedModel:()=>mo,ResNetForImageClassification:()=>Bl,ResNetModel:()=>zl,ResNetPreTrainedModel:()=>xo,RoFormerForMaskedLM:()=>ft,RoFormerForQuestionAnswering:()=>Pt,RoFormerForSequenceClassification:()=>bt,RoFormerForTokenClassification:()=>Ft,RoFormerModel:()=>Ke,RoFormerPreTrainedModel:()=>Qe,RobertaForMaskedLM:()=>wn,RobertaForQuestionAnswering:()=>nn,RobertaForSequenceClassification:()=>vn,RobertaForTokenClassification:()=>Oe,RobertaModel:()=>Or,RobertaPreTrainedModel:()=>hr,SamImageSegmentationOutput:()=>gs,SamModel:()=>Po,SamPreTrainedModel:()=>tu,SapiensForDepthEstimation:()=>Hl,SapiensForNormalEstimation:()=>Nd,SapiensForSemanticSegmentation:()=>ql,SapiensPreTrainedModel:()=>ps,SegformerForImageClassification:()=>Go,SegformerForSemanticSegmentation:()=>Au,SegformerModel:()=>Qd,SegformerPreTrainedModel:()=>xs,Seq2SeqLMOutput:()=>xd,SequenceClassifierOutput:()=>_r,SiglipModel:()=>Ta,SiglipPreTrainedModel:()=>Vn,SiglipTextModel:()=>Ea,SiglipVisionModel:()=>Ca,SpeechT5ForSpeechToText:()=>yu,SpeechT5ForTextToSpeech:()=>bu,SpeechT5HifiGan:()=>Mu,SpeechT5Model:()=>Kd,SpeechT5PreTrainedModel:()=>Ms,SqueezeBertForMaskedLM:()=>An,SqueezeBertForQuestionAnswering:()=>xi,SqueezeBertForSequenceClassification:()=>Nn,SqueezeBertModel:()=>Xn,SqueezeBertPreTrainedModel:()=>li,StableLmForCausalLM:()=>Yd,StableLmModel:()=>Iu,StableLmPreTrainedModel:()=>qo,Starcoder2ForCausalLM:()=>$u,Starcoder2Model:()=>Cu,Starcoder2PreTrainedModel:()=>Eu,Swin2SRForImageSuperResolution:()=>jl,Swin2SRModel:()=>Nl,Swin2SRPreTrainedModel:()=>kn,SwinForImageClassification:()=>Rl,SwinModel:()=>Ll,SwinPreTrainedModel:()=>Dl,T5ForConditionalGeneration:()=>ji,T5Model:()=>Ni,T5PreTrainedModel:()=>ui,TableTransformerForObjectDetection:()=>yo,TableTransformerModel:()=>wo,TableTransformerObjectDetectionOutput:()=>Al,TableTransformerPreTrainedModel:()=>go,TokenClassifierOutput:()=>on,TrOCRForCausalLM:()=>Xd,TrOCRPreTrainedModel:()=>vu,UniSpeechForCTC:()=>du,UniSpeechForSequenceClassification:()=>cu,UniSpeechModel:()=>uu,UniSpeechPreTrainedModel:()=>ws,UniSpeechSatForAudioFrameClassification:()=>Do,UniSpeechSatForCTC:()=>ys,UniSpeechSatForSequenceClassification:()=>Bo,UniSpeechSatModel:()=>pu,UniSpeechSatPreTrainedModel:()=>hi,ViTForImageClassification:()=>Ld,ViTMAEModel:()=>ul,ViTMAEPreTrainedModel:()=>Rd,ViTMSNForImageClassification:()=>cl,ViTMSNModel:()=>dl,ViTMSNPreTrainedModel:()=>Cr,ViTModel:()=>ol,ViTPreTrainedModel:()=>io,VisionEncoderDecoderModel:()=>Bs,VitMatteForImageMatting:()=>gl,VitMattePreTrainedModel:()=>_l,VitsModel:()=>Wo,VitsModelOutput:()=>Cd,VitsPreTrainedModel:()=>Pu,Wav2Vec2BertForCTC:()=>Lo,Wav2Vec2BertForSequenceClassification:()=>Wd,Wav2Vec2BertModel:()=>hu,Wav2Vec2BertPreTrainedModel:()=>bs,Wav2Vec2ForAudioFrameClassification:()=>su,Wav2Vec2ForCTC:()=>nu,Wav2Vec2ForSequenceClassification:()=>iu,Wav2Vec2Model:()=>Oo,Wav2Vec2PreTrainedModel:()=>ti,WavLMForAudioFrameClassification:()=>Ro,WavLMForCTC:()=>_u,WavLMForSequenceClassification:()=>gu,WavLMForXVector:()=>wu,WavLMModel:()=>Hd,WavLMPreTrainedModel:()=>fi,WeSpeakerResNetModel:()=>zo,WeSpeakerResNetPreTrainedModel:()=>Vd,WhisperForConditionalGeneration:()=>zs,WhisperModel:()=>Yt,WhisperPreTrainedModel:()=>ut,XLMForQuestionAnswering:()=>Jr,XLMForSequenceClassification:()=>Jt,XLMForTokenClassification:()=>fn,XLMModel:()=>In,XLMPreTrainedModel:()=>dn,XLMRobertaForMaskedLM:()=>Bt,XLMRobertaForQuestionAnswering:()=>Qn,XLMRobertaForSequenceClassification:()=>Mr,XLMRobertaForTokenClassification:()=>ci,XLMRobertaModel:()=>Dr,XLMRobertaPreTrainedModel:()=>yr,XLMWithLMHeadModel:()=>jn,XVectorOutput:()=>Td,YolosForObjectDetection:()=>eu,YolosModel:()=>So,YolosObjectDetectionOutput:()=>_s,YolosPreTrainedModel:()=>qi});var F=z("./src/configs.js"),ue=z("./src/backends/onnx.js"),oe=z("./src/utils/dtypes.js"),de=z("./src/utils/generic.js"),Ee=z("./src/utils/core.js"),j=z("./src/utils/hub.js"),I=z("./src/utils/constants.js"),M=z("./src/generation/logits_process.js"),R=z("./src/generation/configuration_utils.js"),Q=z("./src/utils/tensor.js"),ne=z("./src/utils/maths.js"),xe=z("./src/generation/stopping_criteria.js"),we=z("./src/generation/logits_sampler.js"),N=z("./src/env.js"),ie=z("./src/models/whisper/generation_whisper.js"),Me=z("./src/models/whisper/common_whisper.js");const J={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7},Z=new Map,H=new Map,O=new Map;async function G(_,T,q){var pn;const Ae=((pn=q.config)==null?void 0:pn["transformers.js_config"])??{};let et=q.device??Ae.device;et&&typeof et!="string"&&(et.hasOwnProperty(T)?et=et[T]:(console.warn(`device not specified for "${T}". Using the default device.`),et=null));const We=et??(N.apis.IS_NODE_ENV?"cpu":"wasm"),xt=(0,ue.deviceToExecutionProviders)(We);let Dt=q.dtype??Ae.dtype;typeof Dt!="string"&&(Dt&&Dt.hasOwnProperty(T)?Dt=Dt[T]:(Dt=oe.DEFAULT_DEVICE_DTYPE_MAPPING[We]??oe.DATA_TYPES.fp32,console.warn(`dtype not specified for "${T}". Using the default dtype (${Dt}) for this device (${We}).`)));const Ht=Dt;if(oe.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(Ht)){if(Ht===oe.DATA_TYPES.fp16&&We==="webgpu"&&!await(0,oe.isWebGpuFp16Supported)())throw new Error(`The device (${We}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${Ht}. Should be one of: ${Object.keys(oe.DATA_TYPES).join(", ")}`);const ar=Ae.kv_cache_dtype?typeof Ae.kv_cache_dtype=="string"?Ae.kv_cache_dtype:Ae.kv_cache_dtype[Ht]??"float32":void 0;if(ar&&!["float32","float16"].includes(ar))throw new Error(`Invalid kv_cache_dtype: ${ar}. Should be one of: float32, float16`);const Rr={dtype:Ht,kv_cache_dtype:ar},Nr=oe.DEFAULT_DTYPE_SUFFIX_MAPPING[Ht],xr=`${q.subfolder??""}/${T}${Nr}.onnx`,cr={...q.session_options};cr.executionProviders??(cr.executionProviders=xt);const zr=Ae.free_dimension_overrides;zr?cr.freeDimensionOverrides??(cr.freeDimensionOverrides=zr):We.startsWith("webnn")&&!cr.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const Pr=(0,j.getModelFile)(_,xr,!0,q),Tr=q.use_external_data_format??Ae.use_external_data_format;let jr=[];if(Tr&&(Tr===!0||typeof Tr=="object"&&Tr.hasOwnProperty(T)&&Tr[T]===!0)){if(N.apis.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const Kr=`${T}${Nr}.onnx_data`,en=`${q.subfolder??""}/${Kr}`;jr.push(new Promise(async(Zr,bn)=>{const ni=await(0,j.getModelFile)(_,en,!0,q);Zr({path:Kr,data:ni})}))}else cr.externalData!==void 0&&(jr=cr.externalData.map(async Kr=>{if(typeof Kr.data=="string"){const en=await(0,j.getModelFile)(_,Kr.data,!0,q);return{...Kr,data:en}}return Kr}));if(jr.length>0&&(cr.externalData=await Promise.all(jr)),We==="webgpu"){const Kr=(0,F.getKeyValueShapes)(q.config,{prefix:"present"});if(Object.keys(Kr).length>0&&!(0,ue.isONNXProxy)()){const en={};for(const Zr in Kr)en[Zr]="gpu-buffer";cr.preferredOutputLocation=en}}return{buffer:await Pr,session_options:cr,session_config:Rr}}async function P(_,T,q){return Object.fromEntries(await Promise.all(Object.keys(T).map(async Ae=>{const{buffer:et,session_options:We,session_config:xt}=await G(_,T[Ae],q),Dt=await(0,ue.createInferenceSession)(et,We,xt);return[Ae,Dt]})))}async function ye(_,T,q){return Object.fromEntries(await Promise.all(Object.keys(T).map(async Ae=>{const et=await(0,j.getModelJSON)(_,T[Ae],!1,q);return[Ae,et]})))}function $e(_,T){const q=Object.create(null),Ae=[];for(const xt of _.inputNames){const Dt=T[xt];if(!(Dt instanceof Q.Tensor)){Ae.push(xt);continue}q[xt]=(0,ue.isONNXProxy)()?Dt.clone():Dt}if(Ae.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${Ae.join(", ")}.`);const et=Object.keys(T).length,We=_.inputNames.length;if(et>We){let xt=Object.keys(T).filter(Dt=>!_.inputNames.includes(Dt));console.warn(`WARNING: Too many inputs were provided (${et} > ${We}). The following inputs will be ignored: "${xt.join(", ")}".`)}return q}async function Fe(_,T){const q=$e(_,T);try{const Ae=Object.fromEntries(Object.entries(q).map(([We,xt])=>[We,xt.ort_tensor]));let et=await _.run(Ae);return et=Ve(et),et}catch(Ae){throw console.error(`An error occurred during model execution: "${Ae}".`),console.error("Inputs given to model:",q),Ae}}function Ve(_){for(let T in _)(0,ue.isONNXTensor)(_[T])?_[T]=new Q.Tensor(_[T]):typeof _[T]=="object"&&Ve(_[T]);return _}function Ne(_){if(_ instanceof Q.Tensor)return _;if(_.length===0)throw Error("items must be non-empty");if(Array.isArray(_[0])){if(_.some(T=>T.length!==_[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new Q.Tensor("int64",BigInt64Array.from(_.flat().map(T=>BigInt(T))),[_.length,_[0].length])}else return new Q.Tensor("int64",BigInt64Array.from(_.map(T=>BigInt(T))),[1,_.length])}function _t(_){return new Q.Tensor("bool",[_],[1])}async function ct(_,T){let{encoder_outputs:q,input_ids:Ae,decoder_input_ids:et,...We}=T;if(!q){const Dt=(0,Ee.pick)(T,_.sessions.model.inputNames);q=(await wt(_,Dt)).last_hidden_state}return We.input_ids=et,We.encoder_hidden_states=q,_.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(We.encoder_attention_mask=T.attention_mask),await Te(_,We,!0)}async function wt(_,T){const q=_.sessions.model,Ae=(0,Ee.pick)(T,q.inputNames);if(q.inputNames.includes("inputs_embeds")&&!Ae.inputs_embeds){if(!T.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");Ae.inputs_embeds=await _.encode_text({input_ids:T.input_ids})}return q.inputNames.includes("token_type_ids")&&!Ae.token_type_ids&&(Ae.token_type_ids=new Q.Tensor("int64",new BigInt64Array(Ae.input_ids.data.length),Ae.input_ids.dims)),await Fe(q,Ae)}async function Te(_,T,q=!1){const Ae=_.sessions[q?"decoder_model_merged":"model"],{past_key_values:et,...We}=T;Ae.inputNames.includes("use_cache_branch")&&(We.use_cache_branch=_t(!!et)),Ae.inputNames.includes("position_ids")&&We.attention_mask&&!We.position_ids&&(We.position_ids=be(We,et)),_.addPastKeyValues(We,et);const xt=(0,Ee.pick)(We,Ae.inputNames);return await Fe(Ae,xt)}async function K(_,{input_ids:T=null,attention_mask:q=null,pixel_values:Ae=null,position_ids:et=null,inputs_embeds:We=null,past_key_values:xt=null,generation_config:Dt=null,logits_processor:Ht=null,...ar}){if(!We){if(We=await _.encode_text({input_ids:T}),Ae&&T.dims[1]!==1){const Nr=await _.encode_image({pixel_values:Ae});({inputs_embeds:We,attention_mask:q}=_._merge_input_ids_with_image_features({image_features:Nr,inputs_embeds:We,input_ids:T,attention_mask:q}))}else if(xt&&Ae&&T.dims[1]===1){const Nr=T.dims[1],xr=Object.values(xt)[0].dims.at(-2);q=(0,Q.cat)([(0,Q.ones)([T.dims[0],xr]),q.slice(null,[q.dims[1]-Nr,q.dims[1]])],1)}}return await Te(_,{inputs_embeds:We,past_key_values:xt,attention_mask:q,position_ids:et,generation_config:Dt,logits_processor:Ht},!0)}function be(_,T=null){const{input_ids:q,inputs_embeds:Ae,attention_mask:et}=_,[We,xt]=et.dims,Dt=new BigInt64Array(et.data.length);for(let ar=0;ar<We;++ar){const Rr=ar*xt;let Nr=BigInt(0);for(let xr=0;xr<xt;++xr){const cr=Rr+xr;et.data[cr]===0n?Dt[cr]=BigInt(1):(Dt[cr]=Nr,Nr+=et.data[cr])}}let Ht=new Q.Tensor("int64",Dt,et.dims);if(T){const ar=-(q??Ae).dims.at(1);Ht=Ht.slice(null,[ar,null])}return Ht}function Ie(_,T,q,Ae){if(q.past_key_values){const et=Object.values(q.past_key_values)[0].dims.at(-2),{input_ids:We,attention_mask:xt}=q;if(!(xt&&xt.dims[1]>We.dims[1])){if(et<We.dims[1])q.input_ids=We.slice(null,[et,null]);else if(_.config.image_token_index!=null&&We.data.some(Dt=>Dt==_.config.image_token_index)){const Dt=_.config.num_image_tokens;if(!Dt)throw new Error("`num_image_tokens` is missing in the model configuration.");const Ht=We.dims[1]-(et-Dt);q.input_ids=We.slice(null,[-Ht,null]),q.attention_mask=(0,Q.ones)([1,et+Ht])}}}return q}function Ze(_,T,q,Ae){return q.past_key_values&&(T=T.map(et=>[et.at(-1)])),{...q,decoder_input_ids:Ne(T)}}function gt(_,...T){return _.config.is_encoder_decoder?Ze(_,...T):Ie(_,...T)}class ce extends de.Callable{constructor(q,Ae,et){super();Se(this,"main_input_name","input_ids");Se(this,"forward_params",["input_ids","attention_mask"]);this.config=q,this.sessions=Ae,this.configs=et;const We=O.get(this.constructor),xt=Z.get(We);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,xt){case J.DecoderOnly:this.can_generate=!0,this._forward=Te,this._prepare_inputs_for_generation=Ie;break;case J.Seq2Seq:case J.Vision2Seq:case J.Musicgen:this.can_generate=!0,this._forward=ct,this._prepare_inputs_for_generation=Ze;break;case J.EncoderDecoder:this._forward=ct;break;case J.ImageTextToText:this.can_generate=!0,this._forward=K,this._prepare_inputs_for_generation=gt;break;default:this._forward=wt;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var Ae;const q=[];for(const et of Object.values(this.sessions))(Ae=et==null?void 0:et.handler)!=null&&Ae.dispose&&q.push(et.handler.dispose());return await Promise.all(q)}static async from_pretrained(q,{progress_callback:Ae=null,config:et=null,cache_dir:We=null,local_files_only:xt=!1,revision:Dt="main",model_file_name:Ht=null,subfolder:ar="onnx",device:Rr=null,dtype:Nr=null,use_external_data_format:xr=null,session_options:cr={}}={}){let zr={progress_callback:Ae,config:et,cache_dir:We,local_files_only:xt,revision:Dt,model_file_name:Ht,subfolder:ar,device:Rr,dtype:Nr,use_external_data_format:xr,session_options:cr};const Pr=O.get(this),Tr=Z.get(Pr);et=zr.config=await F.AutoConfig.from_pretrained(q,zr);let jr;if(Tr===J.DecoderOnly)jr=await Promise.all([P(q,{model:zr.model_file_name??"model"},zr),ye(q,{generation_config:"generation_config.json"},zr)]);else if(Tr===J.Seq2Seq||Tr===J.Vision2Seq)jr=await Promise.all([P(q,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},zr),ye(q,{generation_config:"generation_config.json"},zr)]);else if(Tr===J.MaskGeneration)jr=await Promise.all([P(q,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},zr)]);else if(Tr===J.EncoderDecoder)jr=await Promise.all([P(q,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},zr)]);else if(Tr===J.ImageTextToText){const En={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};et.is_encoder_decoder&&(En.model="encoder_model"),jr=await Promise.all([P(q,En,zr),ye(q,{generation_config:"generation_config.json"},zr)])}else Tr===J.Musicgen?jr=await Promise.all([P(q,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},zr),ye(q,{generation_config:"generation_config.json"},zr)]):(Tr!==J.EncoderOnly&&console.warn(`Model type for '${Pr??(et==null?void 0:et.model_type)}' not found, assuming encoder-only architecture. Please report this at ${I.GITHUB_ISSUE_URL}.`),jr=await Promise.all([P(q,{model:zr.model_file_name??"model"},zr)]));return new this(et,...jr)}async _call(q){return await this.forward(q)}async forward(q){return await this._forward(this,q)}get generation_config(){var q;return((q=this.configs)==null?void 0:q.generation_config)??null}_get_logits_warper(q){const Ae=new M.LogitsProcessorList;return q.temperature!==null&&q.temperature!==1&&Ae.push(new M.TemperatureLogitsWarper(q.temperature)),q.top_k!==null&&q.top_k!==0&&Ae.push(new M.TopKLogitsWarper(q.top_k)),q.top_p!==null&&q.top_p<1&&Ae.push(new M.TopPLogitsWarper(q.top_p)),Ae}_get_logits_processor(q,Ae,et=null){const We=new M.LogitsProcessorList;if(q.repetition_penalty!==null&&q.repetition_penalty!==1&&We.push(new M.RepetitionPenaltyLogitsProcessor(q.repetition_penalty)),q.no_repeat_ngram_size!==null&&q.no_repeat_ngram_size>0&&We.push(new M.NoRepeatNGramLogitsProcessor(q.no_repeat_ngram_size)),q.bad_words_ids!==null&&We.push(new M.NoBadWordsLogitsProcessor(q.bad_words_ids,q.eos_token_id)),q.min_length!==null&&q.eos_token_id!==null&&q.min_length>0&&We.push(new M.MinLengthLogitsProcessor(q.min_length,q.eos_token_id)),q.min_new_tokens!==null&&q.eos_token_id!==null&&q.min_new_tokens>0&&We.push(new M.MinNewTokensLengthLogitsProcessor(Ae,q.min_new_tokens,q.eos_token_id)),q.forced_bos_token_id!==null&&We.push(new M.ForcedBOSTokenLogitsProcessor(q.forced_bos_token_id)),q.forced_eos_token_id!==null&&We.push(new M.ForcedEOSTokenLogitsProcessor(q.max_length,q.forced_eos_token_id)),q.begin_suppress_tokens!==null){const xt=Ae>1||q.forced_bos_token_id===null?Ae:Ae+1;We.push(new M.SuppressTokensAtBeginLogitsProcessor(q.begin_suppress_tokens,xt))}return q.guidance_scale!==null&&q.guidance_scale>1&&We.push(new M.ClassifierFreeGuidanceLogitsProcessor(q.guidance_scale)),et!==null&&We.extend(et),We}_prepare_generation_config(q,Ae,et=R.GenerationConfig){const We={...this.config};for(const Dt of["decoder","generator","text_config"])Dt in We&&Object.assign(We,We[Dt]);const xt=new et(We);return Object.assign(xt,this.generation_config??{}),q&&Object.assign(xt,q),Ae&&Object.assign(xt,(0,Ee.pick)(Ae,Object.getOwnPropertyNames(xt))),xt}_get_stopping_criteria(q,Ae=null){const et=new xe.StoppingCriteriaList;return q.max_length!==null&&et.push(new xe.MaxLengthCriteria(q.max_length,this.config.max_position_embeddings??null)),q.eos_token_id!==null&&et.push(new xe.EosTokenCriteria(q.eos_token_id)),Ae&&et.extend(Ae),et}_validate_model_class(){if(!this.can_generate){const q=[ra,Pi,ta,ea],Ae=O.get(this.constructor),et=new Set,We=this.config.model_type;for(const Dt of q){const Ht=Dt.get(We);Ht&&et.add(Ht[0])}let xt=`The current model class (${Ae}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw et.size>0&&(xt+=` Please use the following class instead: ${[...et].join(", ")}`),Error(xt)}}prepare_inputs_for_generation(...q){return this._prepare_inputs_for_generation(this,...q)}_update_model_kwargs_for_generation({generated_input_ids:q,outputs:Ae,model_inputs:et,is_encoder_decoder:We}){return et.past_key_values=this.getPastKeyValues(Ae,et.past_key_values),et.input_ids=new Q.Tensor("int64",q.flat(),[q.length,1]),We||(et.attention_mask=(0,Q.cat)([et.attention_mask,(0,Q.ones)([et.attention_mask.dims[0],1])],1)),et.position_ids=null,et}_prepare_model_inputs({inputs:q,bos_token_id:Ae,model_kwargs:et}){const We=(0,Ee.pick)(et,this.forward_params),xt=this.main_input_name;if(xt in We){if(q)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else We[xt]=q;return{inputs_tensor:We[xt],model_inputs:We,model_input_name:xt}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:q,model_inputs:Ae,model_input_name:et,generation_config:We}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!Ae.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:Dt,pixel_values:Ht,attention_mask:ar,...Rr}=Ae,Nr=await this._prepare_inputs_embeds(Ae);Ae={...Rr,...(0,Ee.pick)(Nr,["inputs_embeds","attention_mask"])}}let{last_hidden_state:xt}=await wt(this,Ae);if(We.guidance_scale!==null&&We.guidance_scale>1)xt=(0,Q.cat)([xt,(0,Q.full_like)(xt,0)],0),"attention_mask"in Ae&&(Ae.attention_mask=(0,Q.cat)([Ae.attention_mask,(0,Q.zeros_like)(Ae.attention_mask)],0));else if(Ae.decoder_input_ids){const Dt=Ne(Ae.decoder_input_ids).dims[0];if(Dt!==xt.dims[0]){if(xt.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${xt.dims[0]}) than the decoder inputs (${Dt}).`);xt=(0,Q.cat)(Array.from({length:Dt},()=>xt),0)}}return Ae.encoder_outputs=xt,Ae}_prepare_decoder_input_ids_for_generation({batch_size:q,model_input_name:Ae,model_kwargs:et,decoder_start_token_id:We,bos_token_id:xt,generation_config:Dt}){let{decoder_input_ids:Ht,...ar}=et;if(!(Ht instanceof Q.Tensor)){if(Ht)Array.isArray(Ht[0])||(Ht=Array.from({length:q},()=>Ht));else if(We??(We=xt),this.config.model_type==="musicgen")Ht=Array.from({length:q*this.config.decoder.num_codebooks},()=>[We]);else if(Array.isArray(We)){if(We.length!==q)throw new Error(`\`decoder_start_token_id\` expcted to have length ${q} but got ${We.length}`);Ht=We}else Ht=Array.from({length:q},()=>[We]);Ht=Ne(Ht)}return et.decoder_attention_mask=(0,Q.ones_like)(Ht),{input_ids:Ht,model_inputs:ar}}async generate({inputs:q=null,generation_config:Ae=null,logits_processor:et=null,stopping_criteria:We=null,streamer:xt=null,...Dt}){this._validate_model_class(),Ae=this._prepare_generation_config(Ae,Dt);let{inputs_tensor:Ht,model_inputs:ar,model_input_name:Rr}=this._prepare_model_inputs({inputs:q,model_kwargs:Dt});const Nr=this.config.is_encoder_decoder;Nr&&("encoder_outputs"in ar||(ar=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:Ht,model_inputs:ar,model_input_name:Rr,generation_config:Ae})));let xr;Nr?{input_ids:xr,model_inputs:ar}=this._prepare_decoder_input_ids_for_generation({batch_size:ar[Rr].dims.at(0),model_input_name:Rr,model_kwargs:ar,decoder_start_token_id:Ae.decoder_start_token_id,bos_token_id:Ae.bos_token_id,generation_config:Ae}):xr=ar[Rr];let cr=xr.dims.at(-1);Ae.max_new_tokens!==null&&(Ae.max_length=cr+Ae.max_new_tokens);const zr=this._get_logits_processor(Ae,cr,et),Pr=this._get_stopping_criteria(Ae,We),Tr=ar[Rr].dims.at(0),jr=we.LogitsSampler.getSampler(Ae),En=new Array(Tr).fill(0),pn=xr.tolist();xt&&xt.put(pn);let Kr,en={};for(;;){if(ar=this.prepare_inputs_for_generation(pn,ar,Ae),Kr=await this.forward(ar),Ae.output_attentions&&Ae.return_dict_in_generate){const Ln=this.getAttentions(Kr);for(const Ai in Ln)Ai in en||(en[Ai]=[]),en[Ai].push(Ln[Ai])}const ni=Kr.logits.slice(null,-1,null),Ts=zr(pn,ni),ha=[];for(let Ln=0;Ln<Ts.dims.at(0);++Ln){const Ai=Ts[Ln],Vc=await jr(Ai);for(const[cc,pc]of Vc){const $d=BigInt(cc);En[Ln]+=pc,pn[Ln].push($d),ha.push([$d]);break}}if(xt&&xt.put(ha),Pr(pn).every(Ln=>Ln))break;ar=this._update_model_kwargs_for_generation({generated_input_ids:ha,outputs:Kr,model_inputs:ar,is_encoder_decoder:Nr})}xt&&xt.end();const Zr=this.getPastKeyValues(Kr,ar.past_key_values,!0),bn=new Q.Tensor("int64",pn.flat(),[pn.length,pn[0].length]);if(Ae.return_dict_in_generate)return{sequences:bn,past_key_values:Zr,...en};for(const ni of Object.values(Kr))ni.location==="gpu-buffer"&&ni.dispose();return bn}getPastKeyValues(q,Ae,et=!1){const We=Object.create(null);for(const xt in q)if(xt.startsWith("present")){const Dt=xt.replace("present","past_key_values"),Ht=xt.includes("encoder");if(Ht&&Ae?We[Dt]=Ae[Dt]:We[Dt]=q[xt],Ae&&(!Ht||et)){const ar=Ae[Dt];ar.location==="gpu-buffer"&&ar.dispose()}}return We}getAttentions(q){const Ae={};for(const et of["cross_attentions","encoder_attentions","decoder_attentions"])for(const We in q)We.startsWith(et)&&(et in Ae||(Ae[et]=[]),Ae[et].push(q[We]));return Ae}addPastKeyValues(q,Ae){var et;if(Ae)Object.assign(q,Ae);else{const We=this.sessions.decoder_model_merged??this.sessions.model,xt=((et=We==null?void 0:We.config)==null?void 0:et.kv_cache_dtype)??"float32",Dt=xt==="float16"?new Uint16Array:[],Ht=(0,F.getKeyValueShapes)(this.config);for(const ar in Ht)q[ar]=new Q.Tensor(xt,Dt,Ht[ar])}}async encode_image({pixel_values:q}){const Ae=(await Fe(this.sessions.vision_encoder,{pixel_values:q})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${Ae.dims[1]}).`),this.config.num_image_tokens=Ae.dims[1]),Ae}async encode_text({input_ids:q}){return(await Fe(this.sessions.embed_tokens,{input_ids:q})).inputs_embeds}}class Ge{}class pt extends Ge{constructor({last_hidden_state:T,hidden_states:q=null,attentions:Ae=null}){super(),this.last_hidden_state=T,this.hidden_states=q,this.attentions=Ae}}class qe extends ce{}class yt extends qe{}class $t extends qe{async _call(T){return new cn(await super._call(T))}}class st extends qe{async _call(T){return new _r(await super._call(T))}}class re extends qe{async _call(T){return new on(await super._call(T))}}class ze extends qe{async _call(T){return new _n(await super._call(T))}}class Je extends ce{}class lt extends Je{}class Qe extends ce{}class Ke extends Qe{}class ft extends Qe{async _call(T){return new cn(await super._call(T))}}class bt extends Qe{async _call(T){return new _r(await super._call(T))}}class Ft extends Qe{async _call(T){return new on(await super._call(T))}}class Pt extends Qe{async _call(T){return new _n(await super._call(T))}}class E extends ce{}class Y extends E{}class A extends E{async _call(T){return new cn(await super._call(T))}}class ee extends E{async _call(T){return new _r(await super._call(T))}}class ve extends E{async _call(T){return new on(await super._call(T))}}class ot extends E{async _call(T){return new _n(await super._call(T))}}class at extends ce{}class Ut extends at{}class Mt extends at{async _call(T){return new cn(await super._call(T))}}class kt extends at{async _call(T){return new _r(await super._call(T))}}class x extends at{async _call(T){return new on(await super._call(T))}}class d extends at{async _call(T){return new _n(await super._call(T))}}class f extends ce{}class V extends f{}class fe extends f{async _call(T){return new cn(await super._call(T))}}class Pe extends f{async _call(T){return new _r(await super._call(T))}}class Xe extends f{async _call(T){return new on(await super._call(T))}}class sr extends f{async _call(T){return new _n(await super._call(T))}}class tt extends ce{}class U extends tt{}class ge extends tt{async _call(T){return new cn(await super._call(T))}}class ke extends tt{async _call(T){return new _r(await super._call(T))}}class Le extends tt{async _call(T){return new on(await super._call(T))}}class Ye extends tt{async _call(T){return new _n(await super._call(T))}}class ht extends ce{}class St extends ht{}class Et extends ht{async _call(T){return new cn(await super._call(T))}}class Ot extends ht{async _call(T){return new _r(await super._call(T))}}class Tt extends ht{async _call(T){return new on(await super._call(T))}}class Vt extends ht{async _call(T){return new _n(await super._call(T))}}class qt extends ce{}class Nt extends qt{}class je extends qt{async _call(T){return new _r(await super._call(T))}}class Ue extends qt{async _call(T){return new on(await super._call(T))}}class vt extends qt{async _call(T){return new _n(await super._call(T))}}class Kt extends qt{async _call(T){return new cn(await super._call(T))}}class dr extends ce{}class Er extends dr{}class Vr extends dr{async _call(T){return new cn(await super._call(T))}}class br extends dr{async _call(T){return new _r(await super._call(T))}}class Ir extends dr{async _call(T){return new on(await super._call(T))}}class vr extends ce{}class Cn extends vr{}class qr extends vr{async _call(T){return new cn(await super._call(T))}}class vi extends vr{async _call(T){return new _r(await super._call(T))}}class Oi extends vr{async _call(T){return new _n(await super._call(T))}}class Kn extends ce{}class zi extends Kn{}class Bi extends Kn{async _call(T){return new cn(await super._call(T))}}class Di extends Kn{async _call(T){return new _r(await super._call(T))}}class Li extends Kn{async _call(T){return new on(await super._call(T))}}class Ri extends Kn{async _call(T){return new _n(await super._call(T))}}class li extends ce{}class Xn extends li{}class An extends li{async _call(T){return new cn(await super._call(T))}}class Nn extends li{async _call(T){return new _r(await super._call(T))}}class xi extends li{async _call(T){return new _n(await super._call(T))}}class Dn extends ce{}class Ti extends Dn{}class Ei extends Dn{async _call(T){return new _r(await super._call(T))}}class Ci extends Dn{async _call(T){return new _n(await super._call(T))}}class rr extends Dn{async _call(T){return new cn(await super._call(T))}}class ui extends ce{constructor(){super(...arguments);Se(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class Ni extends ui{}class ji extends ui{}class $i extends ce{}class Ui extends $i{}class Vi extends $i{}class di extends ce{}class Wi extends di{}class me extends di{}class w extends ce{}class L extends w{}class te extends w{}class _e extends w{async _call(T){return new _r(await super._call(T))}}class Ce extends ce{}class rt extends Ce{}class Ct extends Ce{}class zt extends Ce{async _call(T){return new _r(await super._call(T))}}class It extends Ce{}class jt extends ce{}class or extends jt{}class Fr extends jt{}class mr extends ce{}class Hr extends mr{}class rn extends mr{}class hr extends ce{}class Or extends hr{}class wn extends hr{async _call(T){return new cn(await super._call(T))}}class vn extends hr{async _call(T){return new _r(await super._call(T))}}class Oe extends hr{async _call(T){return new on(await super._call(T))}}class nn extends hr{async _call(T){return new _n(await super._call(T))}}class dn extends ce{}class In extends dn{}class jn extends dn{async _call(T){return new cn(await super._call(T))}}class Jt extends dn{async _call(T){return new _r(await super._call(T))}}class fn extends dn{async _call(T){return new on(await super._call(T))}}class Jr extends dn{async _call(T){return new _n(await super._call(T))}}class yr extends ce{}class Dr extends yr{}class Bt extends yr{async _call(T){return new cn(await super._call(T))}}class Mr extends yr{async _call(T){return new _r(await super._call(T))}}class ci extends yr{async _call(T){return new on(await super._call(T))}}class Qn extends yr{async _call(T){return new _n(await super._call(T))}}class Un extends ce{}class Xt extends Un{}class os extends Un{}class ut extends ce{constructor(){super(...arguments);Se(this,"requires_attention_mask",!1);Se(this,"main_input_name","input_features");Se(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class Yt extends ut{}class zs extends ut{_prepare_generation_config(T,q){return super._prepare_generation_config(T,q,ie.WhisperGenerationConfig)}_retrieve_init_tokens(T){const q=[T.decoder_start_token_id];let Ae=T.language;const et=T.task;if(T.is_multilingual){Ae||(console.warn("No language specified - defaulting to English (en)."),Ae="en");const xt=`<|${(0,Me.whisper_language_to_code)(Ae)}|>`;q.push(T.lang_to_id[xt]),q.push(T.task_to_id[et??"transcribe"])}else if(Ae||et)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!T.return_timestamps&&T.no_timestamps_token_id&&q.at(-1)!==T.no_timestamps_token_id?q.push(T.no_timestamps_token_id):T.return_timestamps&&q.at(-1)===T.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),q.pop()),q.filter(We=>We!=null)}async generate({inputs:T=null,generation_config:q=null,logits_processor:Ae=null,stopping_criteria:et=null,...We}){q=this._prepare_generation_config(q,We);const xt=We.decoder_input_ids??this._retrieve_init_tokens(q);if(q.return_timestamps&&(Ae??(Ae=new M.LogitsProcessorList),Ae.push(new M.WhisperTimeStampLogitsProcessor(q,xt))),q.begin_suppress_tokens&&(Ae??(Ae=new M.LogitsProcessorList),Ae.push(new M.SuppressTokensAtBeginLogitsProcessor(q.begin_suppress_tokens,xt.length))),q.return_token_timestamps){if(!q.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");q.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),q.output_attentions=!0,q.return_dict_in_generate=!0}const Dt=await super.generate({inputs:T,generation_config:q,logits_processor:Ae,decoder_input_ids:xt,...We});return q.return_token_timestamps&&(Dt.token_timestamps=this._extract_token_timestamps(Dt,q.alignment_heads,q.num_frames)),Dt}_extract_token_timestamps(T,q,Ae=null,et=.02){if(!T.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");Ae==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let We=this.config.median_filter_width;We===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),We=7);const xt=T.cross_attentions,Dt=Array.from({length:this.config.decoder_layers},(Pr,Tr)=>(0,Q.cat)(xt.map(jr=>jr[Tr]),2)),Ht=(0,Q.stack)(q.map(([Pr,Tr])=>{if(Pr>=Dt.length)throw new Error(`Layer index ${Pr} is out of bounds for cross attentions (length ${Dt.length}).`);return Ae?Dt[Pr].slice(null,Tr,null,[0,Ae]):Dt[Pr].slice(null,Tr)})).transpose(1,0,2,3),[ar,Rr]=(0,Q.std_mean)(Ht,-2,0,!0),Nr=Ht.clone();for(let Pr=0;Pr<Nr.dims[0];++Pr){const Tr=Nr[Pr];for(let jr=0;jr<Tr.dims[0];++jr){const En=Tr[jr],pn=ar[Pr][jr][0].data,Kr=Rr[Pr][jr][0].data;for(let en=0;en<En.dims[0];++en){let Zr=En[en].data;for(let bn=0;bn<Zr.length;++bn)Zr[bn]=(Zr[bn]-Kr[bn])/pn[bn];Zr.set((0,ne.medianFilter)(Zr,We))}}}const xr=[(0,Q.mean)(Nr,1)],cr=T.sequences.dims,zr=new Q.Tensor("float32",new Float32Array(cr[0]*cr[1]),cr);for(let Pr=0;Pr<cr[0];++Pr){const Tr=xr[Pr].neg().squeeze_(0),[jr,En]=(0,ne.dynamic_time_warping)(Tr.tolist()),pn=Array.from({length:jr.length-1},(Zr,bn)=>jr[bn+1]-jr[bn]),Kr=(0,Ee.mergeArrays)([1],pn).map(Zr=>!!Zr),en=[];for(let Zr=0;Zr<Kr.length;++Zr)Kr[Zr]&&en.push(En[Zr]*et);zr[Pr].data.set(en,1)}return zr}}class Bs extends ce{constructor(){super(...arguments);Se(this,"main_input_name","pixel_values");Se(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class ba extends ce{constructor(){super(...arguments);Se(this,"forward_params",["input_ids","pixel_values","attention_mask","position_ids","past_key_values"])}}class ki extends ba{_merge_input_ids_with_image_features({inputs_embeds:T,image_features:q,input_ids:Ae,attention_mask:et}){const We=this.config.image_token_index,Dt=Ae.tolist().map(xr=>xr.findIndex(cr=>cr==We)),Ht=Dt.every(xr=>xr===-1),ar=Dt.every(xr=>xr!==-1);if(!Ht&&!ar)throw new Error("Every input should contain either 0 or 1 image token.");if(Ht)return{inputs_embeds:T,attention_mask:et};const Rr=[],Nr=[];for(let xr=0;xr<Dt.length;++xr){const cr=Dt[xr],zr=T[xr],Pr=q[xr],Tr=et[xr];Rr.push((0,Q.cat)([zr.slice([0,cr]),Pr,zr.slice([cr+1,zr.dims[0]])],0)),Nr.push((0,Q.cat)([Tr.slice([0,cr]),(0,Q.ones)([Pr.dims[0]]),Tr.slice([cr+1,Tr.dims[0]])],0))}return{inputs_embeds:(0,Q.stack)(Rr,0),attention_mask:(0,Q.stack)(Nr,0)}}}class gr extends ki{}class Ma extends ce{constructor(){super(...arguments);Se(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);Se(this,"main_input_name","inputs_embeds")}}class Ds extends Ma{_merge_input_ids_with_image_features({inputs_embeds:T,image_features:q,input_ids:Ae,attention_mask:et}){return{inputs_embeds:(0,Q.cat)([q,T],1),attention_mask:(0,Q.cat)([(0,Q.ones)(q.dims.slice(0,2)),et],1)}}async _prepare_inputs_embeds({input_ids:T,pixel_values:q,inputs_embeds:Ae,attention_mask:et}){if(!T&&!q)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let We,xt;return T&&(We=await this.encode_text({input_ids:T})),q&&(xt=await this.encode_image({pixel_values:q})),We&&xt?{inputs_embeds:Ae,attention_mask:et}=this._merge_input_ids_with_image_features({inputs_embeds:We,image_features:xt,input_ids:T,attention_mask:et}):Ae=We||xt,{inputs_embeds:Ae,attention_mask:et}}async forward({input_ids:T,pixel_values:q,attention_mask:Ae,decoder_input_ids:et,decoder_attention_mask:We,encoder_outputs:xt,past_key_values:Dt,inputs_embeds:Ht,decoder_inputs_embeds:ar}){if(Ht||({inputs_embeds:Ht,attention_mask:Ae}=await this._prepare_inputs_embeds({input_ids:T,pixel_values:q,inputs_embeds:Ht,attention_mask:Ae})),!xt){let{last_hidden_state:xr}=await wt(this,{inputs_embeds:Ht,attention_mask:Ae});xt=xr}if(!ar){if(!et)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");ar=await this.encode_text({input_ids:et})}return await Te(this,{inputs_embeds:ar,attention_mask:We,encoder_attention_mask:Ae,encoder_hidden_states:xt,past_key_values:Dt},!0)}}class pi extends ce{}class va extends pi{}class zd extends pi{static async from_pretrained(T,q={}){return q.model_file_name??(q.model_file_name="text_model"),super.from_pretrained(T,q)}}class Tn extends pi{static async from_pretrained(T,q={}){return q.model_file_name??(q.model_file_name="text_model"),super.from_pretrained(T,q)}}class Bd extends pi{static async from_pretrained(T,q={}){return q.model_file_name??(q.model_file_name="vision_model"),super.from_pretrained(T,q)}}class xa extends pi{static async from_pretrained(T,q={}){return q.model_file_name??(q.model_file_name="vision_model"),super.from_pretrained(T,q)}}class Vn extends ce{}class Ta extends Vn{}class Ea extends Vn{static async from_pretrained(T,q={}){return q.model_file_name??(q.model_file_name="text_model"),super.from_pretrained(T,q)}}class Ca extends pi{static async from_pretrained(T,q={}){return q.model_file_name??(q.model_file_name="vision_model"),super.from_pretrained(T,q)}}class $a extends ce{}class ka extends $a{}class Ls extends ce{}class Sa extends Ls{}class Pa extends Ls{}class Rs extends ce{}class Aa extends Rs{}class Fn extends Rs{}class Ns extends ce{}class Ia extends Ns{}class Fa extends Ns{}class js extends ce{}class Oa extends js{}class za extends js{}class Us extends ce{}class Ba extends Us{}class Da extends Us{}class Vs extends ce{}class Dd extends Vs{}class On extends Vs{}class Ws extends ce{}class as extends Ws{}class Gs extends Ws{}class $n extends ce{}class La extends $n{}class Ra extends $n{}class qs extends ce{}class Na extends qs{}class ja extends qs{}class Hs extends ce{}class Ua extends Hs{}class Va extends Hs{}class Ks extends ce{}class Wa extends Ks{}class zn extends Ks{}class Xs extends ce{}class Ga extends Xs{}class qa extends Xs{}class Qs extends ce{}class Ha extends Qs{}class Ka extends Qs{}class Ys extends ce{}class Xa extends Ys{}class Qa extends Ys{}class Zs extends ce{}class Js extends Zs{}class eo extends Zs{}class to extends ce{}class Ya extends to{}class ro extends to{}class Za extends ce{}class Ja extends Za{}class ls extends Za{}class no extends ce{}class el extends no{}class tl extends no{}class Si extends ce{}class rl extends Si{}class nl extends Si{}class us extends ce{}class il extends us{}class sl extends us{}class io extends ce{}class ol extends io{}class Ld extends io{async _call(T){return new _r(await super._call(T))}}class so extends ce{}class al extends so{}class ll extends so{async _call(T){return new _r(await super._call(T))}}class Rd extends ce{}class ul extends Rd{}class Cr extends ce{}class dl extends Cr{}class cl extends Cr{async _call(T){return new _r(await super._call(T))}}class pl extends ce{}class hl extends pl{}class oo extends ce{}class fl extends oo{}class ml extends oo{async _call(T){return new _r(await super._call(T))}}class _l extends ce{}class gl extends _l{async _call(T){return new Ed(await super._call(T))}}class ao extends ce{}class wl extends ao{}class yl extends ao{async _call(T){return new _r(await super._call(T))}}class lo extends ce{}class bl extends lo{}class Gi extends lo{async _call(T){return new _r(await super._call(T))}}class uo extends ce{}class ds extends uo{}class Ml extends uo{}class co extends ce{}class vl extends co{}class xl extends co{}class po extends ce{}class Tl extends po{}class El extends po{async _call(T){return new _r(await super._call(T))}}class cs extends ce{}class Cl extends cs{}class $l extends cs{async _call(T){return new fo(await super._call(T))}}class ho extends cs{async _call(T){return new kl(await super._call(T))}}class fo extends Ge{constructor({logits:T,pred_boxes:q}){super(),this.logits=T,this.pred_boxes=q}}class kl extends Ge{constructor({logits:T,pred_boxes:q,pred_masks:Ae}){super(),this.logits=T,this.pred_boxes=q,this.pred_masks=Ae}}class mo extends ce{}class Sl extends mo{}class Pl extends mo{async _call(T){return new _o(await super._call(T))}}class _o extends Ge{constructor({logits:T,pred_boxes:q}){super(),this.logits=T,this.pred_boxes=q}}class go extends ce{}class wo extends go{}class yo extends go{async _call(T){return new Al(await super._call(T))}}class Al extends fo{}class bo extends ce{}class Il extends bo{}class Fl extends bo{async _call(T){return new _r(await super._call(T))}}class Mo extends ce{}class Ol extends Mo{}class vo extends Mo{async _call(T){return new _r(await super._call(T))}}class xo extends ce{}class zl extends xo{}class Bl extends xo{async _call(T){return new _r(await super._call(T))}}class Dl extends ce{}class Ll extends Dl{}class Rl extends Dl{async _call(T){return new _r(await super._call(T))}}class kn extends ce{}class Nl extends kn{}class jl extends kn{}class To extends ce{}class Ul extends To{}class Vl extends To{}class Wl extends ce{}class Gl extends Wl{}class ps extends ce{}class ql extends ps{}class Hl extends ps{}class Nd extends ps{}class Kl extends ce{}class Xl extends Kl{}class Eo extends ce{}class Ql extends Eo{}class Yl extends Eo{}class Co extends ce{}class jd extends Co{}class Yn extends Co{}class Zn extends ce{}class Jn extends Zn{}class hs extends ce{}class ei extends hs{}class mn extends hs{async _call(T){return new _r(await super._call(T))}}class fs extends ce{}class ms extends fs{}class $o extends fs{async _call(T){return new _r(await super._call(T))}}class ko extends ce{}class Zl extends ko{}class Jl extends ko{async _call(T){return new _r(await super._call(T))}}class qi extends ce{}class So extends qi{}class eu extends qi{async _call(T){return new _s(await super._call(T))}}class _s extends Ge{constructor({logits:T,pred_boxes:q}){super(),this.logits=T,this.pred_boxes=q}}class tu extends ce{}class Po extends tu{async get_image_embeddings({pixel_values:T}){return await wt(this,{pixel_values:T})}async forward(T){if((!T.image_embeddings||!T.image_positional_embeddings)&&(T={...T,...await this.get_image_embeddings(T)}),!T.input_labels&&T.input_points){const Ae=T.input_points.dims.slice(0,-1),et=Ae.reduce((We,xt)=>We*xt,1);T.input_labels=new Q.Tensor("int64",new BigInt64Array(et).fill(1n),Ae)}const q={image_embeddings:T.image_embeddings,image_positional_embeddings:T.image_positional_embeddings};return T.input_points&&(q.input_points=T.input_points),T.input_labels&&(q.input_labels=T.input_labels),T.input_boxes&&(q.input_boxes=T.input_boxes),await Fe(this.sessions.prompt_encoder_mask_decoder,q)}async _call(T){return new gs(await super._call(T))}}class gs extends Ge{constructor({iou_scores:T,pred_masks:q}){super(),this.iou_scores=T,this.pred_masks=q}}class Ao extends ce{}class ru extends Ao{}class Ud extends Ao{}class Io extends ce{}class Fo extends Io{}class Hi extends Io{}class ti extends ce{}class Oo extends ti{}class nu extends ti{async _call(T){return new ri(await super._call(T))}}class iu extends ti{async _call(T){return new _r(await super._call(T))}}class su extends ti{async _call(T){return new on(await super._call(T))}}class ou extends ce{}class au extends ou{}class lu extends ou{async _call(T){return new on(await super._call(T))}}class Vd extends ce{}class zo extends Vd{}class ws extends ce{}class uu extends ws{}class du extends ws{async _call(T){return new ri(await super._call(T))}}class cu extends ws{async _call(T){return new _r(await super._call(T))}}class hi extends ce{}class pu extends hi{}class ys extends hi{async _call(T){return new ri(await super._call(T))}}class Bo extends hi{async _call(T){return new _r(await super._call(T))}}class Do extends hi{async _call(T){return new on(await super._call(T))}}class bs extends ce{}class hu extends bs{}class Lo extends bs{async _call(T){return new ri(await super._call(T))}}class Wd extends bs{async _call(T){return new _r(await super._call(T))}}class Gd extends ce{}class fu extends ti{}class qd extends ti{async _call(T){return new ri(await super._call(T))}}class mu extends ti{async _call(T){return new _r(await super._call(T))}}class fi extends ce{}class Hd extends fi{}class _u extends fi{async _call(T){return new ri(await super._call(T))}}class gu extends fi{async _call(T){return new _r(await super._call(T))}}class wu extends fi{async _call(T){return new Td(await super._call(T))}}class Ro extends fi{async _call(T){return new on(await super._call(T))}}class Ms extends ce{}class Kd extends Ms{}class yu extends Ms{}class bu extends Ms{async generate_speech(T,q,{threshold:Ae=.5,minlenratio:et=0,maxlenratio:We=20,vocoder:xt=null}={}){const Dt={input_ids:T},{encoder_outputs:Ht,encoder_attention_mask:ar}=await wt(this,Dt),Rr=Ht.dims[1]/this.config.reduction_factor,Nr=Math.floor(Rr*We),xr=Math.floor(Rr*et),cr=this.config.num_mel_bins;let zr=[],Pr=null,Tr=null,jr=0;for(;;){++jr;const Kr=_t(!!Tr);let en;Tr?en=Tr.output_sequence_out:en=new Q.Tensor("float32",new Float32Array(cr),[1,1,cr]);let Zr={use_cache_branch:Kr,output_sequence:en,encoder_attention_mask:ar,speaker_embeddings:q,encoder_hidden_states:Ht};this.addPastKeyValues(Zr,Pr),Tr=await Fe(this.sessions.decoder_model_merged,Zr),Pr=this.getPastKeyValues(Tr,Pr);const{prob:bn,spectrum:ni}=Tr;if(zr.push(ni),jr>=xr&&(Array.from(bn.data).filter(Ts=>Ts>=Ae).length>0||jr>=Nr))break}const En=(0,Q.cat)(zr),{waveform:pn}=await Fe(xt.sessions.model,{spectrogram:En});return{spectrogram:En,waveform:pn}}}class Mu extends ce{constructor(){super(...arguments);Se(this,"main_input_name","spectrogram")}}class vu extends ce{}class Xd extends vu{}class No extends ce{}class xu extends No{}class Tu extends No{}class Eu extends ce{}class Cu extends Eu{}class $u extends Eu{}class jo extends ce{}class ku extends jo{}class Su extends jo{}class Uo extends ce{}class vs extends Uo{}class Ki extends Uo{static async from_pretrained(T,q={}){return q.model_file_name??(q.model_file_name="text_model"),super.from_pretrained(T,q)}}class Vo extends Uo{static async from_pretrained(T,q={}){return q.model_file_name??(q.model_file_name="audio_model"),super.from_pretrained(T,q)}}class Pu extends ce{}class Wo extends Pu{async _call(T){return new Cd(await super._call(T))}}class xs extends ce{}class Qd extends xs{}class Go extends xs{}class Au extends xs{}class qo extends ce{}class Iu extends qo{}class Yd extends qo{}class Ho extends ce{}class Ko extends Ho{}class Fu extends Ho{async _call(T){return new _r(await super._call(T))}}class Xo extends ce{}class Zd extends Xo{}class Rc extends Xo{}class Qo extends ce{constructor(){super(...arguments);Se(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(q){const[Ae,et]=q.dims,We=this.config.decoder.num_codebooks,xt=et-We;let Dt=0;for(let Rr=0;Rr<q.size;++Rr){if(q.data[Rr]===this.config.decoder.pad_token_id)continue;const Nr=Rr%et,xr=Math.floor(Rr/et)%We,cr=Nr-xr;cr>0&&cr<=xt&&(q.data[Dt++]=q.data[Rr])}const Ht=Math.floor(Ae/We),ar=Dt/(Ht*We);return new Q.Tensor(q.type,q.data.slice(0,Dt),[Ht,We,ar])}prepare_inputs_for_generation(q,Ae,et){let We=structuredClone(q);for(let Dt=0;Dt<We.length;++Dt)for(let Ht=0;Ht<We[Dt].length;++Ht)Dt%this.config.decoder.num_codebooks>=Ht&&(We[Dt][Ht]=BigInt(this.config.decoder.pad_token_id));return et.guidance_scale!==null&&et.guidance_scale>1&&(We=We.concat(We)),super.prepare_inputs_for_generation(We,Ae,et)}async generate(q){const Ae=await super.generate(q),et=this._apply_and_filter_by_delay_pattern_mask(Ae).unsqueeze_(0),{audio_values:We}=await Fe(this.sessions.encodec_decode,{audio_codes:et});return We}}class Yo extends ce{}class Jd extends Yo{}class Ou extends Yo{async _call(T){return new _r(await super._call(T))}}class Zo extends ce{}class zu extends Zo{}class Bu extends Zo{async _call(T){return new _r(await super._call(T))}}class Du extends ce{}class Lu extends Du{}class Ru extends Du{async _call(T){return new _r(await super._call(T))}}class Jo extends ce{}class Nu extends Jo{}class ec extends Jo{async _call(T){return new _r(await super._call(T))}}class ju extends ce{}class Uu extends ju{}class Lr{static async from_pretrained(T,{progress_callback:q=null,config:Ae=null,cache_dir:et=null,local_files_only:We=!1,revision:xt="main",model_file_name:Dt=null,subfolder:Ht="onnx",device:ar=null,dtype:Rr=null,use_external_data_format:Nr=null,session_options:xr={}}={}){const cr={progress_callback:q,config:Ae,cache_dir:et,local_files_only:We,revision:xt,model_file_name:Dt,subfolder:Ht,device:ar,dtype:Rr,use_external_data_format:Nr,session_options:xr};if(cr.config=await F.AutoConfig.from_pretrained(T,cr),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(const zr of this.MODEL_CLASS_MAPPINGS){const Pr=zr.get(cr.config.model_type);if(Pr)return await Pr[1].from_pretrained(T,cr)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${cr.config.model_type}", attempting to construct from base class.`),await ce.from_pretrained(T,cr);throw Error(`Unsupported model type: ${cr.config.model_type}`)}}Se(Lr,"MODEL_CLASS_MAPPINGS",null),Se(Lr,"BASE_IF_FAIL",!1);const tc=new Map([["bert",["BertModel",yt]],["nomic_bert",["NomicBertModel",lt]],["roformer",["RoFormerModel",Ke]],["electra",["ElectraModel",Ut]],["esm",["EsmModel",Er]],["convbert",["ConvBertModel",Y]],["camembert",["CamembertModel",V]],["deberta",["DebertaModel",U]],["deberta-v2",["DebertaV2Model",St]],["mpnet",["MPNetModel",zi]],["albert",["AlbertModel",Ti]],["distilbert",["DistilBertModel",Nt]],["roberta",["RobertaModel",Or]],["xlm",["XLMModel",In]],["xlm-roberta",["XLMRobertaModel",Dr]],["clap",["ClapModel",vs]],["clip",["CLIPModel",va]],["clipseg",["CLIPSegModel",Sa]],["chinese_clip",["ChineseCLIPModel",ka]],["siglip",["SiglipModel",Ta]],["mobilebert",["MobileBertModel",Cn]],["squeezebert",["SqueezeBertModel",Xn]],["wav2vec2",["Wav2Vec2Model",Oo]],["wav2vec2-bert",["Wav2Vec2BertModel",hu]],["unispeech",["UniSpeechModel",uu]],["unispeech-sat",["UniSpeechSatModel",pu]],["hubert",["HubertModel",fu]],["wavlm",["WavLMModel",Hd]],["audio-spectrogram-transformer",["ASTModel",Xt]],["vits",["VitsModel",Wo]],["pyannote",["PyAnnoteModel",au]],["wespeaker-resnet",["WeSpeakerResNetModel",zo]],["detr",["DetrModel",Cl]],["rt_detr",["RTDetrModel",Sl]],["table-transformer",["TableTransformerModel",wo]],["vit",["ViTModel",ol]],["pvt",["PvtModel",al]],["vit_msn",["ViTMSNModel",dl]],["vit_mae",["ViTMAEModel",ul]],["groupvit",["GroupViTModel",hl]],["fastvit",["FastViTModel",fl]],["mobilevit",["MobileViTModel",wl]],["mobilevitv2",["MobileViTV2Model",bl]],["owlvit",["OwlViTModel",ds]],["owlv2",["Owlv2Model",vl]],["beit",["BeitModel",Tl]],["deit",["DeiTModel",Il]],["hiera",["HieraModel",Ol]],["convnext",["ConvNextModel",ei]],["convnextv2",["ConvNextV2Model",ms]],["dinov2",["Dinov2Model",Zl]],["resnet",["ResNetModel",zl]],["swin",["SwinModel",Ll]],["swin2sr",["Swin2SRModel",Nl]],["donut-swin",["DonutSwinModel",Jn]],["yolos",["YolosModel",So]],["dpt",["DPTModel",Ul]],["glpn",["GLPNModel",jd]],["hifigan",["SpeechT5HifiGan",Mu]],["efficientnet",["EfficientNetModel",Ko]],["decision_transformer",["DecisionTransformerModel",Uu]],["mobilenet_v1",["MobileNetV1Model",Jd]],["mobilenet_v2",["MobileNetV2Model",zu]],["mobilenet_v3",["MobileNetV3Model",Lu]],["mobilenet_v4",["MobileNetV4Model",Nu]],["maskformer",["MaskFormerModel",Ql]]]),Nc=new Map([["t5",["T5Model",Ni]],["longt5",["LongT5Model",Ui]],["mt5",["MT5Model",Wi]],["bart",["BartModel",L]],["mbart",["MBartModel",rt]],["marian",["MarianModel",ru]],["whisper",["WhisperModel",Yt]],["m2m_100",["M2M100Model",Fo]],["blenderbot",["BlenderbotModel",or]],["blenderbot-small",["BlenderbotSmallModel",Hr]]]),rc=new Map([["bloom",["BloomModel",el]],["jais",["JAISModel",Ia]],["gpt2",["GPT2Model",Aa]],["gptj",["GPTJModel",Dd]],["gpt_bigcode",["GPTBigCodeModel",as]],["gpt_neo",["GPTNeoModel",Oa]],["gpt_neox",["GPTNeoXModel",Ba]],["codegen",["CodeGenModel",La]],["llama",["LlamaModel",Na]],["granite",["GraniteModel",Ua]],["cohere",["CohereModel",Wa]],["gemma",["GemmaModel",Ga]],["gemma2",["Gemma2Model",Ha]],["openelm",["OpenELMModel",Xa]],["qwen2",["Qwen2Model",Js]],["phi",["PhiModel",Ya]],["phi3",["Phi3Model",Ja]],["mpt",["MptModel",rl]],["opt",["OPTModel",il]],["mistral",["MistralModel",xu]],["starcoder2",["Starcoder2Model",Cu]],["falcon",["FalconModel",ku]],["stablelm",["StableLmModel",Iu]]]),ea=new Map([["speecht5",["SpeechT5ForSpeechToText",yu]],["whisper",["WhisperForConditionalGeneration",zs]]]),Vu=new Map([["speecht5",["SpeechT5ForTextToSpeech",bu]]]),Wu=new Map([["vits",["VitsModel",Wo]],["musicgen",["MusicgenForConditionalGeneration",Qo]]]),nc=new Map([["bert",["BertForSequenceClassification",st]],["roformer",["RoFormerForSequenceClassification",bt]],["electra",["ElectraForSequenceClassification",kt]],["esm",["EsmForSequenceClassification",br]],["convbert",["ConvBertForSequenceClassification",ee]],["camembert",["CamembertForSequenceClassification",Pe]],["deberta",["DebertaForSequenceClassification",ke]],["deberta-v2",["DebertaV2ForSequenceClassification",Ot]],["mpnet",["MPNetForSequenceClassification",Di]],["albert",["AlbertForSequenceClassification",Ei]],["distilbert",["DistilBertForSequenceClassification",je]],["roberta",["RobertaForSequenceClassification",vn]],["xlm",["XLMForSequenceClassification",Jt]],["xlm-roberta",["XLMRobertaForSequenceClassification",Mr]],["bart",["BartForSequenceClassification",_e]],["mbart",["MBartForSequenceClassification",zt]],["mobilebert",["MobileBertForSequenceClassification",vi]],["squeezebert",["SqueezeBertForSequenceClassification",Nn]]]),yn=new Map([["bert",["BertForTokenClassification",re]],["roformer",["RoFormerForTokenClassification",Ft]],["electra",["ElectraForTokenClassification",x]],["esm",["EsmForTokenClassification",Ir]],["convbert",["ConvBertForTokenClassification",ve]],["camembert",["CamembertForTokenClassification",Xe]],["deberta",["DebertaForTokenClassification",Le]],["deberta-v2",["DebertaV2ForTokenClassification",Tt]],["mpnet",["MPNetForTokenClassification",Li]],["distilbert",["DistilBertForTokenClassification",Ue]],["roberta",["RobertaForTokenClassification",Oe]],["xlm",["XLMForTokenClassification",fn]],["xlm-roberta",["XLMRobertaForTokenClassification",ci]]]),ta=new Map([["t5",["T5ForConditionalGeneration",ji]],["longt5",["LongT5ForConditionalGeneration",Vi]],["mt5",["MT5ForConditionalGeneration",me]],["bart",["BartForConditionalGeneration",te]],["mbart",["MBartForConditionalGeneration",Ct]],["marian",["MarianMTModel",Ud]],["m2m_100",["M2M100ForConditionalGeneration",Hi]],["blenderbot",["BlenderbotForConditionalGeneration",Fr]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",rn]]]),ra=new Map([["bloom",["BloomForCausalLM",tl]],["gpt2",["GPT2LMHeadModel",Fn]],["jais",["JAISLMHeadModel",Fa]],["gptj",["GPTJForCausalLM",On]],["gpt_bigcode",["GPTBigCodeForCausalLM",Gs]],["gpt_neo",["GPTNeoForCausalLM",za]],["gpt_neox",["GPTNeoXForCausalLM",Da]],["codegen",["CodeGenForCausalLM",Ra]],["llama",["LlamaForCausalLM",ja]],["granite",["GraniteForCausalLM",Va]],["cohere",["CohereForCausalLM",zn]],["gemma",["GemmaForCausalLM",qa]],["gemma2",["Gemma2ForCausalLM",Ka]],["openelm",["OpenELMForCausalLM",Qa]],["qwen2",["Qwen2ForCausalLM",eo]],["phi",["PhiForCausalLM",ro]],["phi3",["Phi3ForCausalLM",ls]],["mpt",["MptForCausalLM",nl]],["opt",["OPTForCausalLM",sl]],["mbart",["MBartForCausalLM",It]],["mistral",["MistralForCausalLM",Tu]],["starcoder2",["Starcoder2ForCausalLM",$u]],["falcon",["FalconForCausalLM",Su]],["trocr",["TrOCRForCausalLM",Xd]],["stablelm",["StableLmForCausalLM",Yd]]]),na=new Map([["bert",["BertForMaskedLM",$t]],["roformer",["RoFormerForMaskedLM",ft]],["electra",["ElectraForMaskedLM",Mt]],["esm",["EsmForMaskedLM",Vr]],["convbert",["ConvBertForMaskedLM",A]],["camembert",["CamembertForMaskedLM",fe]],["deberta",["DebertaForMaskedLM",ge]],["deberta-v2",["DebertaV2ForMaskedLM",Et]],["mpnet",["MPNetForMaskedLM",Bi]],["albert",["AlbertForMaskedLM",rr]],["distilbert",["DistilBertForMaskedLM",Kt]],["roberta",["RobertaForMaskedLM",wn]],["xlm",["XLMWithLMHeadModel",jn]],["xlm-roberta",["XLMRobertaForMaskedLM",Bt]],["mobilebert",["MobileBertForMaskedLM",qr]],["squeezebert",["SqueezeBertForMaskedLM",An]]]),Gu=new Map([["bert",["BertForQuestionAnswering",ze]],["roformer",["RoFormerForQuestionAnswering",Pt]],["electra",["ElectraForQuestionAnswering",d]],["convbert",["ConvBertForQuestionAnswering",ot]],["camembert",["CamembertForQuestionAnswering",sr]],["deberta",["DebertaForQuestionAnswering",Ye]],["deberta-v2",["DebertaV2ForQuestionAnswering",Vt]],["mpnet",["MPNetForQuestionAnswering",Ri]],["albert",["AlbertForQuestionAnswering",Ci]],["distilbert",["DistilBertForQuestionAnswering",vt]],["roberta",["RobertaForQuestionAnswering",nn]],["xlm",["XLMForQuestionAnswering",Jr]],["xlm-roberta",["XLMRobertaForQuestionAnswering",Qn]],["mobilebert",["MobileBertForQuestionAnswering",Oi]],["squeezebert",["SqueezeBertForQuestionAnswering",xi]]]),Pi=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Bs]]]),ic=new Map([["llava",["LlavaForConditionalGeneration",ki]],["moondream1",["Moondream1ForConditionalGeneration",gr]],["florence2",["Florence2ForConditionalGeneration",Ds]]]),sc=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Bs]]]),qu=new Map([["vit",["ViTForImageClassification",Ld]],["pvt",["PvtForImageClassification",ll]],["vit_msn",["ViTMSNForImageClassification",cl]],["fastvit",["FastViTForImageClassification",ml]],["mobilevit",["MobileViTForImageClassification",yl]],["mobilevitv2",["MobileViTV2ForImageClassification",Gi]],["beit",["BeitForImageClassification",El]],["deit",["DeiTForImageClassification",Fl]],["hiera",["HieraForImageClassification",vo]],["convnext",["ConvNextForImageClassification",mn]],["convnextv2",["ConvNextV2ForImageClassification",$o]],["dinov2",["Dinov2ForImageClassification",Jl]],["resnet",["ResNetForImageClassification",Bl]],["swin",["SwinForImageClassification",Rl]],["segformer",["SegformerForImageClassification",Go]],["efficientnet",["EfficientNetForImageClassification",Fu]],["mobilenet_v1",["MobileNetV1ForImageClassification",Ou]],["mobilenet_v2",["MobileNetV2ForImageClassification",Bu]],["mobilenet_v3",["MobileNetV3ForImageClassification",Ru]],["mobilenet_v4",["MobileNetV4ForImageClassification",ec]]]),Hu=new Map([["detr",["DetrForObjectDetection",$l]],["rt_detr",["RTDetrForObjectDetection",Pl]],["table-transformer",["TableTransformerForObjectDetection",yo]],["yolos",["YolosForObjectDetection",eu]]]),Ku=new Map([["owlvit",["OwlViTForObjectDetection",Ml]],["owlv2",["Owlv2ForObjectDetection",xl]]]),Xu=new Map([["detr",["DetrForSegmentation",ho]],["clipseg",["CLIPSegForImageSegmentation",Pa]]]),ia=new Map([["segformer",["SegformerForSemanticSegmentation",Au]],["sapiens",["SapiensForSemanticSegmentation",ql]]]),Qu=new Map([["detr",["DetrForSegmentation",ho]],["maskformer",["MaskFormerForInstanceSegmentation",Yl]]]),Yu=new Map([["sam",["SamModel",Po]]]),Zu=new Map([["wav2vec2",["Wav2Vec2ForCTC",nu]],["wav2vec2-bert",["Wav2Vec2BertForCTC",Lo]],["unispeech",["UniSpeechForCTC",du]],["unispeech-sat",["UniSpeechSatForCTC",ys]],["wavlm",["WavLMForCTC",_u]],["hubert",["HubertForCTC",qd]]]),Ju=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",iu]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Wd]],["unispeech",["UniSpeechForSequenceClassification",cu]],["unispeech-sat",["UniSpeechSatForSequenceClassification",Bo]],["wavlm",["WavLMForSequenceClassification",gu]],["hubert",["HubertForSequenceClassification",mu]],["audio-spectrogram-transformer",["ASTForAudioClassification",os]]]),ed=new Map([["wavlm",["WavLMForXVector",wu]]]),sa=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",Do]],["wavlm",["WavLMForAudioFrameClassification",Ro]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",su]],["pyannote",["PyAnnoteForAudioFrameClassification",lu]]]),td=new Map([["vitmatte",["VitMatteForImageMatting",gl]]]),oc=new Map([["swin2sr",["Swin2SRForImageSuperResolution",jl]]]),oa=new Map([["dpt",["DPTForDepthEstimation",Vl]],["depth_anything",["DepthAnythingForDepthEstimation",Gl]],["glpn",["GLPNForDepthEstimation",Yn]],["sapiens",["SapiensForDepthEstimation",Hl]],["depth_pro",["DepthProForDepthEstimation",Xl]]]),rd=new Map([["sapiens",["SapiensForNormalEstimation",Nd]]]),nd=new Map([["clip",["CLIPVisionModelWithProjection",xa]],["siglip",["SiglipVisionModel",Ca]]]),id=[[tc,J.EncoderOnly],[Nc,J.EncoderDecoder],[rc,J.DecoderOnly],[nc,J.EncoderOnly],[yn,J.EncoderOnly],[ta,J.Seq2Seq],[ea,J.Seq2Seq],[ra,J.DecoderOnly],[na,J.EncoderOnly],[Gu,J.EncoderOnly],[Pi,J.Vision2Seq],[ic,J.ImageTextToText],[qu,J.EncoderOnly],[Xu,J.EncoderOnly],[Qu,J.EncoderOnly],[ia,J.EncoderOnly],[td,J.EncoderOnly],[oc,J.EncoderOnly],[oa,J.EncoderOnly],[rd,J.EncoderOnly],[Hu,J.EncoderOnly],[Ku,J.EncoderOnly],[Yu,J.MaskGeneration],[Zu,J.EncoderOnly],[Ju,J.EncoderOnly],[Vu,J.Seq2Seq],[Wu,J.EncoderOnly],[ed,J.EncoderOnly],[sa,J.EncoderOnly],[nd,J.EncoderOnly]];for(const[_,T]of id)for(const[q,Ae]of _.values())Z.set(q,T),O.set(Ae,q),H.set(q,Ae);const jc=[["MusicgenForConditionalGeneration",Qo,J.Musicgen],["CLIPTextModelWithProjection",Tn,J.EncoderOnly],["SiglipTextModel",Ea,J.EncoderOnly],["ClapTextModelWithProjection",Ki,J.EncoderOnly],["ClapAudioModelWithProjection",Vo,J.EncoderOnly]];for(const[_,T,q]of jc)Z.set(_,q),O.set(T,_),H.set(_,T);class aa extends Lr{}Se(aa,"MODEL_CLASS_MAPPINGS",id.map(T=>T[0])),Se(aa,"BASE_IF_FAIL",!0);class sd extends Lr{}Se(sd,"MODEL_CLASS_MAPPINGS",[nc]);class od extends Lr{}Se(od,"MODEL_CLASS_MAPPINGS",[yn]);class ac extends Lr{}Se(ac,"MODEL_CLASS_MAPPINGS",[ta]);class ad extends Lr{}Se(ad,"MODEL_CLASS_MAPPINGS",[ea]);class ld extends Lr{}Se(ld,"MODEL_CLASS_MAPPINGS",[Vu]);class ud extends Lr{}Se(ud,"MODEL_CLASS_MAPPINGS",[Wu]);class dd extends Lr{}Se(dd,"MODEL_CLASS_MAPPINGS",[ra]);class cd extends Lr{}Se(cd,"MODEL_CLASS_MAPPINGS",[na]);class lc extends Lr{}Se(lc,"MODEL_CLASS_MAPPINGS",[Gu]);class pd extends Lr{}Se(pd,"MODEL_CLASS_MAPPINGS",[Pi]);class hd extends Lr{}Se(hd,"MODEL_CLASS_MAPPINGS",[qu]);class fd extends Lr{}Se(fd,"MODEL_CLASS_MAPPINGS",[Xu]);class md extends Lr{}Se(md,"MODEL_CLASS_MAPPINGS",[ia]);class _d extends Lr{}Se(_d,"MODEL_CLASS_MAPPINGS",[Qu]);class gd extends Lr{}Se(gd,"MODEL_CLASS_MAPPINGS",[Hu]);class wd extends Lr{}Se(wd,"MODEL_CLASS_MAPPINGS",[Ku]);class yd extends Lr{}Se(yd,"MODEL_CLASS_MAPPINGS",[Yu]);class bd extends Lr{}Se(bd,"MODEL_CLASS_MAPPINGS",[Zu]);class uc extends Lr{}Se(uc,"MODEL_CLASS_MAPPINGS",[Ju]);class Xi extends Lr{}Se(Xi,"MODEL_CLASS_MAPPINGS",[ed]);class la extends Lr{}Se(la,"MODEL_CLASS_MAPPINGS",[sa]);class ua extends Lr{}Se(ua,"MODEL_CLASS_MAPPINGS",[sc]);class da extends Lr{}Se(da,"MODEL_CLASS_MAPPINGS",[td]);class ca extends Lr{}Se(ca,"MODEL_CLASS_MAPPINGS",[oc]);class Md extends Lr{}Se(Md,"MODEL_CLASS_MAPPINGS",[oa]);class vd extends Lr{}Se(vd,"MODEL_CLASS_MAPPINGS",[rd]);class pa extends Lr{}Se(pa,"MODEL_CLASS_MAPPINGS",[nd]);class xd extends Ge{constructor({logits:T,past_key_values:q,encoder_outputs:Ae,decoder_attentions:et=null,cross_attentions:We=null}){super(),this.logits=T,this.past_key_values=q,this.encoder_outputs=Ae,this.decoder_attentions=et,this.cross_attentions=We}}class _r extends Ge{constructor({logits:T}){super(),this.logits=T}}class Td extends Ge{constructor({logits:T,embeddings:q}){super(),this.logits=T,this.embeddings=q}}class on extends Ge{constructor({logits:T}){super(),this.logits=T}}class cn extends Ge{constructor({logits:T}){super(),this.logits=T}}class _n extends Ge{constructor({start_logits:T,end_logits:q}){super(),this.start_logits=T,this.end_logits=q}}class ri extends Ge{constructor({logits:T}){super(),this.logits=T}}class dc extends Ge{constructor({logits:T,past_key_values:q}){super(),this.logits=T,this.past_key_values=q}}class Ed extends Ge{constructor({alphas:T}){super(),this.alphas=T}}class Cd extends Ge{constructor({waveform:T,spectrogram:q}){super(),this.waveform=T,this.spectrogram=q}}},"./src/models/whisper/common_whisper.js":(De,ae,z)=>{z.r(ae),z.d(ae,{WHISPER_LANGUAGE_MAPPING:()=>ue,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>oe,whisper_language_to_code:()=>de});const F=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],ue=new Map(F),oe=new Map([...F.map(([Ee,j])=>[j,Ee]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function de(Ee){Ee=Ee.toLowerCase();let j=oe.get(Ee);if(j===void 0)if(ue.has(Ee))j=Ee;else{const M=Ee.length===2?ue.keys():ue.values();throw new Error(`Language "${Ee}" is not supported. Must be one of: ${JSON.stringify(M)}`)}return j}},"./src/models/whisper/generation_whisper.js":(De,ae,z)=>{z.r(ae),z.d(ae,{WhisperGenerationConfig:()=>ue});var F=z("./src/generation/configuration_utils.js");class ue extends F.GenerationConfig{constructor(){super(...arguments);Se(this,"return_timestamps",null);Se(this,"return_token_timestamps",null);Se(this,"num_frames",null);Se(this,"alignment_heads",null);Se(this,"task",null);Se(this,"language",null);Se(this,"no_timestamps_token_id",null);Se(this,"prompt_ids",null);Se(this,"is_multilingual",null);Se(this,"lang_to_id",null);Se(this,"task_to_id",null);Se(this,"max_initial_timestamp_index",1)}}},"./src/ops/registry.js":(De,ae,z)=>{z.r(ae),z.d(ae,{TensorOpRegistry:()=>de});var F=z("./src/backends/onnx.js"),ue=z("./src/utils/tensor.js");const oe=async(Ee,j,I)=>{const M=await(0,F.createInferenceSession)(new Uint8Array(Ee),j);return async R=>{const Q=Object.fromEntries(Object.entries(R).map(([xe,we])=>[xe,we.ort_tensor])),ne=await M.run(Q);return Array.isArray(I)?I.map(xe=>new ue.Tensor(ne[xe])):new ue.Tensor(ne[I])}};class de{static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=oe([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=oe([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=oe([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=oe([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=oe([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=oe([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}}Se(de,"session_options",{})},"./src/pipelines.js":(De,ae,z)=>{z.r(ae),z.d(ae,{AudioClassificationPipeline:()=>Ve,AutomaticSpeechRecognitionPipeline:()=>_t,DepthEstimationPipeline:()=>Ge,DocumentQuestionAnsweringPipeline:()=>Ze,FeatureExtractionPipeline:()=>$e,FillMaskPipeline:()=>J,ImageClassificationPipeline:()=>wt,ImageFeatureExtractionPipeline:()=>Fe,ImageSegmentationPipeline:()=>Te,ImageToImagePipeline:()=>ce,ImageToTextPipeline:()=>ct,ObjectDetectionPipeline:()=>be,Pipeline:()=>we,QuestionAnsweringPipeline:()=>Me,SummarizationPipeline:()=>H,Text2TextGenerationPipeline:()=>Z,TextClassificationPipeline:()=>N,TextGenerationPipeline:()=>P,TextToAudioPipeline:()=>gt,TokenClassificationPipeline:()=>ie,TranslationPipeline:()=>O,ZeroShotAudioClassificationPipeline:()=>Ne,ZeroShotClassificationPipeline:()=>ye,ZeroShotImageClassificationPipeline:()=>K,ZeroShotObjectDetectionPipeline:()=>Ie,pipeline:()=>yt});var F=z("./src/tokenizers.js"),ue=z("./src/models.js"),oe=z("./src/processors.js"),de=z("./src/utils/generic.js"),Ee=z("./src/utils/core.js"),j=z("./src/utils/maths.js"),I=z("./src/utils/audio.js"),M=z("./src/utils/tensor.js"),R=z("./src/utils/image.js");async function Q(st){return Array.isArray(st)||(st=[st]),await Promise.all(st.map(re=>R.RawImage.read(re)))}async function ne(st,re){return Array.isArray(st)||(st=[st]),await Promise.all(st.map(ze=>typeof ze=="string"||ze instanceof URL?(0,I.read_audio)(ze,re):ze instanceof Float64Array?new Float32Array(ze):ze))}function xe(st,re){re&&(st=st.map(Ke=>Ke|0));const[ze,Je,lt,Qe]=st;return{xmin:ze,ymin:Je,xmax:lt,ymax:Qe}}class we extends de.Callable{constructor({task:re,model:ze,tokenizer:Je=null,processor:lt=null}){super(),this.task=re,this.model=ze,this.tokenizer=Je,this.processor=lt}async dispose(){await this.model.dispose()}}class N extends we{constructor(re){super(re)}async _call(re,{top_k:ze=1}={}){const Je=this.tokenizer(re,{padding:!0,truncation:!0}),lt=await this.model(Je),Qe=this.model.config.problem_type==="multi_label_classification"?bt=>bt.sigmoid():bt=>new M.Tensor("float32",(0,j.softmax)(bt.data),bt.dims),Ke=this.model.config.id2label,ft=[];for(const bt of lt.logits){const Ft=Qe(bt),Pt=await(0,M.topk)(Ft,ze),E=Pt[0].tolist(),A=Pt[1].tolist().map((ee,ve)=>({label:Ke?Ke[ee]:`LABEL_${ee}`,score:E[ve]}));ze===1?ft.push(...A):ft.push(A)}return Array.isArray(re)||ze===1?ft:ft[0]}}class ie extends we{constructor(re){super(re)}async _call(re,{ignore_labels:ze=["O"]}={}){const Je=Array.isArray(re),lt=this.tokenizer(Je?re:[re],{padding:!0,truncation:!0}),Ke=(await this.model(lt)).logits,ft=this.model.config.id2label,bt=[];for(let Ft=0;Ft<Ke.dims[0];++Ft){const Pt=lt.input_ids[Ft],E=Ke[Ft],Y=[];for(let A=0;A<E.dims[0];++A){const ee=E[A],ve=(0,j.max)(ee.data)[1],ot=ft?ft[ve]:`LABEL_${ve}`;if(ze.includes(ot))continue;const at=this.tokenizer.decode([Pt[A].item()],{skip_special_tokens:!0});if(at==="")continue;const Ut=(0,j.softmax)(ee.data);Y.push({entity:ot,score:Ut[ve],index:A,word:at})}bt.push(Y)}return Je?bt:bt[0]}}class Me extends we{constructor(re){super(re)}async _call(re,ze,{top_k:Je=1}={}){const lt=this.tokenizer(re,{text_pair:ze,padding:!0,truncation:!0}),{start_logits:Qe,end_logits:Ke}=await this.model(lt),ft=lt.input_ids.tolist(),bt=lt.attention_mask.tolist(),Ft=this.tokenizer.all_special_ids,Pt=[];for(let E=0;E<Qe.dims[0];++E){const Y=ft[E],A=Y.findIndex(Mt=>Mt==this.tokenizer.sep_token_id);bt[E].map((Mt,kt)=>Mt==1&&(kt===0||kt>A&&Ft.findIndex(x=>x==Y[kt])===-1));const ee=Qe[E].tolist(),ve=Ke[E].tolist();for(let Mt=1;Mt<ee.length;++Mt)(bt[E]==0||Mt<=A||Ft.findIndex(kt=>kt==Y[Mt])!==-1)&&(ee[Mt]=-1/0,ve[Mt]=-1/0);const ot=(0,j.softmax)(ee).map((Mt,kt)=>[Mt,kt]),at=(0,j.softmax)(ve).map((Mt,kt)=>[Mt,kt]);ot[0][0]=0,at[0][0]=0;const Ut=(0,Ee.product)(ot,at).filter(Mt=>Mt[0][1]<=Mt[1][1]).map(Mt=>[Mt[0][1],Mt[1][1],Mt[0][0]*Mt[1][0]]).sort((Mt,kt)=>kt[2]-Mt[2]);for(let Mt=0;Mt<Math.min(Ut.length,Je);++Mt){const[kt,x,d]=Ut[Mt],f=Y.slice(kt,x+1),V=this.tokenizer.decode(f,{skip_special_tokens:!0});Pt.push({answer:V,score:d})}}return Je===1?Pt[0]:Pt}}class J extends we{constructor(re){super(re)}async _call(re,{top_k:ze=5}={}){const Je=this.tokenizer(re,{padding:!0,truncation:!0}),{logits:lt}=await this.model(Je),Qe=[],Ke=Je.input_ids.tolist();for(let ft=0;ft<Ke.length;++ft){const bt=Ke[ft],Ft=bt.findIndex(ee=>ee==this.tokenizer.mask_token_id);if(Ft===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const Pt=lt[ft][Ft],E=await(0,M.topk)(new M.Tensor("float32",(0,j.softmax)(Pt.data),Pt.dims),ze),Y=E[0].tolist(),A=E[1].tolist();Qe.push(A.map((ee,ve)=>{const ot=bt.slice();return ot[Ft]=ee,{score:Y[ve],token:Number(ee),token_str:this.tokenizer.model.vocab[ee],sequence:this.tokenizer.decode(ot,{skip_special_tokens:!0})}}))}return Array.isArray(re)?Qe:Qe[0]}}class Z extends we{constructor(ze){super(ze);Se(this,"_key","generated_text")}async _call(ze,Je={}){Array.isArray(ze)||(ze=[ze]),this.model.config.prefix&&(ze=ze.map(Ft=>this.model.config.prefix+Ft));const lt=this.model.config.task_specific_params;lt&&lt[this.task]&&lt[this.task].prefix&&(ze=ze.map(Ft=>lt[this.task].prefix+Ft));const Qe=this.tokenizer,Ke={padding:!0,truncation:!0};let ft;this instanceof O&&"_build_translation_inputs"in Qe?ft=Qe._build_translation_inputs(ze,Ke,Je):ft=Qe(ze,Ke);const bt=await this.model.generate({...ft,...Je});return Qe.batch_decode(bt,{skip_special_tokens:!0}).map(Ft=>({[this._key]:Ft}))}}class H extends Z{constructor(ze){super(ze);Se(this,"_key","summary_text")}}class O extends Z{constructor(ze){super(ze);Se(this,"_key","translation_text")}}function G(st){return Array.isArray(st)&&st.every(re=>"role"in re&&"content"in re)}class P extends we{constructor(re){super(re)}async _call(re,ze={}){let Je=!1,lt=!1,Qe;if(typeof re=="string")Qe=re=[re];else if(Array.isArray(re)&&re.every(A=>typeof A=="string"))Je=!0,Qe=re;else{if(G(re))re=[re];else if(Array.isArray(re)&&re.every(G))Je=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");lt=!0,Qe=re.map(A=>this.tokenizer.apply_chat_template(A,{tokenize:!1,add_generation_prompt:!0}))}const Ke=ze.add_special_tokens??!1,ft=lt?!1:ze.return_full_text??!0;this.tokenizer.padding_side="left";const bt=this.tokenizer(Qe,{add_special_tokens:Ke,padding:!0,truncation:!0}),Ft=await this.model.generate({...bt,...ze}),Pt=this.tokenizer.batch_decode(Ft,{skip_special_tokens:!0});let E;!ft&&bt.input_ids.dims.at(-1)>0&&(E=this.tokenizer.batch_decode(bt.input_ids,{skip_special_tokens:!0}).map(A=>A.length));const Y=Array.from({length:re.length},A=>[]);for(let A=0;A<Pt.length;++A){const ee=Math.floor(A/Ft.dims[0]*re.length);E&&(Pt[A]=Pt[A].slice(E[ee])),Y[ee].push({generated_text:lt?[...re[ee],{role:"assistant",content:Pt[A]}]:Pt[A]})}return!Je&&Y.length===1?Y[0]:Y}}class ye extends we{constructor(re){super(re),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([ze,Je])=>[ze.toLowerCase(),Je])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(re,ze,{hypothesis_template:Je="This example is {}.",multi_label:lt=!1}={}){const Qe=Array.isArray(re);Qe||(re=[re]),Array.isArray(ze)||(ze=[ze]);const Ke=ze.map(Ft=>Je.replace("{}",Ft)),ft=lt||ze.length===1,bt=[];for(const Ft of re){const Pt=[];for(const A of Ke){const ee=this.tokenizer(Ft,{text_pair:A,padding:!0,truncation:!0}),ve=await this.model(ee);ft?Pt.push([ve.logits.data[this.contradiction_id],ve.logits.data[this.entailment_id]]):Pt.push(ve.logits.data[this.entailment_id])}const Y=(ft?Pt.map(A=>(0,j.softmax)(A)[1]):(0,j.softmax)(Pt)).map((A,ee)=>[A,ee]).sort((A,ee)=>ee[0]-A[0]);bt.push({sequence:Ft,labels:Y.map(A=>ze[A[1]]),scores:Y.map(A=>A[0])})}return Qe?bt:bt[0]}}class $e extends we{constructor(re){super(re)}async _call(re,{pooling:ze="none",normalize:Je=!1,quantize:lt=!1,precision:Qe="binary"}={}){const Ke=this.tokenizer(re,{padding:!0,truncation:!0}),ft=await this.model(Ke);let bt=ft.last_hidden_state??ft.logits??ft.token_embeddings;if(ze!=="none")if(ze==="mean")bt=(0,M.mean_pooling)(bt,Ke.attention_mask);else if(ze==="cls")bt=bt.slice(null,0);else throw Error(`Pooling method '${ze}' not supported.`);return Je&&(bt=bt.normalize(2,-1)),lt&&(bt=(0,M.quantize_embeddings)(bt,Qe)),bt}}class Fe extends we{constructor(re){super(re)}async _call(re,{pool:ze=null}={}){const Je=await Q(re),{pixel_values:lt}=await this.processor(Je),Qe=await this.model({pixel_values:lt});let Ke;if(ze){if(!("pooler_output"in Qe))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");Ke=Qe.pooler_output}else Ke=Qe.last_hidden_state??Qe.logits??Qe.image_embeds;return Ke}}class Ve extends we{constructor(re){super(re)}async _call(re,{top_k:ze=5}={}){const Je=this.processor.feature_extractor.config.sampling_rate,lt=await ne(re,Je),Qe=this.model.config.id2label,Ke=[];for(const ft of lt){const bt=await this.processor(ft),Pt=(await this.model(bt)).logits[0],E=await(0,M.topk)(new M.Tensor("float32",(0,j.softmax)(Pt.data),Pt.dims),ze),Y=E[0].tolist(),ee=E[1].tolist().map((ve,ot)=>({label:Qe?Qe[ve]:`LABEL_${ve}`,score:Y[ot]}));Ke.push(ee)}return Array.isArray(re)?Ke:Ke[0]}}class Ne extends we{constructor(re){super(re)}async _call(re,ze,{hypothesis_template:Je="This is a sound of {}."}={}){const lt=!Array.isArray(re);lt&&(re=[re]);const Qe=ze.map(Pt=>Je.replace("{}",Pt)),Ke=this.tokenizer(Qe,{padding:!0,truncation:!0}),ft=this.processor.feature_extractor.config.sampling_rate,bt=await ne(re,ft),Ft=[];for(const Pt of bt){const E=await this.processor(Pt),Y=await this.model({...Ke,...E}),A=(0,j.softmax)(Y.logits_per_audio.data);Ft.push([...A].map((ee,ve)=>({score:ee,label:ze[ve]})))}return lt?Ft[0]:Ft}}class _t extends we{constructor(re){super(re)}async _call(re,ze={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(re,ze);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(re,ze);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(re,ze){ze.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),ze.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const Je=!Array.isArray(re);Je&&(re=[re]);const lt=this.processor.feature_extractor.config.sampling_rate,Qe=await ne(re,lt),Ke=[];for(const ft of Qe){const bt=await this.processor(ft),Pt=(await this.model(bt)).logits[0],E=[];for(const A of Pt)E.push((0,j.max)(A.data)[1]);const Y=this.tokenizer.decode(E);Ke.push({text:Y})}return Je?Ke[0]:Ke}async _call_whisper(re,ze){const Je=ze.return_timestamps??!1,lt=ze.chunk_length_s??0,Qe=ze.force_full_sequences??!1;let Ke=ze.stride_length_s??null;const ft={...ze};Je==="word"&&(ft.return_token_timestamps=!0,ft.return_timestamps=!1);const bt=!Array.isArray(re);bt&&(re=[re]);const Ft=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,Pt=this.processor.feature_extractor.config.hop_length,E=this.processor.feature_extractor.config.sampling_rate,Y=await ne(re,E),A=[];for(const ee of Y){let ve=[];if(lt>0){if(Ke===null)Ke=lt/6;else if(lt<=Ke)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const Ut=E*lt,Mt=E*Ke,kt=Ut-2*Mt;let x=0;for(;;){const d=x+Ut,f=ee.subarray(x,d),V=await this.processor(f),fe=x===0,Pe=d>=ee.length;if(ve.push({stride:[f.length,fe?0:Mt,Pe?0:Mt],input_features:V.input_features,is_last:Pe}),Pe)break;x+=kt}}else ve=[{stride:[ee.length,0,0],input_features:(await this.processor(ee)).input_features,is_last:!0}];for(const Ut of ve){ft.num_frames=Math.floor(Ut.stride[0]/Pt);const Mt=await this.model.generate({inputs:Ut.input_features,...ft});Je==="word"?(Ut.tokens=Mt.sequences.tolist()[0],Ut.token_timestamps=Mt.token_timestamps.tolist()[0].map(kt=>(0,j.round)(kt,2))):Ut.tokens=Mt[0].tolist(),Ut.stride=Ut.stride.map(kt=>kt/E)}const[ot,at]=this.tokenizer._decode_asr(ve,{time_precision:Ft,return_timestamps:Je,force_full_sequences:Qe});A.push({text:ot,...at})}return bt?A[0]:A}}class ct extends we{constructor(re){super(re)}async _call(re,ze={}){const Je=Array.isArray(re),lt=await Q(re),{pixel_values:Qe}=await this.processor(lt),Ke=[];for(const ft of Qe){ft.dims=[1,...ft.dims];const bt=await this.model.generate({inputs:ft,...ze}),Ft=this.tokenizer.batch_decode(bt,{skip_special_tokens:!0}).map(Pt=>({generated_text:Pt.trim()}));Ke.push(Ft)}return Je?Ke:Ke[0]}}class wt extends we{constructor(re){super(re)}async _call(re,{top_k:ze=5}={}){const Je=await Q(re),{pixel_values:lt}=await this.processor(Je),Qe=await this.model({pixel_values:lt}),Ke=this.model.config.id2label,ft=[];for(const bt of Qe.logits){const Ft=await(0,M.topk)(new M.Tensor("float32",(0,j.softmax)(bt.data),bt.dims),ze),Pt=Ft[0].tolist(),Y=Ft[1].tolist().map((A,ee)=>({label:Ke?Ke[A]:`LABEL_${A}`,score:Pt[ee]}));ft.push(Y)}return Array.isArray(re)?ft:ft[0]}}class Te extends we{constructor(re){super(re),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(re,{threshold:ze=.5,mask_threshold:Je=.5,overlap_mask_area_threshold:lt=.8,label_ids_to_fuse:Qe=null,target_sizes:Ke=null,subtask:ft=null}={}){if(Array.isArray(re)&&re.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const Ft=await Q(re),Pt=Ft.map(at=>[at.height,at.width]),{pixel_values:E,pixel_mask:Y}=await this.processor(Ft),A=await this.model({pixel_values:E,pixel_mask:Y});let ee=null;if(ft!==null)ee=this.subtasks_mapping[ft];else for(let[at,Ut]of Object.entries(this.subtasks_mapping))if(Ut in this.processor.feature_extractor){ee=this.processor.feature_extractor[Ut].bind(this.processor.feature_extractor),ft=at;break}const ve=this.model.config.id2label,ot=[];if(ft==="panoptic"||ft==="instance"){const at=ee(A,ze,Je,lt,Qe,Ke??Pt)[0],Ut=at.segmentation;for(const Mt of at.segments_info){const kt=new Uint8ClampedArray(Ut.data.length);for(let d=0;d<Ut.data.length;++d)Ut.data[d]===Mt.id&&(kt[d]=255);const x=new R.RawImage(kt,Ut.dims[1],Ut.dims[0],1);ot.push({score:Mt.score,label:ve[Mt.label_id],mask:x})}}else if(ft==="semantic"){const{segmentation:at,labels:Ut}=ee(A,Ke??Pt)[0];for(const Mt of Ut){const kt=new Uint8ClampedArray(at.data.length);for(let d=0;d<at.data.length;++d)at.data[d]===Mt&&(kt[d]=255);const x=new R.RawImage(kt,at.dims[1],at.dims[0],1);ot.push({score:null,label:ve[Mt],mask:x})}}else throw Error(`Subtask ${ft} not supported.`);return ot}}class K extends we{constructor(re){super(re)}async _call(re,ze,{hypothesis_template:Je="This is a photo of {}"}={}){const lt=Array.isArray(re),Qe=await Q(re),Ke=ze.map(Y=>Je.replace("{}",Y)),ft=this.tokenizer(Ke,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:bt}=await this.processor(Qe),Ft=await this.model({...ft,pixel_values:bt}),Pt=this.model.config.model_type==="siglip"?Y=>Y.sigmoid().data:Y=>(0,j.softmax)(Y.data),E=[];for(const Y of Ft.logits_per_image){const ee=[...Pt(Y)].map((ve,ot)=>({score:ve,label:ze[ot]}));ee.sort((ve,ot)=>ot.score-ve.score),E.push(ee)}return lt?E:E[0]}}class be extends we{constructor(re){super(re)}async _call(re,{threshold:ze=.9,percentage:Je=!1}={}){const lt=Array.isArray(re);if(lt&&re.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const Qe=await Q(re),Ke=Je?null:Qe.map(A=>[A.height,A.width]),{pixel_values:ft,pixel_mask:bt}=await this.processor(Qe),Ft=await this.model({pixel_values:ft,pixel_mask:bt}),Pt=this.processor.feature_extractor.post_process_object_detection(Ft,ze,Ke),E=this.model.config.id2label,Y=Pt.map(A=>A.boxes.map((ee,ve)=>({score:A.scores[ve],label:E[A.classes[ve]],box:xe(ee,!Je)})));return lt?Y:Y[0]}}class Ie extends we{constructor(re){super(re)}async _call(re,ze,{threshold:Je=.1,top_k:lt=null,percentage:Qe=!1}={}){const Ke=Array.isArray(re),ft=await Q(re),bt=this.tokenizer(ze,{padding:!0,truncation:!0}),Ft=await this.processor(ft),Pt=[];for(let E=0;E<ft.length;++E){const Y=ft[E],A=Qe?null:[[Y.height,Y.width]],ee=Ft.pixel_values[E].unsqueeze_(0),ve=await this.model({...bt,pixel_values:ee}),ot=this.processor.feature_extractor.post_process_object_detection(ve,Je,A,!0)[0];let at=ot.boxes.map((Ut,Mt)=>({score:ot.scores[Mt],label:ze[ot.classes[Mt]],box:xe(Ut,!Qe)})).sort((Ut,Mt)=>Mt.score-Ut.score);lt!==null&&(at=at.slice(0,lt)),Pt.push(at)}return Ke?Pt:Pt[0]}}class Ze extends we{constructor(re){super(re)}async _call(re,ze,Je={}){const lt=(await Q(re))[0],{pixel_values:Qe}=await this.processor(lt),Ke=`<s_docvqa><s_question>${ze}</s_question><s_answer>`,ft=this.tokenizer(Ke,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,bt=await this.model.generate({inputs:Qe,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:ft,...Je}),Pt=this.tokenizer.batch_decode(bt)[0].match(/<s_answer>(.*?)<\/s_answer>/);let E=null;return Pt&&Pt.length>=2&&(E=Pt[1].trim()),[{answer:E}]}}class gt extends we{constructor(ze){super(ze);Se(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=ze.vocoder??null}async _call(ze,{speaker_embeddings:Je=null}={}){return this.processor?this._call_text_to_spectrogram(ze,{speaker_embeddings:Je}):this._call_text_to_waveform(ze)}async _call_text_to_waveform(ze){const Je=this.tokenizer(ze,{padding:!0,truncation:!0}),{waveform:lt}=await this.model(Je),Qe=this.model.config.sampling_rate;return{audio:lt.data,sampling_rate:Qe}}async _call_text_to_spectrogram(ze,{speaker_embeddings:Je}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await ue.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof Je=="string"||Je instanceof URL)&&(Je=new Float32Array(await(await fetch(Je)).arrayBuffer())),Je instanceof Float32Array)Je=new M.Tensor("float32",Je,[1,Je.length]);else if(!(Je instanceof M.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:lt}=this.tokenizer(ze,{padding:!0,truncation:!0}),{waveform:Qe}=await this.model.generate_speech(lt,Je,{vocoder:this.vocoder}),Ke=this.processor.feature_extractor.config.sampling_rate;return{audio:Qe.data,sampling_rate:Ke}}}class ce extends we{constructor(re){super(re)}async _call(re){const ze=await Q(re),Je=await this.processor(ze),lt=await this.model(Je),Qe=[];for(const Ke of lt.reconstruction){const ft=Ke.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");Qe.push(R.RawImage.fromTensor(ft))}return Qe.length>1?Qe:Qe[0]}}class Ge extends we{constructor(re){super(re)}async _call(re){const ze=await Q(re),Je=await this.processor(ze),{predicted_depth:lt}=await this.model(Je),Qe=[];for(let Ke=0;Ke<ze.length;++Ke){const ft=(0,M.interpolate)(lt[Ke],ze[Ke].size.reverse(),"bilinear",!1),bt=ft.mul_(255/(0,j.max)(ft.data)[0]).to("uint8");Qe.push({predicted_depth:lt[Ke],depth:R.RawImage.fromTensor(bt)})}return Qe.length>1?Qe:Qe[0]}}const pt=Object.freeze({"text-classification":{tokenizer:F.AutoTokenizer,pipeline:N,model:ue.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:F.AutoTokenizer,pipeline:ie,model:ue.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:F.AutoTokenizer,pipeline:Me,model:ue.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:F.AutoTokenizer,pipeline:J,model:ue.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:F.AutoTokenizer,pipeline:H,model:ue.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:F.AutoTokenizer,pipeline:O,model:ue.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:F.AutoTokenizer,pipeline:Z,model:ue.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:F.AutoTokenizer,pipeline:P,model:ue.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:F.AutoTokenizer,pipeline:ye,model:ue.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:Ve,model:ue.AutoModelForAudioClassification,processor:oe.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:F.AutoTokenizer,pipeline:Ne,model:ue.AutoModel,processor:oe.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:F.AutoTokenizer,pipeline:_t,model:[ue.AutoModelForSpeechSeq2Seq,ue.AutoModelForCTC],processor:oe.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:F.AutoTokenizer,pipeline:gt,model:[ue.AutoModelForTextToWaveform,ue.AutoModelForTextToSpectrogram],processor:[oe.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:F.AutoTokenizer,pipeline:ct,model:ue.AutoModelForVision2Seq,processor:oe.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:wt,model:ue.AutoModelForImageClassification,processor:oe.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:Te,model:[ue.AutoModelForImageSegmentation,ue.AutoModelForSemanticSegmentation,ue.AutoModelForUniversalSegmentation],processor:oe.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:F.AutoTokenizer,pipeline:K,model:ue.AutoModel,processor:oe.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:be,model:ue.AutoModelForObjectDetection,processor:oe.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:F.AutoTokenizer,pipeline:Ie,model:ue.AutoModelForZeroShotObjectDetection,processor:oe.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:F.AutoTokenizer,pipeline:Ze,model:ue.AutoModelForDocumentQuestionAnswering,processor:oe.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:ce,model:ue.AutoModelForImageToImage,processor:oe.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:Ge,model:ue.AutoModelForDepthEstimation,processor:oe.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:F.AutoTokenizer,pipeline:$e,model:ue.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:oe.AutoProcessor,pipeline:Fe,model:[ue.AutoModelForImageFeatureExtraction,ue.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),qe=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function yt(st,re=null,{progress_callback:ze=null,config:Je=null,cache_dir:lt=null,local_files_only:Qe=!1,revision:Ke="main",device:ft=null,dtype:bt=null,model_file_name:Ft=null,session_options:Pt={}}={}){st=qe[st]??st;const E=pt[st.split("_",1)[0]];if(!E)throw Error(`Unsupported pipeline: ${st}. Must be one of [${Object.keys(pt)}]`);re||(re=E.default.model,console.log(`No model specified. Using default model: "${re}".`));const Y={progress_callback:ze,config:Je,cache_dir:lt,local_files_only:Qe,revision:Ke,device:ft,dtype:bt,model_file_name:Ft,session_options:Pt},A=new Map([["tokenizer",E.tokenizer],["model",E.model],["processor",E.processor]]),ee=await $t(A,re,Y);ee.task=st,(0,Ee.dispatchCallback)(ze,{status:"ready",task:st,model:re});const ve=E.pipeline;return new ve(ee)}async function $t(st,re,ze){const Je=Object.create(null),lt=[];for(const[Qe,Ke]of st.entries()){if(!Ke)continue;let ft;Array.isArray(Ke)?ft=new Promise(async(bt,Ft)=>{var E,Y;let Pt;for(const A of Ke){if(A===null){bt(null);return}try{bt(await A.from_pretrained(re,ze));return}catch(ee){if((E=ee.message)!=null&&E.includes("Unsupported model type"))Pt=ee;else if((Y=ee.message)!=null&&Y.includes("Could not locate file"))Pt=ee;else{Ft(ee);return}}}Ft(Pt)}):ft=Ke.from_pretrained(re,ze),Je[Qe]=ft,lt.push(ft)}await Promise.all(lt);for(const[Qe,Ke]of Object.entries(Je))Je[Qe]=await Ke;return Je}},"./src/processors.js":(De,ae,z)=>{z.r(ae),z.d(ae,{ASTFeatureExtractor:()=>ve,AutoProcessor:()=>sr,BeitFeatureExtractor:()=>ze,BitImageProcessor:()=>$e,CLIPFeatureExtractor:()=>Ve,CLIPImageProcessor:()=>Ne,ChineseCLIPFeatureExtractor:()=>_t,ClapFeatureExtractor:()=>ot,ConvNextFeatureExtractor:()=>wt,ConvNextImageProcessor:()=>Te,DPTFeatureExtractor:()=>P,DPTImageProcessor:()=>ye,DeiTFeatureExtractor:()=>re,DetrFeatureExtractor:()=>Ke,DonutFeatureExtractor:()=>Je,DonutImageProcessor:()=>lt,EfficientNetImageProcessor:()=>Ie,FeatureExtractor:()=>J,Florence2Processor:()=>Xe,GLPNFeatureExtractor:()=>Fe,ImageFeatureExtractor:()=>Z,MaskFormerFeatureExtractor:()=>ft,MobileNetV1FeatureExtractor:()=>Ze,MobileNetV2FeatureExtractor:()=>gt,MobileNetV3FeatureExtractor:()=>ce,MobileNetV4FeatureExtractor:()=>Ge,MobileViTFeatureExtractor:()=>pt,MobileViTImageProcessor:()=>qe,NougatImageProcessor:()=>Qe,OwlViTFeatureExtractor:()=>yt,OwlViTProcessor:()=>Pe,Owlv2ImageProcessor:()=>$t,Processor:()=>kt,PvtImageProcessor:()=>G,PyAnnoteFeatureExtractor:()=>at,PyAnnoteProcessor:()=>V,RTDetrImageProcessor:()=>st,SamImageProcessor:()=>Ft,SamProcessor:()=>x,SapiensFeatureExtractor:()=>H,SeamlessM4TFeatureExtractor:()=>ee,SegformerFeatureExtractor:()=>O,SiglipImageProcessor:()=>ct,SpeechT5FeatureExtractor:()=>Mt,SpeechT5Processor:()=>fe,Swin2SRImageProcessor:()=>Pt,ViTFeatureExtractor:()=>K,ViTImageProcessor:()=>be,VitMatteImageProcessor:()=>E,Wav2Vec2FeatureExtractor:()=>A,Wav2Vec2ProcessorWithLM:()=>f,WeSpeakerFeatureExtractor:()=>Ut,WhisperFeatureExtractor:()=>Y,WhisperProcessor:()=>d,YolosFeatureExtractor:()=>bt});var F=z("./src/utils/generic.js"),ue=z("./src/utils/core.js"),oe=z("./src/utils/hub.js"),de=z("./src/utils/maths.js"),Ee=z("./src/utils/tensor.js");z("./src/utils/image.js");var j=z("./src/utils/audio.js");function I([tt,U,ge,ke]){return[tt-ge/2,U-ke/2,tt+ge/2,U+ke/2]}function M(tt,U=.5,ge=null,ke=!1){const Le=tt.logits,Ye=tt.pred_boxes,[ht,St,Et]=Le.dims;if(ge!==null&&ge.length!==ht)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Ot=[];for(let Tt=0;Tt<ht;++Tt){let Vt=ge!==null?ge[Tt]:null,qt={boxes:[],classes:[],scores:[]},Nt=Le[Tt],je=Ye[Tt];for(let Ue=0;Ue<St;++Ue){let vt=Nt[Ue],Kt=[],dr;if(ke){dr=vt.sigmoid().data;for(let Er=0;Er<dr.length;++Er)dr[Er]>U&&Kt.push(Er)}else{let Er=(0,de.max)(vt.data)[1];if(Er===Et-1||(dr=(0,de.softmax)(vt.data),dr[Er]<U))continue;Kt.push(Er)}for(const Er of Kt){let Vr=je[Ue].data;Vr=I(Vr),Vt!==null&&(Vr=Vr.map((br,Ir)=>br*Vt[(Ir+1)%2])),qt.boxes.push(Vr),qt.classes.push(Er),qt.scores.push(dr[Er])}}Ot.push(qt)}return Ot}function R(tt,U=null){const ge=tt.logits,ke=ge.dims[0];if(U!==null&&U.length!==ke)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const Le=[];for(let Ye=0;Ye<ke;++Ye){const ht=U!==null?U[Ye]:null;let St=ge[Ye];ht!==null&&(St=(0,Ee.interpolate)(St,ht,"bilinear",!1));const[Et,Ot]=ht??St.dims.slice(-2),Tt=new Ee.Tensor("int32",new Int32Array(Et*Ot),[Et,Ot]),Vt=St[0].data,qt=Tt.data;for(let Ue=1;Ue<St.dims[0];++Ue){const vt=St[Ue].data;for(let Kt=0;Kt<vt.length;++Kt)vt[Kt]>Vt[Kt]&&(Vt[Kt]=vt[Kt],qt[Kt]=Ue)}const Nt=new Array(St.dims[0]);for(let Ue=0;Ue<qt.length;++Ue){const vt=qt[Ue];Nt[vt]=vt}const je=Nt.filter(Ue=>Ue!==void 0);Le.push({segmentation:Tt,labels:je})}return Le}function Q(tt,U,ge,ke){const Le=[],Ye=[],ht=[];for(let St=0;St<tt.dims[0];++St){const Et=tt[St],Ot=U[St],Tt=(0,de.max)(Et.data)[1];if(Tt===ke)continue;const qt=(0,de.softmax)(Et.data)[Tt];qt>ge&&(Le.push(Ot),Ye.push(qt),ht.push(Tt))}return[Le,Ye,ht]}function ne(tt,U,ge,ke=.5,Le=.8){const Ye=[];let ht=0,St=0;const Et=U[ge].data;for(let Tt=0;Tt<tt.length;++Tt)tt[Tt]===ge&&(Ye.push(Tt),++ht),Et[Tt]>=ke&&++St;let Ot=ht>0&&St>0;return Ot&&(Ot=ht/St>Le),[Ot,Ye]}function xe(tt,U,ge,ke,Le,Ye=null,ht=null){const[St,Et]=ht??tt[0].dims,Ot=new Ee.Tensor("int32",new Int32Array(St*Et),[St,Et]),Tt=[];if(ht!==null)for(let Ue=0;Ue<tt.length;++Ue)tt[Ue]=(0,Ee.interpolate)(tt[Ue],ht,"bilinear",!1);const Vt=new Int32Array(tt[0].data.length),qt=new Float32Array(tt[0].data.length);for(let Ue=0;Ue<tt.length;++Ue){let vt=U[Ue];const Kt=tt[Ue].data;for(let dr=0;dr<Kt.length;++dr)Kt[dr]*=vt,Kt[dr]>qt[dr]&&(Vt[dr]=Ue,qt[dr]=Kt[dr])}let Nt=0;const je=Ot.data;for(let Ue=0;Ue<ge.length;++Ue){const vt=ge[Ue],[Kt,dr]=ne(Vt,tt,Ue,ke,Le);if(Kt){++Nt;for(const Er of dr)je[Er]=Nt;Tt.push({id:Nt,label_id:vt,score:U[Ue]})}}return[Ot,Tt]}function we(tt,U=.5,ge=.5,ke=.8,Le=null,Ye=null){Le===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),Le=new Set);const ht=tt.class_queries_logits??tt.logits,Et=(tt.masks_queries_logits??tt.pred_masks).sigmoid();let[Ot,Tt,Vt]=ht.dims;if(Vt-=1,Ye!==null&&Ye.length!==Ot)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let qt=[];for(let Nt=0;Nt<Ot;++Nt){let je=Ye!==null?Ye[Nt]:null,Ue=ht[Nt],vt=Et[Nt],[Kt,dr,Er]=Q(Ue,vt,U,Vt);if(Er.length===0){let[Ir,vr]=je??vt.dims.slice(-2),Cn=new Ee.Tensor("int32",new Int32Array(Ir*vr).fill(-1),[Ir,vr]);qt.push({segmentation:Cn,segments_info:[]});continue}let[Vr,br]=xe(Kt,dr,Er,ge,ke,Le,je);qt.push({segmentation:Vr,segments_info:br})}return qt}function N(tt,U){var ge;if(!(tt instanceof Float32Array||tt instanceof Float64Array))throw new Error(`${U} expects input to be a Float32Array or a Float64Array, but got ${((ge=tt==null?void 0:tt.constructor)==null?void 0:ge.name)??typeof tt} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}function ie(tt,U,ge=0,ke=null){const Le=tt/U;let Ye=(0,de.bankers_round)(Le)*U;return ke!==null&&Ye>ke&&(Ye=Math.floor(Le)*U),Ye<ge&&(Ye=Math.ceil(Le)*U),Ye}function Me([tt,U],ge){return[Math.max(Math.floor(tt/ge),1)*ge,Math.max(Math.floor(U/ge),1)*ge]}class J extends F.Callable{constructor(U){super(),this.config=U}}class Z extends J{constructor(U){super(U),this.image_mean=this.config.image_mean??this.config.mean,this.image_std=this.config.image_std??this.config.std,this.resample=this.config.resample??2,this.do_rescale=this.config.do_rescale??!0,this.rescale_factor=this.config.rescale_factor??1/255,this.do_normalize=this.config.do_normalize,this.do_resize=this.config.do_resize,this.do_thumbnail=this.config.do_thumbnail,this.size=this.config.size,this.size_divisibility=this.config.size_divisibility??this.config.size_divisor,this.do_center_crop=this.config.do_center_crop,this.crop_size=this.config.crop_size,this.do_convert_rgb=this.config.do_convert_rgb??!0,this.do_crop_margin=this.config.do_crop_margin,this.pad_size=this.config.pad_size,this.do_pad=this.config.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=this.config.do_flip_channel_order??!1}async thumbnail(U,ge,ke=2){const Le=U.height,Ye=U.width,ht=ge.height,St=ge.width;let Et=Math.min(Le,ht),Ot=Math.min(Ye,St);return Et===Le&&Ot===Ye?U:(Le>Ye?Ot=Math.floor(Ye*Et/Le):Ye>Le&&(Et=Math.floor(Le*Ot/Ye)),await U.resize(Ot,Et,{resample:ke}))}async crop_margin(U,ge=200){const ke=U.clone().grayscale(),Le=(0,de.min)(ke.data)[0],ht=(0,de.max)(ke.data)[0]-Le;if(ht===0)return U;const St=ge/255;let Et=ke.width,Ot=ke.height,Tt=0,Vt=0;const qt=ke.data;for(let Nt=0;Nt<ke.height;++Nt){const je=Nt*ke.width;for(let Ue=0;Ue<ke.width;++Ue)(qt[je+Ue]-Le)/ht<St&&(Et=Math.min(Et,Ue),Ot=Math.min(Ot,Nt),Tt=Math.max(Tt,Ue),Vt=Math.max(Vt,Nt))}return U=await U.crop([Et,Ot,Tt,Vt]),U}pad_image(U,ge,ke,{mode:Le="constant",center:Ye=!1,constant_values:ht=0}={}){const[St,Et,Ot]=ge;let Tt,Vt;if(typeof ke=="number"?(Tt=ke,Vt=ke):(Tt=ke.width,Vt=ke.height),Tt!==Et||Vt!==St){const qt=new Float32Array(Tt*Vt*Ot);if(Array.isArray(ht))for(let Ue=0;Ue<qt.length;++Ue)qt[Ue]=ht[Ue%Ot];else ht!==0&&qt.fill(ht);const[Nt,je]=Ye?[Math.floor((Tt-Et)/2),Math.floor((Vt-St)/2)]:[0,0];for(let Ue=0;Ue<St;++Ue){const vt=(Ue+je)*Tt,Kt=Ue*Et;for(let dr=0;dr<Et;++dr){const Er=(vt+dr+Nt)*Ot,Vr=(Kt+dr)*Ot;for(let br=0;br<Ot;++br)qt[Er+br]=U[Vr+br]}}if(Le==="symmetric"){if(Ye)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const Ue=St-1,vt=Et-1;for(let Kt=0;Kt<Vt;++Kt){const dr=Kt*Tt,Er=(0,ue.calculateReflectOffset)(Kt,Ue)*Et;for(let Vr=0;Vr<Tt;++Vr){if(Kt<St&&Vr<Et)continue;const br=(dr+Vr)*Ot,Ir=(Er+(0,ue.calculateReflectOffset)(Vr,vt))*Ot;for(let vr=0;vr<Ot;++vr)qt[br+vr]=U[Ir+vr]}}}U=qt,ge=[Vt,Tt,Ot]}return[U,ge]}rescale(U){for(let ge=0;ge<U.length;++ge)U[ge]=this.rescale_factor*U[ge]}get_resize_output_image_size(U,ge){const[ke,Le]=U.size;let Ye,ht;if(this.do_thumbnail){const{height:St,width:Et}=ge;Ye=Math.min(St,Et)}else Number.isInteger(ge)?(Ye=ge,ht=this.config.max_size??Ye):ge!==void 0&&(Ye=ge.shortest_edge,ht=ge.longest_edge);if(Ye!==void 0||ht!==void 0){const St=Ye===void 0?1:Math.max(Ye/ke,Ye/Le),Et=ke*St,Ot=Le*St,Tt=ht===void 0?1:Math.min(ht/Et,ht/Ot);let Vt=Math.floor(Number((Et*Tt).toFixed(2))),qt=Math.floor(Number((Ot*Tt).toFixed(2)));return this.size_divisibility!==void 0&&([Vt,qt]=Me([Vt,qt],this.size_divisibility)),[Vt,qt]}else if(ge!==void 0&&ge.width!==void 0&&ge.height!==void 0){let St=ge.width,Et=ge.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let Ot=Et/Le,Tt=St/ke;Math.abs(1-Tt)<Math.abs(1-Ot)?Ot=Tt:Tt=Ot,Et=ie(Ot*Le,this.config.ensure_multiple_of),St=ie(Tt*ke,this.config.ensure_multiple_of)}return[St,Et]}else{if(this.size_divisibility!==void 0)return Me([ke,Le],this.size_divisibility);throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(ge)}`)}}async resize(U){const[ge,ke]=this.get_resize_output_image_size(U,this.size);return await U.resize(ge,ke,{resample:this.resample})}async preprocess(U,{do_normalize:ge=null,do_pad:ke=null,do_convert_rgb:Le=null,do_convert_grayscale:Ye=null,do_flip_channel_order:ht=null}={}){this.do_crop_margin&&(U=await this.crop_margin(U));const[St,Et]=U.size;if(Le??this.do_convert_rgb?U=U.rgb():Ye&&(U=U.grayscale()),this.do_resize&&(U=await this.resize(U)),this.do_thumbnail&&(U=await this.thumbnail(U,this.size,this.resample)),this.do_center_crop){let Nt,je;Number.isInteger(this.crop_size)?(Nt=this.crop_size,je=this.crop_size):(Nt=this.crop_size.width,je=this.crop_size.height),U=await U.center_crop(Nt,je)}const Ot=[U.height,U.width];let Tt=Float32Array.from(U.data),Vt=[U.height,U.width,U.channels];if(this.do_rescale&&this.rescale(Tt),ge??this.do_normalize){let Nt=this.image_mean;Array.isArray(this.image_mean)||(Nt=new Array(U.channels).fill(Nt));let je=this.image_std;if(Array.isArray(this.image_std)||(je=new Array(U.channels).fill(Nt)),Nt.length!==U.channels||je.length!==U.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${Nt.length}) and \`image_std\` (${je.length}) must match the number of channels in the image (${U.channels}).`);for(let Ue=0;Ue<Tt.length;Ue+=U.channels)for(let vt=0;vt<U.channels;++vt)Tt[Ue+vt]=(Tt[Ue+vt]-Nt[vt])/je[vt]}if(ke??this.do_pad){if(this.pad_size)[Tt,Vt]=this.pad_image(Tt,[U.height,U.width,U.channels],this.pad_size);else if(this.size_divisibility){const[Nt,je]=Me([Vt[1],Vt[0]],this.size_divisibility);[Tt,Vt]=this.pad_image(Tt,Vt,{width:Nt,height:je})}}if(ht??this.do_flip_channel_order){if(Vt[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let Nt=0;Nt<Tt.length;Nt+=3){const je=Tt[Nt];Tt[Nt]=Tt[Nt+2],Tt[Nt+2]=je}}const qt=new Ee.Tensor("float32",Tt,Vt).permute(2,0,1);return{original_size:[Et,St],reshaped_input_size:Ot,pixel_values:qt}}async _call(U,...ge){Array.isArray(U)||(U=[U]);const ke=await Promise.all(U.map(Ye=>this.preprocess(Ye)));return{pixel_values:(0,Ee.stack)(ke.map(Ye=>Ye.pixel_values),0),original_sizes:ke.map(Ye=>Ye.original_size),reshaped_input_sizes:ke.map(Ye=>Ye.reshaped_input_size)}}}class H extends Z{post_process_semantic_segmentation(...U){return R(...U)}}class O extends Z{post_process_semantic_segmentation(...U){return R(...U)}}class G extends Z{}class P extends Z{}class ye extends P{}class $e extends Z{}class Fe extends Z{}class Ve extends Z{}class Ne extends Ve{}class _t extends Z{}class ct extends Z{}class wt extends Z{constructor(U){super(U),this.crop_pct=this.config.crop_pct??224/256}async resize(U){var ke;const ge=(ke=this.size)==null?void 0:ke.shortest_edge;if(ge===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(ge<384){const Le=Math.floor(ge/this.crop_pct),[Ye,ht]=this.get_resize_output_image_size(U,{shortest_edge:Le});U=await U.resize(Ye,ht,{resample:this.resample}),U=await U.center_crop(ge,ge)}else U=await U.resize(ge,ge,{resample:this.resample});return U}}class Te extends wt{}class K extends Z{}class be extends Z{}class Ie extends Z{constructor(U){super(U),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(ge=>ge*ge))}}class Ze extends Z{}class gt extends Z{}class ce extends Z{}class Ge extends Z{}class pt extends Z{}class qe extends pt{}class yt extends Z{post_process_object_detection(...U){return M(...U)}}class $t extends yt{}class st extends Z{post_process_object_detection(...U){return M(...U)}}class re extends Z{}class ze extends Z{}class Je extends Z{pad_image(U,ge,ke,Le={}){const[Ye,ht,St]=ge;let Et=this.image_mean;Array.isArray(this.image_mean)||(Et=new Array(St).fill(Et));let Ot=this.image_std;Array.isArray(Ot)||(Ot=new Array(St).fill(Et));const Tt=Et.map((Vt,qt)=>-Vt/Ot[qt]);return super.pad_image(U,ge,ke,{center:!0,constant_values:Tt,...Le})}}class lt extends Je{}class Qe extends Je{}class Ke extends Z{async _call(U){const ge=await super._call(U),ke=[ge.pixel_values.dims[0],64,64],Le=(0,Ee.full)(ke,1n);return{...ge,pixel_mask:Le}}post_process_object_detection(...U){return M(...U)}post_process_panoptic_segmentation(...U){return we(...U)}post_process_instance_segmentation(){throw Error("Not implemented yet")}}class ft extends Z{post_process_panoptic_segmentation(...U){return we(...U)}post_process_instance_segmentation(){throw Error("Not implemented yet")}}class bt extends Z{post_process_object_detection(...U){return M(...U)}}class Ft extends Z{reshape_input_points(U,ge,ke,Le=!1){U=structuredClone(U);let Ye=(0,ue.calculateDimensions)(U);if(Ye.length===3)Le||(Ye=[1,...Ye]),U=[U];else if(Ye.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let ht=0;ht<U.length;++ht){let St=ge[ht],Et=ke[ht],Ot=[Et[0]/St[0],Et[1]/St[1]];for(let Tt=0;Tt<U[ht].length;++Tt)for(let Vt=0;Vt<U[ht][Tt].length;++Vt)for(let qt=0;qt<U[ht][Tt][Vt].length;++qt)U[ht][Tt][Vt][qt]*=Ot[qt%2]}return new Ee.Tensor("float32",Float32Array.from(U.flat(1/0)),Ye)}add_input_labels(U,ge){let ke=(0,ue.calculateDimensions)(U);if(ke.length===2)ke=[1,...ke],U=[U];else if(ke.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(ke.some((Le,Ye)=>Le!==ge.dims[Ye]))throw Error(`The first ${ke.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new Ee.Tensor("int64",U.flat(1/0).map(BigInt),ke)}async _call(U,{input_points:ge=null,input_labels:ke=null,input_boxes:Le=null}={}){const Ye=await super._call(U);if(ge&&(Ye.input_points=this.reshape_input_points(ge,Ye.original_sizes,Ye.reshaped_input_sizes)),ke){if(!Ye.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");Ye.input_labels=this.add_input_labels(ke,Ye.input_points)}return Le&&(Ye.input_boxes=this.reshape_input_points(Le,Ye.original_sizes,Ye.reshaped_input_sizes,!0)),Ye}async post_process_masks(U,ge,ke,{mask_threshold:Le=0,binarize:Ye=!0,pad_size:ht=null}={}){const St=[];ht=ht??this.pad_size;const Et=[ht.height,ht.width];for(let Ot=0;Ot<ge.length;++Ot){const Tt=ge[Ot],Vt=ke[Ot];let qt=await(0,Ee.interpolate_4d)(U[Ot],{mode:"bilinear",size:Et});if(qt=qt.slice(null,null,[0,Vt[0]],[0,Vt[1]]),qt=await(0,Ee.interpolate_4d)(qt,{mode:"bilinear",size:Tt}),Ye){const Nt=qt.data,je=new Uint8Array(Nt.length);for(let Ue=0;Ue<Nt.length;++Ue)Nt[Ue]>Le&&(je[Ue]=1);qt=new Ee.Tensor("bool",je,qt.dims)}St.push(qt)}return St}generate_crop_boxes(U,ge,{crop_n_layers:ke=0,overlap_ratio:Le=512/1500,points_per_crop:Ye=32,crop_n_points_downscale_factor:ht=1}={}){}}class Pt extends Z{pad_image(U,ge,ke,Le={}){const[Ye,ht,St]=ge;return super.pad_image(U,ge,{width:ht+(ke-ht%ke)%ke,height:Ye+(ke-Ye%ke)%ke},{mode:"symmetric",center:!1,constant_values:-1,...Le})}}class E extends Z{async _call(U,ge){Array.isArray(U)||(U=[U]),Array.isArray(ge)||(ge=[ge]);const ke=await Promise.all(U.map(ht=>this.preprocess(ht))),Le=await Promise.all(ge.map(ht=>this.preprocess(ht,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,Ee.stack)(ke.map((ht,St)=>(0,Ee.cat)([ht.pixel_values,Le[St].pixel_values],0)),0),original_sizes:ke.map(ht=>ht.original_size),reshaped_input_sizes:ke.map(ht=>ht.reshaped_input_size)}}}class Y extends J{constructor(U){var ge;super(U),(ge=this.config).mel_filters??(ge.mel_filters=(0,j.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,j.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(U){const ge=await(0,j.spectrogram)(U,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),ke=ge.data,Le=(0,de.max)(ke)[0];for(let Ye=0;Ye<ke.length;++Ye)ke[Ye]=(Math.max(ke[Ye],Le-8)+4)/4;return ge}async _call(U){N(U,"WhisperFeatureExtractor");let ge;return U.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),ge=U.slice(0,this.config.n_samples)):(ge=new Float32Array(this.config.n_samples),ge.set(U)),{input_features:(await this._extract_fbank_features(ge)).unsqueeze_(0)}}}class A extends J{_zero_mean_unit_var_norm(U){const ke=U.reduce((Ye,ht)=>Ye+ht,0)/U.length,Le=U.reduce((Ye,ht)=>Ye+(ht-ke)**2,0)/U.length;return U.map(Ye=>(Ye-ke)/Math.sqrt(Le+1e-7))}async _call(U){N(U,"Wav2Vec2FeatureExtractor"),U instanceof Float64Array&&(U=new Float32Array(U));let ge=U;this.config.do_normalize&&(ge=this._zero_mean_unit_var_norm(ge));const ke=[1,ge.length];return{input_values:new Ee.Tensor("float32",ge,ke),attention_mask:new Ee.Tensor("int64",new BigInt64Array(ge.length).fill(1n),ke)}}}class ee extends J{constructor(U){super(U);const ge=this.config.sampling_rate,ke=(0,j.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(ge/2),ge,null,"kaldi",!0);for(let Le=0;Le<ke.length;++Le)ke[Le].push(0);this.mel_filters=ke,this.window=(0,j.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(U,ge){return U=U.map(ke=>ke*32768),(0,j.spectrogram)(U,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:ge,transpose:!0})}async _call(U,{padding:ge=!0,pad_to_multiple_of:ke=2,do_normalize_per_mel_bins:Le=!0,return_attention_mask:Ye=!0}={}){N(U,"SeamlessM4TFeatureExtractor");let ht=await this._extract_fbank_features(U,this.config.max_length);if(Le){const[je,Ue]=ht.dims,vt=ht.data;for(let Kt=0;Kt<Ue;++Kt){let dr=0;for(let Ir=0;Ir<je;++Ir)dr+=vt[Ir*Ue+Kt];const Er=dr/je;let Vr=0;for(let Ir=0;Ir<je;++Ir)Vr+=(vt[Ir*Ue+Kt]-Er)**2;Vr/=je-1;const br=Math.sqrt(Vr+1e-7);for(let Ir=0;Ir<je;++Ir){const vr=Ir*Ue+Kt;vt[vr]=(vt[vr]-Er)/br}}}let St;if(ge){const[je,Ue]=ht.dims,vt=ht.data,Kt=je%ke;if(Kt>0){const dr=new Float32Array(Ue*(je+Kt));dr.set(vt),dr.fill(this.config.padding_value,vt.length);const Er=je+Kt;ht=new Ee.Tensor(ht.type,dr,[Er,Ue]),Ye&&(St=new Ee.Tensor("int64",new BigInt64Array(Er),[1,Er]),St.data.fill(1n,0,je))}}const[Et,Ot]=ht.dims,Tt=this.config.stride;if(Et%Tt!==0)throw new Error(`The number of frames (${Et}) must be a multiple of the stride (${Tt}).`);const qt=ht.view(1,Math.floor(Et/Tt),Ot*Tt),Nt={input_features:qt};if(Ye){const je=qt.dims[1],Ue=new BigInt64Array(je);if(St){const vt=St.data;for(let Kt=1,dr=0;Kt<Et;Kt+=Tt,++dr)Ue[dr]=vt[Kt]}else Ue.fill(1n);Nt.attention_mask=new Ee.Tensor("int64",Ue,[1,je])}return Nt}}class ve extends J{constructor(U){super(U);const ge=this.config.sampling_rate,ke=(0,j.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(ge/2),ge,null,"kaldi",!0);for(let Le=0;Le<ke.length;++Le)ke[Le].push(0);this.mel_filters=ke,this.window=(0,j.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(U,ge){return(0,j.spectrogram)(U,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:ge,transpose:!0})}async _call(U){N(U,"ASTFeatureExtractor");const ge=await this._extract_fbank_features(U,this.config.max_length);if(this.config.do_normalize){const ke=this.std*2,Le=ge.data;for(let Ye=0;Ye<Le.length;++Ye)Le[Ye]=(Le[Ye]-this.mean)/ke}return{input_values:ge.unsqueeze_(0)}}}class ot extends J{constructor(U){super(U),this.mel_filters=(0,j.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,j.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,j.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(U,ge,ke,Le){let Ye;const ht=U.length-ge;if(ht>0)if(ke==="rand_trunc"){const St=Math.floor(Math.random()*(ht+1));U=U.subarray(St,St+ge),Ye=await this._extract_fbank_features(U,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${ke}" not implemented`);else{if(ht<0){let St=new Float64Array(ge);if(St.set(U),Le==="repeat")for(let Et=U.length;Et<ge;Et+=U.length)St.set(U.subarray(0,Math.min(U.length,ge-Et)),Et);else if(Le==="repeatpad")for(let Et=U.length;Et<-ht;Et+=U.length)St.set(U,Et);U=St}if(ke==="fusion")throw new Error(`Truncation strategy "${ke}" not implemented`);Ye=await this._extract_fbank_features(U,this.mel_filters_slaney,this.config.nb_max_samples)}return Ye.unsqueeze_(0)}async _extract_fbank_features(U,ge,ke=null){return(0,j.spectrogram)(U,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:ge,log_mel:"dB",max_num_frames:ke,do_pad:!1,transpose:!0})}async _call(U,{max_length:ge=null}={}){return N(U,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(U,ge??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}class at extends J{async _call(U){N(U,"PyAnnoteFeatureExtractor"),U instanceof Float64Array&&(U=new Float32Array(U));const ge=[1,1,U.length];return{input_values:new Ee.Tensor("float32",U,ge)}}samples_to_frames(U){return(U-this.config.offset)/this.config.step}post_process_speaker_diarization(U,ge){const ke=ge/this.samples_to_frames(ge)/this.config.sampling_rate,Le=[];for(const Ye of U.tolist()){const ht=[];let St=-1;for(let Et=0;Et<Ye.length;++Et){const Ot=(0,de.softmax)(Ye[Et]),[Tt,Vt]=(0,de.max)(Ot),[qt,Nt]=[Et,Et+1];Vt!==St?(St=Vt,ht.push({id:Vt,start:qt,end:Nt,score:Tt})):(ht.at(-1).end=Nt,ht.at(-1).score+=Tt)}Le.push(ht.map(({id:Et,start:Ot,end:Tt,score:Vt})=>({id:Et,start:Ot*ke,end:Tt*ke,confidence:Vt/(Tt-Ot)})))}return Le}}class Ut extends J{constructor(U){super(U);const ge=this.config.sampling_rate,ke=(0,j.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(ge/2),ge,null,"kaldi",!0);for(let Le=0;Le<ke.length;++Le)ke[Le].push(0);this.mel_filters=ke,this.window=(0,j.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(U){return U=U.map(ge=>ge*32768),(0,j.spectrogram)(U,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(U){N(U,"WeSpeakerFeatureExtractor");const ge=(await this._extract_fbank_features(U)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const ke=ge.mean(1).data,Le=ge.data,[Ye,ht,St]=ge.dims;for(let Et=0;Et<Ye;++Et){const Ot=Et*ht*St,Tt=Et*St;for(let Vt=0;Vt<ht;++Vt){const qt=Ot+Vt*St;for(let Nt=0;Nt<St;++Nt)Le[qt+Nt]-=ke[Tt+Nt]}}}return{input_features:ge}}}class Mt extends J{}class kt extends F.Callable{constructor(U){super(),this.feature_extractor=U}async _call(U,...ge){return await this.feature_extractor(U,...ge)}}class x extends kt{async _call(...U){return await this.feature_extractor(...U)}post_process_masks(...U){return this.feature_extractor.post_process_masks(...U)}reshape_input_points(...U){return this.feature_extractor.reshape_input_points(...U)}}class d extends kt{async _call(U){return await this.feature_extractor(U)}}class f extends kt{async _call(U){return await this.feature_extractor(U)}}class V extends kt{async _call(U){return await this.feature_extractor(U)}post_process_speaker_diarization(...U){return this.feature_extractor.post_process_speaker_diarization(...U)}}class fe extends kt{async _call(U){return await this.feature_extractor(U)}}class Pe extends kt{}class Xe extends kt{constructor(U){super(U);const{tasks_answer_post_processing_type:ge,task_prompts_without_inputs:ke,task_prompts_with_input:Le}=U.config;this.tasks_answer_post_processing_type=new Map(Object.entries(ge??{})),this.task_prompts_without_inputs=new Map(Object.entries(ke??{})),this.task_prompts_with_input=new Map(Object.entries(Le??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(U){typeof U=="string"&&(U=[U]);const ge=[];for(const ke of U)if(this.task_prompts_without_inputs.has(ke))ge.push(this.task_prompts_without_inputs.get(ke));else{for(const[Le,Ye]of this.task_prompts_with_input)if(ke.includes(Le)){ge.push(Ye.replaceAll("{input}",ke).replaceAll(Le,""));break}ge.length!==U.length&&ge.push(ke)}return ge}post_process_generation(U,ge,ke){const Le=this.tasks_answer_post_processing_type.get(ge)??"pure_text";U=U.replaceAll("<s>","").replaceAll("</s>","");let Ye;switch(Le){case"pure_text":Ye=U;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const ht=Le==="ocr"?"quad_boxes":"bboxes",St=U.matchAll(this.regexes[ht]),Et=[],Ot=[];for(const[Tt,Vt,...qt]of St)Et.push(Vt?Vt.trim():Et.at(-1)??""),Ot.push(qt.map((Nt,je)=>(Number(Nt)+.5)/this.size_per_bin*ke[je%2]));Ye={labels:Et,[ht]:Ot};break;default:throw new Error(`Task "${ge}" (of type "${Le}") not yet implemented.`)}return{[ge]:Ye}}}class sr{static async from_pretrained(U,{progress_callback:ge=null,config:ke=null,cache_dir:Le=null,local_files_only:Ye=!1,revision:ht="main"}={}){let St=ke??await(0,oe.getModelJSON)(U,"preprocessor_config.json",!0,{progress_callback:ge,config:ke,cache_dir:Le,local_files_only:Ye,revision:ht}),Et=St.feature_extractor_type??St.image_processor_type,Ot=this.FEATURE_EXTRACTOR_CLASS_MAPPING[Et];if(!Ot)if(St.size!==void 0)console.warn(`Feature extractor type "${Et}" not found, assuming ImageFeatureExtractor due to size parameter in config.`),Ot=Z;else throw new Error(`Unknown Feature Extractor type: ${Et}`);let Tt=this.PROCESSOR_CLASS_MAPPING[St.processor_class]??kt,Vt=new Ot(St);return new Tt(Vt)}}Se(sr,"FEATURE_EXTRACTOR_CLASS_MAPPING",{ImageFeatureExtractor:Z,WhisperFeatureExtractor:Y,ViTFeatureExtractor:K,MobileViTFeatureExtractor:pt,MobileViTImageProcessor:qe,MobileNetV1FeatureExtractor:Ze,MobileNetV2FeatureExtractor:gt,MobileNetV3FeatureExtractor:ce,MobileNetV4FeatureExtractor:Ge,OwlViTFeatureExtractor:yt,Owlv2ImageProcessor:$t,CLIPFeatureExtractor:Ve,CLIPImageProcessor:Ne,Florence2Processor:Xe,ChineseCLIPFeatureExtractor:_t,SiglipImageProcessor:ct,ConvNextFeatureExtractor:wt,ConvNextImageProcessor:Te,SegformerFeatureExtractor:O,SapiensFeatureExtractor:H,BitImageProcessor:$e,DPTImageProcessor:ye,DPTFeatureExtractor:P,PvtImageProcessor:G,GLPNFeatureExtractor:Fe,BeitFeatureExtractor:ze,DeiTFeatureExtractor:re,DetrFeatureExtractor:Ke,RTDetrImageProcessor:st,MaskFormerFeatureExtractor:ft,YolosFeatureExtractor:bt,DonutFeatureExtractor:Je,DonutImageProcessor:lt,NougatImageProcessor:Qe,EfficientNetImageProcessor:Ie,ViTImageProcessor:be,VitMatteImageProcessor:E,SamImageProcessor:Ft,Swin2SRImageProcessor:Pt,Wav2Vec2FeatureExtractor:A,SeamlessM4TFeatureExtractor:ee,SpeechT5FeatureExtractor:Mt,ASTFeatureExtractor:ve,ClapFeatureExtractor:ot,PyAnnoteFeatureExtractor:at,WeSpeakerFeatureExtractor:Ut}),Se(sr,"PROCESSOR_CLASS_MAPPING",{WhisperProcessor:d,Wav2Vec2ProcessorWithLM:f,PyAnnoteProcessor:V,SamProcessor:x,SpeechT5Processor:fe,OwlViTProcessor:Pe,Florence2Processor:Xe})},"./src/tokenizers.js":(De,ae,z)=>{z.r(ae),z.d(ae,{AlbertTokenizer:()=>ht,AutoTokenizer:()=>Wi,BartTokenizer:()=>Vr,BertTokenizer:()=>Ye,BlenderbotSmallTokenizer:()=>ji,BlenderbotTokenizer:()=>Ni,BloomTokenizer:()=>Cn,CLIPTokenizer:()=>Ei,CamembertTokenizer:()=>Ue,CodeGenTokenizer:()=>Ti,CodeLlamaTokenizer:()=>Oi,CohereTokenizer:()=>di,ConvBertTokenizer:()=>qt,DebertaTokenizer:()=>Ot,DebertaV2Tokenizer:()=>Tt,DistilBertTokenizer:()=>je,ElectraTokenizer:()=>Kt,EsmTokenizer:()=>Li,FalconTokenizer:()=>Bi,GPT2Tokenizer:()=>Er,GPTNeoXTokenizer:()=>Di,GemmaTokenizer:()=>li,Grok1Tokenizer:()=>Xn,HerbertTokenizer:()=>Vt,LlamaTokenizer:()=>vi,M2M100Tokenizer:()=>xi,MBart50Tokenizer:()=>Ir,MBartTokenizer:()=>br,MPNetTokenizer:()=>zi,MarianTokenizer:()=>rr,MobileBertTokenizer:()=>St,NllbTokenizer:()=>Nn,NougatTokenizer:()=>Ui,PreTrainedTokenizer:()=>Le,Qwen2Tokenizer:()=>Ri,RoFormerTokenizer:()=>Nt,RobertaTokenizer:()=>vr,SiglipTokenizer:()=>Ci,SpeechT5Tokenizer:()=>$i,SqueezeBertTokenizer:()=>Et,T5Tokenizer:()=>dr,TokenizerModel:()=>Fe,VitsTokenizer:()=>Vi,Wav2Vec2CTCTokenizer:()=>ui,WhisperTokenizer:()=>Dn,XLMRobertaTokenizer:()=>Kn,XLMTokenizer:()=>vt,is_chinese_char:()=>J});var F=z("./src/utils/generic.js"),ue=z("./src/utils/core.js"),oe=z("./src/utils/hub.js"),de=z("./src/utils/maths.js"),Ee=z("./src/utils/tensor.js"),j=z("./src/utils/data-structures.js"),I=z("./node_modules/@huggingface/jinja/dist/index.js"),M=z("./src/models/whisper/common_whisper.js");z("./src/utils/constants.js");async function R(me,w){const L=await Promise.all([(0,oe.getModelJSON)(me,"tokenizer.json",!0,w),(0,oe.getModelJSON)(me,"tokenizer_config.json",!0,w)]);return w.legacy!==null&&(L[1].legacy=w.legacy),L}function Q(me,w){const L=[];let te=0;for(const _e of me.matchAll(w)){const Ce=_e[0];te<_e.index&&L.push(me.slice(te,_e.index)),Ce.length>0&&L.push(Ce),te=_e.index+Ce.length}return te<me.length&&L.push(me.slice(te)),L}function ne(me,w=!0){if(me.Regex!==void 0){let L=me.Regex.replace(/\\([#&~])/g,"$1");for(const[te,_e]of ye)L=L.replaceAll(te,_e);return new RegExp(L,"gu")}else if(me.String!==void 0){const L=(0,ue.escapeRegExp)(me.String);return new RegExp(w?L:`(${L})`,"gu")}else return console.warn("Unknown pattern type:",me),null}function xe(me){return new Map(Object.entries(me))}function we(me){const w=me.dims;switch(w.length){case 1:return me.tolist();case 2:if(w[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return me.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${w.length}.`)}}function N(me){return me.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function ie(me){return me.replace(new RegExp("\\p{M}","gu"),"")}function Me(me){return ie(me.toLowerCase())}function J(me){return me>=19968&&me<=40959||me>=13312&&me<=19903||me>=131072&&me<=173791||me>=173824&&me<=177983||me>=177984&&me<=178207||me>=178208&&me<=183983||me>=63744&&me<=64255||me>=194560&&me<=195103}function Z(me,w,L){const te=[];let _e=0;for(;_e<me.length;){if(te.push(me[_e]),(w.get(me[_e])??L)!==L){++_e;continue}for(;++_e<me.length&&(w.get(me[_e])??L)===L;)w.get(te.at(-1))!==L&&(te[te.length-1]+=me[_e])}return te}function H(me){return me.match(/\S+/g)||[]}const O="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",G=new RegExp(`^[${O}]+$`,"gu"),P=".,!?…。，、।۔،",ye=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${P}])]+`,` ?[^\\s${P}]+`]]);class $e{constructor(w){this.content=w.content,this.id=w.id,this.single_word=w.single_word??!1,this.lstrip=w.lstrip??!1,this.rstrip=w.rstrip??!1,this.special=w.special??!1,this.normalized=w.normalized??null}}class Fe extends F.Callable{constructor(w){super(),this.config=w,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(w,...L){switch(w.type){case"WordPiece":return new Ve(w);case"Unigram":return new Ne(w,...L);case"BPE":return new wt(w);default:if(w.vocab)return Array.isArray(w.vocab)?new Ne(w,...L):new Te(w,...L);throw new Error(`Unknown TokenizerModel type: ${w.type}`)}}_call(w){return w=this.encode(w),this.fuse_unk&&(w=Z(w,this.tokens_to_ids,this.unk_token_id)),w}encode(w){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(w){return w.map(L=>this.tokens_to_ids.get(L)??this.unk_token_id)}convert_ids_to_tokens(w){return w.map(L=>this.vocab[L]??this.unk_token)}}class Ve extends Fe{constructor(w){super(w),this.tokens_to_ids=xe(w.vocab),this.unk_token_id=this.tokens_to_ids.get(w.unk_token),this.unk_token=w.unk_token,this.max_input_chars_per_word=w.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[L,te]of this.tokens_to_ids)this.vocab[te]=L}encode(w){const L=[];for(const te of w){const _e=[...te];if(_e.length>this.max_input_chars_per_word){L.push(this.unk_token);continue}let Ce=!1,rt=0;const Ct=[];for(;rt<_e.length;){let zt=_e.length,It=null;for(;rt<zt;){let jt=_e.slice(rt,zt).join("");if(rt>0&&(jt=this.config.continuing_subword_prefix+jt),this.tokens_to_ids.has(jt)){It=jt;break}--zt}if(It===null){Ce=!0;break}Ct.push(It),rt=zt}Ce?L.push(this.unk_token):L.push(...Ct)}return L}}class Ne extends Fe{constructor(w,L){super(w);const te=w.vocab.length;this.vocab=new Array(te),this.scores=new Array(te);for(let _e=0;_e<te;++_e){const Ce=w.vocab[_e];this.vocab[_e]=Ce[0],this.scores[_e]=Ce[1]}this.unk_token_id=w.unk_id,this.unk_token=this.vocab[w.unk_id],this.tokens_to_ids=new Map(this.vocab.map((_e,Ce)=>[_e,Ce])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=L.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,de.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new j.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(w){const L=w.chars,te=1;let _e=0;for(;_e<L.length;){let Ce=!1;const rt=L.slice(_e).join(""),Ct=this.trie.commonPrefixSearch(rt);for(const zt of Ct){const It=this.tokens_to_ids.get(zt),jt=this.scores[It],or=(0,ue.len)(zt);w.insert(_e,or,jt,It),!Ce&&or===te&&(Ce=!0)}Ce||w.insert(_e,te,this.unk_score,this.unk_token_id),_e+=te}}tokenize(w){const L=new j.TokenLattice(w,this.bos_token_id,this.eos_token_id);return this.populateNodes(L),L.tokens()}encode(w){const L=[];for(const te of w){const _e=this.tokenize(te);L.push(..._e)}return L}}const _t=(()=>{const me=[...Array.from({length:94},(_e,Ce)=>Ce+33),...Array.from({length:12},(_e,Ce)=>Ce+161),...Array.from({length:82},(_e,Ce)=>Ce+174)],w=me.slice();let L=0;for(let _e=0;_e<256;++_e)me.includes(_e)||(me.push(_e),w.push(256+L),L+=1);const te=w.map(_e=>String.fromCharCode(_e));return Object.fromEntries(me.map((_e,Ce)=>[_e,te[Ce]]))})(),ct=(0,ue.reverseDictionary)(_t);class wt extends Fe{constructor(w){super(w),this.tokens_to_ids=xe(w.vocab),this.unk_token_id=this.tokens_to_ids.get(w.unk_token),this.unk_token=w.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[te,_e]of this.tokens_to_ids)this.vocab[_e]=te;const L=Array.isArray(w.merges[0]);this.merges=L?w.merges:w.merges.map(te=>te.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((te,_e)=>[JSON.stringify(te),_e])),this.end_of_word_suffix=w.end_of_word_suffix,this.continuing_subword_suffix=w.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(w){if(w.length===0)return[];const L=this.cache.get(w);if(L!==void 0)return L;const te=Array.from(w);this.end_of_word_suffix&&(te[te.length-1]+=this.end_of_word_suffix);let _e=[];if(te.length>1){const Ce=new j.PriorityQueue((zt,It)=>zt.score<It.score);let rt={token:te[0],bias:0,prev:null,next:null},Ct=rt;for(let zt=1;zt<te.length;++zt){const It={bias:zt/te.length,token:te[zt],prev:Ct,next:null};Ct.next=It,this._add_node(Ce,Ct),Ct=It}for(;!Ce.isEmpty();){const zt=Ce.pop();if(zt.deleted||!zt.next||zt.next.deleted)continue;if(zt.deleted=!0,zt.next.deleted=!0,zt.prev){const jt={...zt.prev};zt.prev.deleted=!0,zt.prev=jt,jt.prev?jt.prev.next=jt:rt=jt}const It={token:zt.token+zt.next.token,bias:zt.bias,prev:zt.prev,next:zt.next.next};It.prev?(It.prev.next=It,this._add_node(Ce,It.prev)):rt=It,It.next&&(It.next.prev=It,this._add_node(Ce,It))}for(let zt=rt;zt!==null;zt=zt.next)_e.push(zt.token)}else _e=te;if(this.continuing_subword_suffix)for(let Ce=0;Ce<_e.length-1;++Ce)_e[Ce]+=this.continuing_subword_suffix;return this.cache.set(w,_e),_e}_add_node(w,L){const te=this.bpe_ranks.get(JSON.stringify([L.token,L.next.token]));te!==void 0&&(L.score=te+L.bias,w.push(L))}encode(w){const L=[];for(const te of w){if(this.ignore_merges&&this.tokens_to_ids.has(te)){L.push(te);continue}const _e=this.bpe(te);for(const Ce of _e)if(this.tokens_to_ids.has(Ce))L.push(Ce);else if(this.byte_fallback){const rt=Array.from(this.text_encoder.encode(Ce)).map(Ct=>`<0x${Ct.toString(16).toUpperCase().padStart(2,"0")}>`);rt.every(Ct=>this.tokens_to_ids.has(Ct))?L.push(...rt):L.push(this.unk_token)}else L.push(this.unk_token)}return L}}class Te extends Fe{constructor(w,L){super(w),this.tokens_to_ids=xe(L.target_lang?w.vocab[L.target_lang]:w.vocab),this.bos_token=L.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=L.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=L.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=L.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[te,_e]of this.tokens_to_ids)this.vocab[_e]=te}encode(w){return w}}class K extends F.Callable{constructor(w){super(),this.config=w}static fromConfig(w){if(w===null)return null;switch(w.type){case"BertNormalizer":return new $t(w);case"Precompiled":return new fe(w);case"Sequence":return new yt(w);case"Replace":return new be(w);case"NFC":return new Ie(w);case"NFKC":return new Ze(w);case"NFKD":return new gt(w);case"Strip":return new ce(w);case"StripAccents":return new Ge(w);case"Lowercase":return new pt(w);case"Prepend":return new qe(w);default:throw new Error(`Unknown Normalizer type: ${w.type}`)}}normalize(w){throw Error("normalize should be implemented in subclass.")}_call(w){return this.normalize(w)}}class be extends K{normalize(w){const L=ne(this.config.pattern);return L===null?w:w.replaceAll(L,this.config.content)}}class Ie extends K{normalize(w){return w=w.normalize("NFC"),w}}class Ze extends K{normalize(w){return w=w.normalize("NFKC"),w}}class gt extends K{normalize(w){return w=w.normalize("NFKD"),w}}class ce extends K{normalize(w){return this.config.strip_left&&this.config.strip_right?w=w.trim():(this.config.strip_left&&(w=w.trimStart()),this.config.strip_right&&(w=w.trimEnd())),w}}class Ge extends K{normalize(w){return w=ie(w),w}}class pt extends K{normalize(w){return w=w.toLowerCase(),w}}class qe extends K{normalize(w){return w=this.config.prepend+w,w}}class yt extends K{constructor(w){super(w),this.normalizers=w.normalizers.map(L=>K.fromConfig(L))}normalize(w){return this.normalizers.reduce((L,te)=>te.normalize(L),w)}}class $t extends K{_tokenize_chinese_chars(w){const L=[];for(let te=0;te<w.length;++te){const _e=w[te],Ce=_e.charCodeAt(0);J(Ce)?(L.push(" "),L.push(_e),L.push(" ")):L.push(_e)}return L.join("")}stripAccents(w){return w.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control(w){switch(w){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(w)}}_clean_text(w){const L=[];for(const te of w){const _e=te.charCodeAt(0);_e===0||_e===65533||this._is_control(te)||(/^\s$/.test(te)?L.push(" "):L.push(te))}return L.join("")}normalize(w){return this.config.clean_text&&(w=this._clean_text(w)),this.config.handle_chinese_chars&&(w=this._tokenize_chinese_chars(w)),this.config.lowercase?(w=w.toLowerCase(),this.config.strip_accents!==!1&&(w=this.stripAccents(w))):this.config.strip_accents&&(w=this.stripAccents(w)),w}}class st extends F.Callable{static fromConfig(w){if(w===null)return null;switch(w.type){case"BertPreTokenizer":return new re(w);case"Sequence":return new Pe(w);case"Whitespace":return new Xe(w);case"WhitespaceSplit":return new sr(w);case"Metaspace":return new f(w);case"ByteLevel":return new ze(w);case"Split":return new Je(w);case"Punctuation":return new lt(w);case"Digits":return new Qe(w);case"Replace":return new tt(w);default:throw new Error(`Unknown PreTokenizer type: ${w.type}`)}}pre_tokenize_text(w,L){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(w,L){return(Array.isArray(w)?w.map(te=>this.pre_tokenize_text(te,L)):this.pre_tokenize_text(w,L)).flat()}_call(w,L){return this.pre_tokenize(w,L)}}class re extends st{constructor(w){super(),this.pattern=new RegExp(`[^\\s${O}]+|[${O}]`,"gu")}pre_tokenize_text(w,L){return w.trim().match(this.pattern)||[]}}class ze extends st{constructor(w){super(),this.config=w,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=_t,this.text_encoder=new TextEncoder}pre_tokenize_text(w,L){return this.add_prefix_space&&!w.startsWith(" ")&&(w=" "+w),(this.use_regex?w.match(this.pattern)||[]:[w]).map(_e=>Array.from(this.text_encoder.encode(_e),Ce=>this.byte_encoder[Ce]).join(""))}}class Je extends st{constructor(w){super(),this.config=w,this.pattern=ne(this.config.pattern,this.config.invert)}pre_tokenize_text(w,L){return this.pattern===null?[]:this.config.invert?w.match(this.pattern)||[]:Q(w,this.pattern)}}class lt extends st{constructor(w){super(),this.config=w,this.pattern=new RegExp(`[^${O}]+|[${O}]+`,"gu")}pre_tokenize_text(w,L){return w.match(this.pattern)||[]}}class Qe extends st{constructor(w){super(),this.config=w;const L=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(L,"gu")}pre_tokenize_text(w,L){return w.match(this.pattern)||[]}}class Ke extends F.Callable{constructor(w){super(),this.config=w}static fromConfig(w){if(w===null)return null;switch(w.type){case"TemplateProcessing":return new Ft(w);case"ByteLevel":return new Pt(w);case"RobertaProcessing":return new bt(w);case"BertProcessing":return new ft(w);case"Sequence":return new E(w);default:throw new Error(`Unknown PostProcessor type: ${w.type}`)}}post_process(w,...L){throw Error("post_process should be implemented in subclass.")}_call(w,...L){return this.post_process(w,...L)}}class ft extends Ke{constructor(w){super(w),this.cls=w.cls[0],this.sep=w.sep[0]}post_process(w,L=null,{add_special_tokens:te=!0}={}){te&&(w=(0,ue.mergeArrays)([this.cls],w,[this.sep]));let _e=new Array(w.length).fill(0);if(L!==null){const Ce=te&&this instanceof bt?[this.sep]:[],rt=te?[this.sep]:[];w=(0,ue.mergeArrays)(w,Ce,L,rt),_e=(0,ue.mergeArrays)(_e,new Array(L.length+Ce.length+rt.length).fill(1))}return{tokens:w,token_type_ids:_e}}}class bt extends ft{}class Ft extends Ke{constructor(w){super(w),this.single=w.single,this.pair=w.pair}post_process(w,L=null,{add_special_tokens:te=!0}={}){const _e=L===null?this.single:this.pair;let Ce=[],rt=[];for(const Ct of _e)"SpecialToken"in Ct?te&&(Ce.push(Ct.SpecialToken.id),rt.push(Ct.SpecialToken.type_id)):"Sequence"in Ct&&(Ct.Sequence.id==="A"?(Ce=(0,ue.mergeArrays)(Ce,w),rt=(0,ue.mergeArrays)(rt,new Array(w.length).fill(Ct.Sequence.type_id))):Ct.Sequence.id==="B"&&(Ce=(0,ue.mergeArrays)(Ce,L),rt=(0,ue.mergeArrays)(rt,new Array(L.length).fill(Ct.Sequence.type_id))));return{tokens:Ce,token_type_ids:rt}}}class Pt extends Ke{post_process(w,L=null){return L&&(w=(0,ue.mergeArrays)(w,L)),{tokens:w}}}class E extends Ke{constructor(w){super(w),this.processors=w.processors.map(L=>Ke.fromConfig(L))}post_process(w,L=null,te={}){let _e;for(const Ce of this.processors)if(Ce instanceof Pt)w=Ce.post_process(w).tokens,L&&(L=Ce.post_process(L).tokens);else{const rt=Ce.post_process(w,L,te);w=rt.tokens,_e=rt.token_type_ids}return{tokens:w,token_type_ids:_e}}}class Y extends F.Callable{constructor(w){super(),this.config=w,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=w.trim_offsets}static fromConfig(w){if(w===null)return null;switch(w.type){case"WordPiece":return new at(w);case"Metaspace":return new V(w);case"ByteLevel":return new Ut(w);case"Replace":return new A(w);case"ByteFallback":return new ee(w);case"Fuse":return new ve(w);case"Strip":return new ot(w);case"Sequence":return new kt(w);case"CTC":return new Mt(w);case"BPEDecoder":return new x(w);default:throw new Error(`Unknown Decoder type: ${w.type}`)}}_call(w){return this.decode(w)}decode(w){return this.decode_chain(w).join("")}decode_chain(w){throw Error("`decode_chain` should be implemented in subclass.")}}class A extends Y{decode_chain(w){const L=ne(this.config.pattern);return L===null?w:w.map(te=>te.replaceAll(L,this.config.content))}}class ee extends Y{constructor(w){super(w),this.text_decoder=new TextDecoder}decode_chain(w){const L=[];let te=[];for(const _e of w){let Ce=null;if(_e.length===6&&_e.startsWith("<0x")&&_e.endsWith(">")){const rt=parseInt(_e.slice(3,5),16);isNaN(rt)||(Ce=rt)}if(Ce!==null)te.push(Ce);else{if(te.length>0){const rt=this.text_decoder.decode(Uint8Array.from(te));L.push(rt),te=[]}L.push(_e)}}if(te.length>0){const _e=this.text_decoder.decode(Uint8Array.from(te));L.push(_e),te=[]}return L}}class ve extends Y{decode_chain(w){return[w.join("")]}}class ot extends Y{constructor(w){super(w),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(w){return w.map(L=>{let te=0;for(let Ce=0;Ce<this.start&&L[Ce]===this.content;++Ce){te=Ce+1;continue}let _e=L.length;for(let Ce=0;Ce<this.stop;++Ce){const rt=L.length-Ce-1;if(L[rt]===this.content){_e=rt;continue}else break}return L.slice(te,_e)})}}class at extends Y{constructor(w){super(w),this.cleanup=w.cleanup}decode_chain(w){return w.map((L,te)=>(te!==0&&(L.startsWith(this.config.prefix)?L=L.replace(this.config.prefix,""):L=" "+L),this.cleanup&&(L=N(L)),L))}}class Ut extends Y{constructor(w){super(w),this.byte_decoder=ct,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(w){const L=w.join(""),te=new Uint8Array([...L].map(Ce=>this.byte_decoder[Ce]));return this.text_decoder.decode(te)}decode_chain(w){const L=[];let te=[];for(const _e of w)this.added_tokens.find(Ce=>Ce.content===_e)!==void 0?(te.length>0&&(L.push(this.convert_tokens_to_string(te)),te=[]),L.push(_e)):te.push(_e);return te.length>0&&L.push(this.convert_tokens_to_string(te)),L}}class Mt extends Y{constructor(w){super(w),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(w){if(w.length===0)return"";const L=[w[0]];for(let Ce=1;Ce<w.length;++Ce)w[Ce]!==L.at(-1)&&L.push(w[Ce]);let _e=L.filter(Ce=>Ce!==this.pad_token).join("");return this.cleanup&&(_e=N(_e).replaceAll(this.word_delimiter_token," ").trim()),_e}decode_chain(w){return[this.convert_tokens_to_string(w)]}}class kt extends Y{constructor(w){super(w),this.decoders=w.decoders.map(L=>Y.fromConfig(L))}decode_chain(w){return this.decoders.reduce((L,te)=>te.decode_chain(L),w)}}class x extends Y{constructor(w){super(w),this.suffix=this.config.suffix}decode_chain(w){return w.map((L,te)=>L.replaceAll(this.suffix,te===w.length-1?"":" "))}}class d extends Y{decode_chain(w){let L="";for(let te=1;te<w.length;te+=2)L+=w[te];return[L]}}class f extends st{constructor(w){super(),this.addPrefixSpace=w.add_prefix_space,this.replacement=w.replacement,this.strRep=w.str_rep||this.replacement,this.prepend_scheme=w.prepend_scheme??"always"}pre_tokenize_text(w,{section_index:L=void 0}={}){let te=w.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!te.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&L===0)&&(te=this.strRep+te),[te]}}class V extends Y{constructor(w){super(w),this.addPrefixSpace=w.add_prefix_space,this.replacement=w.replacement}decode_chain(w){const L=[];for(let te=0;te<w.length;++te){let _e=w[te].replaceAll(this.replacement," ");this.addPrefixSpace&&te==0&&_e.startsWith(" ")&&(_e=_e.substring(1)),L.push(_e)}return L}}class fe extends K{constructor(w){super(w),this.charsmap=w.precompiled_charsmap}normalize(w){return w=w.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),w=w.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),w.includes("～")?w=w.split("～").map(te=>te.normalize("NFKC")).join("～"):w=w.normalize("NFKC"),w}}class Pe extends st{constructor(w){super(),this.tokenizers=w.pretokenizers.map(L=>st.fromConfig(L))}pre_tokenize_text(w,L){return this.tokenizers.reduce((te,_e)=>_e.pre_tokenize(te,L),[w])}}class Xe extends st{constructor(w){super()}pre_tokenize_text(w,L){return w.match(/\w+|[^\w\s]+/g)||[]}}class sr extends st{constructor(w){super()}pre_tokenize_text(w,L){return H(w)}}class tt extends st{constructor(w){super(),this.config=w,this.pattern=ne(this.config.pattern),this.content=this.config.content}pre_tokenize_text(w,L){return this.pattern===null?[w]:[w.replaceAll(this.pattern,this.config.content)]}}const U=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function ge(me,w,L,te){for(const _e of Object.keys(me)){const Ce=w-me[_e].length,rt=L(_e),Ct=new Array(Ce).fill(rt);me[_e]=te==="right"?(0,ue.mergeArrays)(me[_e],Ct):(0,ue.mergeArrays)(Ct,me[_e])}}function ke(me,w){for(const L of Object.keys(me))me[L].length=w}class Le extends F.Callable{constructor(L,te){super();Se(this,"return_token_type_ids",!1);Se(this,"padding_side","right");this._tokenizer_config=te,this.normalizer=K.fromConfig(L.normalizer),this.pre_tokenizer=st.fromConfig(L.pre_tokenizer),this.model=Fe.fromConfig(L.model,te),this.post_processor=Ke.fromConfig(L.post_processor),this.decoder=Y.fromConfig(L.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const _e of L.added_tokens){const Ce=new $e(_e);this.added_tokens.push(Ce),this.model.tokens_to_ids.set(Ce.content,Ce.id),this.model.vocab[Ce.id]=Ce.content,Ce.special&&(this.special_tokens.push(Ce.content),this.all_special_ids.push(Ce.id))}if(this.additional_special_tokens=te.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort((_e,Ce)=>Ce.content.length-_e.content.length).map(_e=>`${_e.lstrip?"\\s*":""}(${(0,ue.escapeRegExp)(_e.content)})${_e.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.model_max_length=te.model_max_length,this.remove_space=te.remove_space,this.clean_up_tokenization_spaces=te.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=te.do_lowercase_and_remove_accent??!1,te.padding_side&&(this.padding_side=te.padding_side),this.legacy=!1,this.chat_template=te.chat_template??null,Array.isArray(this.chat_template)){const _e=Object.create(null);for(const{name:Ce,template:rt}of this.chat_template){if(typeof Ce!="string"||typeof rt!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');_e[Ce]=rt}this.chat_template=_e}this._compiled_template_cache=new Map}getToken(...L){for(const te of L){const _e=this._tokenizer_config[te];if(_e)if(typeof _e=="object"){if(_e.__type==="AddedToken")return _e.content;throw Error(`Unknown token: ${_e}`)}else return _e}return null}static async from_pretrained(L,{progress_callback:te=null,config:_e=null,cache_dir:Ce=null,local_files_only:rt=!1,revision:Ct="main",legacy:zt=null}={}){const It=await R(L,{progress_callback:te,config:_e,cache_dir:Ce,local_files_only:rt,revision:Ct,legacy:zt});return new this(...It)}_call(L,{text_pair:te=null,add_special_tokens:_e=!0,padding:Ce=!1,truncation:rt=null,max_length:Ct=null,return_tensor:zt=!0,return_token_type_ids:It=null}={}){const jt=Array.isArray(L);let or;if(jt){if(L.length===0)throw Error("text array must be non-empty");if(te!==null){if(Array.isArray(te)){if(L.length!==te.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");or=L.map((mr,Hr)=>this._encode_plus(mr,{text_pair:te[Hr],add_special_tokens:_e,return_token_type_ids:It}))}else or=L.map(mr=>this._encode_plus(mr,{add_special_tokens:_e,return_token_type_ids:It}))}else{if(L==null)throw Error("text may not be null or undefined");if(Array.isArray(te))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");or=[this._encode_plus(L,{text_pair:te,add_special_tokens:_e,return_token_type_ids:It})]}if(Ct===null?Ce==="max_length"?Ct=this.model_max_length:Ct=(0,de.max)(or.map(mr=>mr.input_ids.length))[0]:rt||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),Ct=Math.min(Ct,this.model_max_length??1/0),Ce||rt)for(let mr=0;mr<or.length;++mr)or[mr].input_ids.length!==Ct&&(or[mr].input_ids.length>Ct?rt&&ke(or[mr],Ct):Ce&&ge(or[mr],Ct,Hr=>Hr==="input_ids"?this.pad_token_id:0,this.padding_side));const Fr={};if(zt){if(!(Ce&&rt)&&or.some(Hr=>{var rn;for(const hr of Object.keys(Hr))if(Hr[hr].length!==((rn=or[0][hr])==null?void 0:rn.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const mr=[or.length,or[0].input_ids.length];for(const Hr of Object.keys(or[0]))Fr[Hr]=new Ee.Tensor("int64",BigInt64Array.from(or.flatMap(rn=>rn[Hr]).map(BigInt)),mr)}else{for(const mr of Object.keys(or[0]))Fr[mr]=or.map(Hr=>Hr[mr]);if(!jt)for(const mr of Object.keys(Fr))Fr[mr]=Fr[mr][0]}return Fr}_encode_text(L){return L===null?null:(this.added_tokens_regex?L.split(this.added_tokens_regex).filter(Ce=>Ce):[L]).map((Ce,rt)=>{if(this.added_tokens.find(zt=>zt.content===Ce)!==void 0)return Ce;{if(this.remove_space===!0&&(Ce=Ce.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(Ce=Me(Ce)),this.normalizer!==null&&(Ce=this.normalizer(Ce)),Ce.length===0)return[];const zt=this.pre_tokenizer!==null?this.pre_tokenizer(Ce,{section_index:rt}):[Ce];return this.model(zt)}}).flat()}_encode_plus(L,{text_pair:te=null,add_special_tokens:_e=!0,return_token_type_ids:Ce=null}={}){const{tokens:rt,token_type_ids:Ct}=this._tokenize_helper(L,{pair:te,add_special_tokens:_e}),zt=this.model.convert_tokens_to_ids(rt),It={input_ids:zt,attention_mask:new Array(zt.length).fill(1)};return(Ce??this.return_token_type_ids)&&Ct&&(It.token_type_ids=Ct),It}_tokenize_helper(L,{pair:te=null,add_special_tokens:_e=!1}={}){const Ce=this._encode_text(L),rt=this._encode_text(te);return this.post_processor?this.post_processor(Ce,rt,{add_special_tokens:_e}):{tokens:(0,ue.mergeArrays)(Ce??[],rt??[])}}tokenize(L,{pair:te=null,add_special_tokens:_e=!1}={}){return this._tokenize_helper(L,{pair:te,add_special_tokens:_e}).tokens}encode(L,{text_pair:te=null,add_special_tokens:_e=!0,return_token_type_ids:Ce=null}={}){return this._encode_plus(L,{text_pair:te,add_special_tokens:_e,return_token_type_ids:Ce}).input_ids}batch_decode(L,te={}){return L instanceof Ee.Tensor&&(L=L.tolist()),L.map(_e=>this.decode(_e,te))}decode(L,te={}){if(L instanceof Ee.Tensor&&(L=we(L)),!Array.isArray(L)||L.length===0||!(0,ue.isIntegralNumber)(L[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(L,te)}decode_single(L,{skip_special_tokens:te=!1,clean_up_tokenization_spaces:_e=null}){let Ce=this.model.convert_ids_to_tokens(L);te&&(Ce=Ce.filter(Ct=>!this.special_tokens.includes(Ct)));let rt=this.decoder?this.decoder(Ce):Ce.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(rt=rt.replaceAll(this.decoder.end_of_word_suffix," "),te&&(rt=rt.trim())),(_e??this.clean_up_tokenization_spaces)&&(rt=N(rt)),rt}get_chat_template({chat_template:L=null,tools:te=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const _e=this.chat_template;if(L!==null&&Object.hasOwn(_e,L))L=_e[L];else if(L===null)if(te!==null&&"tool_use"in _e)L=_e.tool_use;else if("default"in _e)L=_e.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(_e).sort()}.`)}else if(L===null)if(this.chat_template)L=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return L}apply_chat_template(L,{tools:te=null,documents:_e=null,chat_template:Ce=null,add_generation_prompt:rt=!1,tokenize:Ct=!0,padding:zt=!1,truncation:It=!1,max_length:jt=null,return_tensor:or=!0,return_dict:Fr=!1,tokenizer_kwargs:mr={},...Hr}={}){if(Ce=this.get_chat_template({chat_template:Ce,tools:te}),typeof Ce!="string")throw Error(`chat_template must be a string, but got ${typeof Ce}`);let rn=this._compiled_template_cache.get(Ce);rn===void 0&&(rn=new I.Template(Ce),this._compiled_template_cache.set(Ce,rn));const hr=Object.create(null);for(const wn of U){const vn=this.getToken(wn);vn&&(hr[wn]=vn)}const Or=rn.render({messages:L,add_generation_prompt:rt,tools:te,documents:_e,...hr,...Hr});if(Ct){const wn=this._call(Or,{add_special_tokens:!1,padding:zt,truncation:It,max_length:jt,return_tensor:or,...mr});return Fr?wn:wn.input_ids}return Or}}class Ye extends Le{constructor(){super(...arguments);Se(this,"return_token_type_ids",!0)}}class ht extends Le{constructor(){super(...arguments);Se(this,"return_token_type_ids",!0)}}class St extends Le{constructor(){super(...arguments);Se(this,"return_token_type_ids",!0)}}class Et extends Le{constructor(){super(...arguments);Se(this,"return_token_type_ids",!0)}}class Ot extends Le{constructor(){super(...arguments);Se(this,"return_token_type_ids",!0)}}class Tt extends Le{constructor(){super(...arguments);Se(this,"return_token_type_ids",!0)}}class Vt extends Le{constructor(){super(...arguments);Se(this,"return_token_type_ids",!0)}}class qt extends Le{constructor(){super(...arguments);Se(this,"return_token_type_ids",!0)}}class Nt extends Le{constructor(){super(...arguments);Se(this,"return_token_type_ids",!0)}}class je extends Le{}class Ue extends Le{}class vt extends Le{constructor(L,te){super(L,te);Se(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Kt extends Le{constructor(){super(...arguments);Se(this,"return_token_type_ids",!0)}}class dr extends Le{}class Er extends Le{}class Vr extends Le{}class br extends Le{constructor(w,L){super(w,L),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(te=>this.languageRegex.test(te)),this.lang_to_token=te=>te}_build_translation_inputs(w,L,te){return An(this,w,L,te)}}class Ir extends br{}class vr extends Le{}class Cn extends Le{}const qr="▁";class vi extends Le{constructor(L,te){super(L,te);Se(this,"padding_side","left");this.legacy=te.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new f({replacement:qr,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(L){if(L===null)return null;if(this.legacy||L.length===0)return super._encode_text(L);let te=super._encode_text(qr+L.replaceAll(qr," "));return te.length>1&&te[0]===qr&&this.special_tokens.includes(te[1])&&(te=te.slice(1)),te}}class Oi extends Le{}class Kn extends Le{}class zi extends Le{}class Bi extends Le{}class Di extends Le{}class Li extends Le{}class Ri extends Le{}class li extends Le{}class Xn extends Le{}function An(me,w,L,te){if(!("language_codes"in me)||!Array.isArray(me.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in me)||!(me.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in me)||typeof me.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const _e=te.src_lang,Ce=te.tgt_lang;if(!me.language_codes.includes(Ce))throw new Error(`Target language code "${Ce}" is not valid. Must be one of: {${me.language_codes.join(", ")}}`);if(_e!==void 0){if(!me.language_codes.includes(_e))throw new Error(`Source language code "${_e}" is not valid. Must be one of: {${me.language_codes.join(", ")}}`);for(const rt of me.post_processor.config.single)if("SpecialToken"in rt&&me.languageRegex.test(rt.SpecialToken.id)){rt.SpecialToken.id=me.lang_to_token(_e);break}}return te.forced_bos_token_id=me.model.convert_tokens_to_ids([me.lang_to_token(Ce)])[0],me._call(w,L)}class Nn extends Le{constructor(w,L){super(w,L),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(te=>this.languageRegex.test(te)),this.lang_to_token=te=>te}_build_translation_inputs(w,L,te){return An(this,w,L,te)}}class xi extends Le{constructor(w,L){super(w,L),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(te=>this.languageRegex.test(te)).map(te=>te.slice(2,-2)),this.lang_to_token=te=>`__${te}__`}_build_translation_inputs(w,L,te){return An(this,w,L,te)}}class Dn extends Le{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(w,{return_timestamps:L=!1,return_language:te=!1,time_precision:_e=null,force_full_sequences:Ce=!0}={}){if(_e===null)throw Error("Must specify time_precision");let rt=null;const Ct=L==="word";function zt(){return{language:rt,timestamp:[null,null],text:""}}const It=[];let jt=zt(),or=0;const Fr=this.timestamp_begin;let mr=[],Hr=[],rn=!1,hr=null;const Or=new Set(this.all_special_ids);for(const Oe of w){const nn=Oe.tokens,dn=Ct?Oe.token_timestamps:null;let In=null,jn=Fr;if("stride"in Oe){const[Jr,yr,Dr]=Oe.stride;if(or-=yr,hr=Jr-Dr,yr&&(jn=yr/_e+Fr),Dr)for(let Bt=nn.length-1;Bt>=0;--Bt){const Mr=Number(nn[Bt]);if(Mr>=Fr){if(In!==null&&(Mr-Fr)*_e<hr)break;In=Mr}}}let Jt=[],fn=[];for(let Jr=0;Jr<nn.length;++Jr){const yr=Number(nn[Jr]);if(Or.has(yr)){const Dr=this.decode([yr]),Bt=M.WHISPER_LANGUAGE_MAPPING.get(Dr.slice(2,-2));if(Bt!==void 0){if(rt!==null&&Bt!==rt&&!L){mr.push(Jt);const Mr=this.findLongestCommonSequence(mr)[0],ci=this.decode(Mr);jt.text=ci,It.push(jt),mr=[],Jt=[],jt=zt()}rt=jt.language=Bt}}else if(yr>=Fr){const Dr=(yr-Fr)*_e+or,Bt=(0,de.round)(Dr,2);if(In!==null&&yr>=In)rn=!0;else if(rn||mr.length>0&&yr<jn)rn=!1;else if(jt.timestamp[0]===null)jt.timestamp[0]=Bt;else if(Bt!==jt.timestamp[0]){jt.timestamp[1]=Bt,mr.push(Jt),Ct&&Hr.push(fn);const[Mr,ci]=this.findLongestCommonSequence(mr,Hr),Qn=this.decode(Mr);jt.text=Qn,Ct&&(jt.words=this.collateWordTimestamps(Mr,ci,rt)),It.push(jt),mr=[],Jt=[],Hr=[],fn=[],jt=zt()}}else if(Jt.push(yr),Ct){let Dr=(0,de.round)(dn[Jr]+or,2),Bt;if(Jr+1<dn.length){Bt=(0,de.round)(dn[Jr+1]+or,2);const Mr=this.decode([yr]);G.test(Mr)&&(Bt=(0,de.round)(Math.min(Dr+_e,Bt),2))}else Bt=null;fn.push([Dr,Bt])}}if("stride"in Oe){const[Jr,yr,Dr]=Oe.stride;or+=Jr-Dr}Jt.length>0?(mr.push(Jt),Ct&&Hr.push(fn)):mr.every(Jr=>Jr.length===0)&&(jt=zt(),mr=[],Jt=[],Hr=[],fn=[])}if(mr.length>0){if(Ce&&L)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Oe,nn]=this.findLongestCommonSequence(mr,Hr),dn=this.decode(Oe);jt.text=dn,Ct&&(jt.words=this.collateWordTimestamps(Oe,nn,rt)),It.push(jt)}let wn=Object.create(null);const vn=It.map(Oe=>Oe.text).join("");if(L||te){for(let Oe=0;Oe<It.length;++Oe){const nn=It[Oe];L||delete nn.timestamp,te||delete nn.language}if(Ct){const Oe=[];for(const nn of It)for(const dn of nn.words)Oe.push(dn);wn={chunks:Oe}}else wn={chunks:It}}return[vn,wn]}findLongestCommonSequence(w,L=null){let te=w[0],_e=te.length,Ce=[];const rt=Array.isArray(L)&&L.length>0;let Ct=rt?[]:null,zt=rt?L[0]:null;for(let It=1;It<w.length;++It){const jt=w[It];let or=0,Fr=[_e,_e,0,0];const mr=jt.length;for(let Oe=1;Oe<_e+mr;++Oe){const nn=Math.max(0,_e-Oe),dn=Math.min(_e,_e+mr-Oe),In=te.slice(nn,dn),jn=Math.max(0,Oe-_e),Jt=Math.min(mr,Oe),fn=jt.slice(jn,Jt);if(In.length!==fn.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let Jr;rt?Jr=In.filter((Bt,Mr)=>Bt===fn[Mr]&&zt[nn+Mr]<=L[It][jn+Mr]).length:Jr=In.filter((Bt,Mr)=>Bt===fn[Mr]).length;const yr=Oe/1e4,Dr=Jr/Oe+yr;Jr>1&&Dr>or&&(or=Dr,Fr=[nn,dn,jn,Jt])}const[Hr,rn,hr,Or]=Fr,wn=Math.floor((rn+Hr)/2),vn=Math.floor((Or+hr)/2);Ce.push(...te.slice(0,wn)),te=jt.slice(vn),_e=te.length,rt&&(Ct.push(...zt.slice(0,wn)),zt=L[It].slice(vn))}return Ce.push(...te),rt?(Ct.push(...zt),[Ce,Ct]):[Ce,[]]}collateWordTimestamps(w,L,te){const[_e,Ce,rt]=this.combineTokensIntoWords(w,te),Ct=[];for(let zt=0;zt<_e.length;++zt){const It=rt[zt];Ct.push({text:_e[zt],timestamp:[L[It.at(0)][0],L[It.at(-1)][1]]})}return Ct}combineTokensIntoWords(w,L,te=`"'“¡¿([{-`,_e=`"'.。,，!！?？:：”)]}、`){L=L??"english";let Ce,rt,Ct;return["chinese","japanese","thai","lao","myanmar"].includes(L)?[Ce,rt,Ct]=this.splitTokensOnUnicode(w):[Ce,rt,Ct]=this.splitTokensOnSpaces(w),this.mergePunctuations(Ce,rt,Ct,te,_e)}decode(w,L){let te;return L!=null&&L.decode_with_timestamps?(w instanceof Ee.Tensor&&(w=we(w)),te=this.decodeWithTimestamps(w,L)):te=super.decode(w,L),te}decodeWithTimestamps(w,L){const te=(L==null?void 0:L.time_precision)??.02,_e=Array.from(this.all_special_ids).at(-1)+1;let Ce=[[]];for(let rt of w)if(rt=Number(rt),rt>=_e){const Ct=((rt-_e)*te).toFixed(2);Ce.push(`<|${Ct}|>`),Ce.push([])}else Ce[Ce.length-1].push(rt);return Ce=Ce.map(rt=>typeof rt=="string"?rt:super.decode(rt,L)),Ce.join("")}splitTokensOnUnicode(w){const L=this.decode(w,{decode_with_timestamps:!0}),te="�",_e=[],Ce=[],rt=[];let Ct=[],zt=[],It=0;for(let jt=0;jt<w.length;++jt){const or=w[jt];Ct.push(or),zt.push(jt);const Fr=this.decode(Ct,{decode_with_timestamps:!0});(!Fr.includes(te)||L[It+Fr.indexOf(te)]===te)&&(_e.push(Fr),Ce.push(Ct),rt.push(zt),Ct=[],zt=[],It+=Fr.length)}return[_e,Ce,rt]}splitTokensOnSpaces(w){const[L,te,_e]=this.splitTokensOnUnicode(w),Ce=[],rt=[],Ct=[],zt=new RegExp(`^[${O}]$`,"gu");for(let It=0;It<L.length;++It){const jt=L[It],or=te[It],Fr=_e[It],mr=or[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),Hr=jt.startsWith(" "),rn=jt.trim(),hr=zt.test(rn);if(mr||Hr||hr||Ce.length===0)Ce.push(jt),rt.push(or),Ct.push(Fr);else{const Or=Ce.length-1;Ce[Or]+=jt,rt[Or].push(...or),Ct[Or].push(...Fr)}}return[Ce,rt,Ct]}mergePunctuations(w,L,te,_e,Ce){const rt=structuredClone(w),Ct=structuredClone(L),zt=structuredClone(te);let It=rt.length-2,jt=rt.length-1;for(;It>=0;)rt[It].startsWith(" ")&&_e.includes(rt[It].trim())?(rt[jt]=rt[It]+rt[jt],Ct[jt]=(0,ue.mergeArrays)(Ct[It],Ct[jt]),zt[jt]=(0,ue.mergeArrays)(zt[It],zt[jt]),rt[It]="",Ct[It]=[],zt[It]=[]):jt=It,--It;for(It=0,jt=1;jt<rt.length;)!rt[It].endsWith(" ")&&Ce.includes(rt[jt])?(rt[It]+=rt[jt],Ct[It]=(0,ue.mergeArrays)(Ct[It],Ct[jt]),zt[It]=(0,ue.mergeArrays)(zt[It],zt[jt]),rt[jt]="",Ct[jt]=[],zt[jt]=[]):It=jt,++jt;return[rt.filter(or=>or),Ct.filter(or=>or.length>0),zt.filter(or=>or.length>0)]}}class Ti extends Le{}class Ei extends Le{}class Ci extends Le{}class rr extends Le{constructor(w,L){super(w,L),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(te=>this.languageRegex.test(te)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(w){if(w===null)return null;const[L,...te]=w.trim().split(this.languageRegex);if(te.length===0)return super._encode_text(L);if(te.length===2){const[_e,Ce]=te;return this.supported_language_codes.includes(_e)||console.warn(`Unsupported language code "${_e}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,ue.mergeArrays)([_e],super._encode_text(Ce))}}}class ui extends Le{}class Ni extends Le{}class ji extends Le{}class $i extends Le{}class Ui extends Le{}class Vi extends Le{constructor(w,L){super(w,L),this.decoder=new d({})}}class di extends Le{}class Wi{static async from_pretrained(w,{progress_callback:L=null,config:te=null,cache_dir:_e=null,local_files_only:Ce=!1,revision:rt="main",legacy:Ct=null}={}){var Fr;const[zt,It]=await R(w,{progress_callback:L,config:te,cache_dir:_e,local_files_only:Ce,revision:rt,legacy:Ct}),jt=((Fr=It.tokenizer_class)==null?void 0:Fr.replace(/Fast$/,""))??"PreTrainedTokenizer";let or=this.TOKENIZER_CLASS_MAPPING[jt];return or||(console.warn(`Unknown tokenizer class "${jt}", attempting to construct from base class.`),or=Le),new or(zt,It)}}Se(Wi,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:dr,DistilBertTokenizer:je,CamembertTokenizer:Ue,DebertaTokenizer:Ot,DebertaV2Tokenizer:Tt,BertTokenizer:Ye,HerbertTokenizer:Vt,ConvBertTokenizer:qt,RoFormerTokenizer:Nt,XLMTokenizer:vt,ElectraTokenizer:Kt,MobileBertTokenizer:St,SqueezeBertTokenizer:Et,AlbertTokenizer:ht,GPT2Tokenizer:Er,BartTokenizer:Vr,MBartTokenizer:br,MBart50Tokenizer:Ir,RobertaTokenizer:vr,WhisperTokenizer:Dn,CodeGenTokenizer:Ti,CLIPTokenizer:Ei,SiglipTokenizer:Ci,MarianTokenizer:rr,BloomTokenizer:Cn,NllbTokenizer:Nn,M2M100Tokenizer:xi,LlamaTokenizer:vi,CodeLlamaTokenizer:Oi,XLMRobertaTokenizer:Kn,MPNetTokenizer:zi,FalconTokenizer:Bi,GPTNeoXTokenizer:Di,EsmTokenizer:Li,Wav2Vec2CTCTokenizer:ui,BlenderbotTokenizer:Ni,BlenderbotSmallTokenizer:ji,SpeechT5Tokenizer:$i,NougatTokenizer:Ui,VitsTokenizer:Vi,Qwen2Tokenizer:Ri,GemmaTokenizer:li,Grok1Tokenizer:Xn,CohereTokenizer:di,PreTrainedTokenizer:Le})},"./src/utils/audio.js":(De,ae,z)=>{z.r(ae),z.d(ae,{hamming:()=>M,hanning:()=>I,mel_filter_bank:()=>ie,read_audio:()=>Ee,spectrogram:()=>O,window_function:()=>G});var F=z("./src/utils/hub.js"),ue=z("./src/utils/maths.js"),oe=z("./src/utils/core.js"),de=z("./src/utils/tensor.js");async function Ee(P,ye){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const $e=await(await(0,F.getFile)(P)).arrayBuffer(),Fe=new AudioContext({sampleRate:ye});typeof ye>"u"&&console.warn(`No sampling rate provided, using default of ${Fe.sampleRate}Hz.`);const Ve=await Fe.decodeAudioData($e);let Ne;if(Ve.numberOfChannels===2){const _t=Math.sqrt(2),ct=Ve.getChannelData(0),wt=Ve.getChannelData(1);Ne=new Float32Array(ct.length);for(let Te=0;Te<Ve.length;++Te)Ne[Te]=_t*(ct[Te]+wt[Te])/2}else Ne=Ve.getChannelData(0);return Ne}function j(P,ye){if(P<1)return new Float64Array;if(P===1)return new Float64Array([1]);const $e=1-ye,Fe=2*Math.PI/(P-1),Ve=new Float64Array(P);for(let Ne=0;Ne<P;++Ne)Ve[Ne]=ye-$e*Math.cos(Ne*Fe);return Ve}function I(P){return j(P,.5)}function M(P){return j(P,.54)}const R={htk:P=>2595*Math.log10(1+P/700),kaldi:P=>1127*Math.log(1+P/700),slaney:(P,ye=1e3,$e=15,Fe=27/Math.log(6.4))=>P>=ye?$e+Math.log(P/ye)*Fe:3*P/200};function Q(P,ye="htk"){const $e=R[ye];if(!$e)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof P=="number"?$e(P):P.map(Fe=>$e(Fe))}const ne={htk:P=>700*(10**(P/2595)-1),kaldi:P=>700*(Math.exp(P/1127)-1),slaney:(P,ye=1e3,$e=15,Fe=Math.log(6.4)/27)=>P>=$e?ye*Math.exp(Fe*(P-$e)):200*P/3};function xe(P,ye="htk"){const $e=ne[ye];if(!$e)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof P=="number"?$e(P):P.map(Fe=>$e(Fe))}function we(P,ye){const $e=Float64Array.from({length:ye.length-1},(_t,ct)=>ye[ct+1]-ye[ct]),Fe=Array.from({length:P.length},()=>new Array(ye.length));for(let _t=0;_t<P.length;++_t){const ct=Fe[_t];for(let wt=0;wt<ye.length;++wt)ct[wt]=ye[wt]-P[_t]}const Ve=ye.length-2,Ne=Array.from({length:Ve},()=>new Array(P.length));for(let _t=0;_t<P.length;++_t){const ct=Fe[_t];for(let wt=0;wt<Ve;++wt){const Te=-ct[wt]/$e[wt],K=ct[wt+2]/$e[wt+1];Ne[wt][_t]=Math.max(0,Math.min(Te,K))}}return Ne}function N(P,ye,$e){const Fe=(ye-P)/($e-1);return Float64Array.from({length:$e},(Ve,Ne)=>P+Fe*Ne)}function ie(P,ye,$e,Fe,Ve,Ne=null,_t="htk",ct=!1){if(Ne!==null&&Ne!=="slaney")throw new Error('norm must be one of null or "slaney"');const wt=Q($e,_t),Te=Q(Fe,_t),K=N(wt,Te,ye+2);let be=xe(K,_t),Ie;if(ct){const gt=Ve/(P*2);Ie=Q(Float64Array.from({length:P},(ce,Ge)=>Ge*gt),_t),be=K}else Ie=N(0,Math.floor(Ve/2),P);const Ze=we(Ie,be);if(Ne!==null&&Ne==="slaney")for(let gt=0;gt<ye;++gt){const ce=Ze[gt],Ge=2/(be[gt+2]-be[gt]);for(let pt=0;pt<P;++pt)ce[pt]*=Ge}return Ze}function Me(P,ye,$e){const Fe=new P.constructor(P.length+ye+$e),Ve=P.length-1;for(let Ne=0;Ne<P.length;++Ne)Fe[ye+Ne]=P[Ne];for(let Ne=1;Ne<=ye;++Ne)Fe[ye-Ne]=P[(0,oe.calculateReflectOffset)(Ne,Ve)];for(let Ne=1;Ne<=$e;++Ne)Fe[Ve+ye+Ne]=P[(0,oe.calculateReflectOffset)(Ve-Ne,Ve)];return Fe}function J(P,ye,$e,Fe,Ve){if($e<=0)throw new Error("reference must be greater than zero");if(Fe<=0)throw new Error("min_value must be greater than zero");$e=Math.max(Fe,$e);const Ne=Math.log10($e);for(let _t=0;_t<P.length;++_t)P[_t]=ye*Math.log10(Math.max(Fe,P[_t])-Ne);if(Ve!==null){if(Ve<=0)throw new Error("db_range must be greater than zero");const _t=(0,ue.max)(P)[0]-Ve;for(let ct=0;ct<P.length;++ct)P[ct]=Math.max(P[ct],_t)}return P}function Z(P,ye=1,$e=1e-5,Fe=null){return J(P,20,ye,$e,Fe)}function H(P,ye=1,$e=1e-10,Fe=null){return J(P,10,ye,$e,Fe)}async function O(P,ye,$e,Fe,{fft_length:Ve=null,power:Ne=1,center:_t=!0,pad_mode:ct="reflect",onesided:wt=!0,preemphasis:Te=null,mel_filters:K=null,mel_floor:be=1e-10,log_mel:Ie=null,reference:Ze=1,min_value:gt=1e-10,db_range:ce=null,remove_dc_offset:Ge=null,min_num_frames:pt=null,max_num_frames:qe=null,do_pad:yt=!0,transpose:$t=!1}={}){const st=ye.length;if(Ve===null&&(Ve=$e),$e>Ve)throw Error(`frame_length (${$e}) may not be larger than fft_length (${Ve})`);if(st!==$e)throw new Error(`Length of the window (${st}) must equal frame_length (${$e})`);if(Fe<=0)throw new Error("hop_length must be greater than zero");if(Ne===null&&K!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(_t){if(ct!=="reflect")throw new Error(`pad_mode="${ct}" not implemented yet.`);const Y=Math.floor((Ve-1)/2)+1;P=Me(P,Y,Y)}let re=Math.floor(1+Math.floor((P.length-$e)/Fe));pt!==null&&re<pt&&(re=pt);const ze=wt?Math.floor(Ve/2)+1:Ve;let Je=re,lt=re;qe!==null&&(qe>re?yt&&(lt=qe):lt=Je=qe);const Qe=new ue.FFT(Ve),Ke=new Float64Array(Ve),ft=new Float64Array(Qe.outputBufferSize),bt=new Float32Array(ze*lt);for(let Y=0;Y<Je;++Y){const A=Y*Fe,ee=Math.min(P.length-A,$e);ee!==$e&&Ke.fill(0,0,$e);for(let ve=0;ve<ee;++ve)Ke[ve]=P[A+ve];if(Ge){let ve=0;for(let at=0;at<ee;++at)ve+=Ke[at];const ot=ve/ee;for(let at=0;at<ee;++at)Ke[at]-=ot}if(Te!==null){for(let ve=ee-1;ve>=1;--ve)Ke[ve]-=Te*Ke[ve-1];Ke[0]*=1-Te}for(let ve=0;ve<ye.length;++ve)Ke[ve]*=ye[ve];Qe.realTransform(ft,Ke);for(let ve=0;ve<ze;++ve){const ot=ve<<1;bt[ve*lt+Y]=ft[ot]**2+ft[ot+1]**2}}if(Ne!==null&&Ne!==2){const Y=2/Ne;for(let A=0;A<bt.length;++A)bt[A]**=Y}const Ft=K.length;let Pt=await(0,de.matmul)(new de.Tensor("float32",K.flat(),[Ft,ze]),new de.Tensor("float32",bt,[ze,lt]));$t&&(Pt=Pt.transpose(1,0));const E=Pt.data;for(let Y=0;Y<E.length;++Y)E[Y]=Math.max(be,E[Y]);if(Ne!==null&&Ie!==null){const Y=Math.min(E.length,Je*Ft);switch(Ie){case"log":for(let A=0;A<Y;++A)E[A]=Math.log(E[A]);break;case"log10":for(let A=0;A<Y;++A)E[A]=Math.log10(E[A]);break;case"dB":if(Ne===1)Z(E,Ze,gt,ce);else if(Ne===2)H(E,Ze,gt,ce);else throw new Error(`Cannot use log_mel option '${Ie}' with power ${Ne}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${Ie}'`)}}return Pt}function G(P,ye,{periodic:$e=!0,frame_length:Fe=null,center:Ve=!0}={}){const Ne=$e?P+1:P;let _t;switch(ye){case"boxcar":_t=new Float64Array(Ne).fill(1);break;case"hann":case"hann_window":_t=I(Ne);break;case"hamming":_t=M(Ne);break;case"povey":_t=I(Ne).map(ct=>Math.pow(ct,.85));break;default:throw new Error(`Unknown window type ${ye}.`)}if($e&&(_t=_t.subarray(0,P)),Fe===null)return _t;if(P>Fe)throw new Error(`Length of the window (${P}) may not be larger than frame_length (${Fe})`);return _t}},"./src/utils/constants.js":(De,ae,z)=>{z.r(ae),z.d(ae,{GITHUB_ISSUE_URL:()=>F});const F="https://github.com/huggingface/transformers.js/issues/new/choose"},"./src/utils/core.js":(De,ae,z)=>{z.r(ae),z.d(ae,{calculateDimensions:()=>j,calculateReflectOffset:()=>Q,dispatchCallback:()=>F,escapeRegExp:()=>oe,isIntegralNumber:()=>Ee,isTypedArray:()=>de,len:()=>xe,mergeArrays:()=>M,pick:()=>ne,pop:()=>I,product:()=>R,reverseDictionary:()=>ue});function F(we,N){we&&we(N)}function ue(we){return Object.fromEntries(Object.entries(we).map(([N,ie])=>[ie,N]))}function oe(we){return we.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function de(we){var N,ie,Me;return((Me=(ie=(N=we==null?void 0:we.prototype)==null?void 0:N.__proto__)==null?void 0:ie.constructor)==null?void 0:Me.name)==="TypedArray"}function Ee(we){return Number.isInteger(we)||typeof we=="bigint"}function j(we){const N=[];let ie=we;for(;Array.isArray(ie);)N.push(ie.length),ie=ie[0];return N}function I(we,N,ie=void 0){const Me=we[N];if(Me!==void 0)return delete we[N],Me;if(ie===void 0)throw Error(`Key ${N} does not exist in object.`);return ie}function M(...we){return Array.prototype.concat.apply([],we)}function R(...we){return we.reduce((N,ie)=>N.flatMap(Me=>ie.map(J=>[Me,J])))}function Q(we,N){return Math.abs((we+N)%(2*N)-N)}function ne(we,N){return Object.assign({},...N.map(ie=>{if(we[ie]!==void 0)return{[ie]:we[ie]}}))}function xe(we){let N=0;for(const ie of we)++N;return N}},"./src/utils/data-structures.js":(De,ae,z)=>{z.r(ae),z.d(ae,{CharTrie:()=>ue,PriorityQueue:()=>F,TokenLattice:()=>de});class F{constructor(I=(R,Q)=>R>Q,M=1/0){this._heap=[],this._comparator=I,this._maxSize=M}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...I){return this.extend(I)}extend(I){for(const M of I)if(this.size<this._maxSize)this._heap.push(M),this._siftUp();else{const R=this._smallest();this._comparator(M,this._heap[R])&&(this._heap[R]=M,this._siftUpFrom(R))}return this.size}pop(){const I=this.peek(),M=this.size-1;return M>0&&this._swap(0,M),this._heap.pop(),this._siftDown(),I}replace(I){const M=this.peek();return this._heap[0]=I,this._siftDown(),M}_parent(I){return(I+1>>>1)-1}_left(I){return(I<<1)+1}_right(I){return I+1<<1}_greater(I,M){return this._comparator(this._heap[I],this._heap[M])}_swap(I,M){const R=this._heap[I];this._heap[I]=this._heap[M],this._heap[M]=R}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(I){for(;I>0&&this._greater(I,this._parent(I));)this._swap(I,this._parent(I)),I=this._parent(I)}_siftDown(){let I=0;for(;this._left(I)<this.size&&this._greater(this._left(I),I)||this._right(I)<this.size&&this._greater(this._right(I),I);){const M=this._right(I)<this.size&&this._greater(this._right(I),this._left(I))?this._right(I):this._left(I);this._swap(I,M),I=M}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class ue{constructor(){this.root=oe.default()}extend(I){for(const M of I)this.push(M)}push(I){let M=this.root;for(const R of I){let Q=M.children.get(R);Q===void 0&&(Q=oe.default(),M.children.set(R,Q)),M=Q}M.isLeaf=!0}*commonPrefixSearch(I){let M=this.root;if(M===void 0)return;let R="";for(const Q of I){if(R+=Q,M=M.children.get(Q),M===void 0)return;M.isLeaf&&(yield R)}}}class oe{constructor(I,M){this.isLeaf=I,this.children=M}static default(){return new oe(!1,new Map)}}class de{constructor(I,M,R){this.chars=Array.from(I),this.len=this.chars.length,this.bosTokenId=M,this.eosTokenId=R,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const Q=new Ee(this.bosTokenId,0,0,0,0),ne=new Ee(this.eosTokenId,1,this.len,0,0);this.nodes.push(Q.clone()),this.nodes.push(ne.clone()),this.beginNodes[this.len].push(ne),this.endNodes[0].push(Q)}insert(I,M,R,Q){const ne=this.nodes.length,xe=new Ee(Q,ne,I,M,R);this.beginNodes[I].push(xe),this.endNodes[I+M].push(xe),this.nodes.push(xe)}viterbi(){const I=this.len;let M=0;for(;M<=I;){if(this.beginNodes[M].length==0)return[];for(let we of this.beginNodes[M]){we.prev=null;let N=0,ie=null;for(let Me of this.endNodes[M]){const J=Me.backtraceScore+we.score;(ie===null||J>N)&&(ie=Me.clone(),N=J)}if(ie!==null)we.prev=ie,we.backtraceScore=N;else return[]}++M}const R=[],ne=this.beginNodes[I][0].prev;if(ne===null)return[];let xe=ne.clone();for(;xe.prev!==null;)R.push(xe.clone()),xe=xe.clone().prev.clone();return R.reverse(),R}piece(I){return this.chars.slice(I.pos,I.pos+I.length).join("")}tokens(){return this.viterbi().map(M=>this.piece(M))}tokenIds(){return this.viterbi().map(M=>M.tokenId)}}class Ee{constructor(I,M,R,Q,ne){this.tokenId=I,this.nodeId=M,this.pos=R,this.length=Q,this.score=ne,this.prev=null,this.backtraceScore=0}clone(){const I=new Ee(this.tokenId,this.nodeId,this.pos,this.length,this.score);return I.prev=this.prev,I.backtraceScore=this.backtraceScore,I}}},"./src/utils/devices.js":(De,ae,z)=>{z.r(ae),z.d(ae,{DEVICE_TYPES:()=>F});const F=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(De,ae,z)=>{z.r(ae),z.d(ae,{DATA_TYPES:()=>de,DEFAULT_DEVICE_DTYPE_MAPPING:()=>Ee,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>j,isWebGpuFp16Supported:()=>oe});var F=z("./src/env.js"),ue=z("./src/utils/devices.js");const oe=function(){let I;return async function(){if(I===void 0)if(!F.apis.IS_WEBGPU_AVAILABLE)I=!1;else try{I=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{I=!1}return I}}(),de=Object.freeze({fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),Ee=Object.freeze({[ue.DEVICE_TYPES.wasm]:de.q8}),j=Object.freeze({[de.fp32]:"",[de.fp16]:"_fp16",[de.int8]:"_int8",[de.uint8]:"_uint8",[de.q8]:"_quantized",[de.q4]:"_q4",[de.q4f16]:"_q4f16",[de.bnb4]:"_bnb4"})},"./src/utils/generic.js":(De,ae,z)=>{z.r(ae),z.d(ae,{Callable:()=>F});const F=class{constructor(){let ue=function(...oe){return ue._call(...oe)};return Object.setPrototypeOf(ue,new.target.prototype)}_call(...ue){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(De,ae,z)=>{z.r(ae),z.d(ae,{getFile:()=>M,getModelFile:()=>we,getModelJSON:()=>N});var F=z("?7a2c"),ue=z("?a42a"),oe=z("./src/env.js"),de=z("./src/utils/core.js");const Ee={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class j{constructor(Z){if(this.filePath=Z,this.headers=new Headers,this.exists=F.existsSync(Z),this.exists){this.status=200,this.statusText="OK";let H=F.statSync(Z);this.headers.set("content-length",H.size.toString()),this.updateContentType();let O=this;this.body=new ReadableStream({start(G){O.arrayBuffer().then(P=>{G.enqueue(new Uint8Array(P)),G.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const Z=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",Ee[Z]??"application/octet-stream")}clone(){let Z=new j(this.filePath);return Z.exists=this.exists,Z.status=this.status,Z.statusText=this.statusText,Z.headers=new Headers(this.headers),Z}async arrayBuffer(){return(await F.promises.readFile(this.filePath)).buffer}async blob(){const Z=await F.promises.readFile(this.filePath);return new Blob([Z],{type:this.headers.get("content-type")})}async text(){return await F.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function I(J,Z=null,H=null){let O;try{O=new URL(J)}catch{return!1}return!(Z&&!Z.includes(O.protocol)||H&&!H.includes(O.hostname))}async function M(J){var Z;if(oe.env.useFS&&!I(J,["http:","https:","blob:"]))return new j(J);if(typeof Hn<"u"&&((Z=Hn==null?void 0:Hn.release)==null?void 0:Z.name)==="node"){const H=!!(Mi!=null&&Mi.TESTING_REMOTELY),O=oe.env.version,G=new Headers;if(G.set("User-Agent",`transformers.js/${O}; is_ci/${H};`),I(J,["http:","https:"],["huggingface.co","hf.co"])){const ye=(Mi==null?void 0:Mi.HF_TOKEN)??(Mi==null?void 0:Mi.HF_ACCESS_TOKEN);ye&&G.set("Authorization",`Bearer ${ye}`)}return fetch(J,{headers:G})}else return fetch(J)}const R={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function Q(J,Z,H){if(!H)return null;const O=R[J]??`Error (${J}) occurred while trying to load file`;throw Error(`${O}: "${Z}".`)}class ne{constructor(Z){this.path=Z}async match(Z){let H=ue.join(this.path,Z),O=new j(H);if(O.exists)return O}async put(Z,H){const O=pm.from(await H.arrayBuffer());let G=ue.join(this.path,Z);try{await F.promises.mkdir(ue.dirname(G),{recursive:!0}),await F.promises.writeFile(G,O)}catch(P){console.warn("An error occurred while writing the file to cache:",P)}}}async function xe(J,...Z){for(let H of Z)try{let O=await J.match(H);if(O)return O}catch{continue}}async function we(J,Z,H=!0,O={}){if(!oe.env.allowLocalModels){if(O.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!oe.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,de.dispatchCallback)(O.progress_callback,{status:"initiate",name:J,file:Z});let G;if(!G&&oe.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{G=await caches.open("transformers-cache")}catch(Ie){console.warn("An error occurred while opening the browser cache:",Ie)}}if(!G&&oe.env.useFSCache&&(G=new ne(O.cache_dir??oe.env.cacheDir)),!G&&oe.env.useCustomCache){if(!oe.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!oe.env.customCache.match||!oe.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");G=oe.env.customCache}const P=O.revision??"main";let ye=Me(J,Z),$e=Me(oe.env.localModelPath,ye),Fe=Me(oe.env.remoteHost,oe.env.remotePathTemplate.replaceAll("{model}",J).replaceAll("{revision}",encodeURIComponent(P)),Z),Ve=P==="main"?ye:Me(J,P,Z),Ne,_t=G instanceof ne?Ve:Fe,ct=!1,wt;G&&(wt=await xe(G,$e,_t));const Te=wt!==void 0;if(wt===void 0){if(oe.env.allowLocalModels)if(I(ye,["http:","https:"])){if(O.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${ye}.`);if(!oe.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${ye}.`)}else try{wt=await M($e),Ne=$e}catch(Ze){console.warn(`Unable to load from local path "${$e}": "${Ze}"`)}if(wt===void 0||wt.status===404){if(O.local_files_only||!oe.env.allowRemoteModels){if(H)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${$e}".`);return null}if(wt=await M(Fe),wt.status!==200)return Q(wt.status,Fe,H);Ne=_t}ct=G&&typeof Response<"u"&&wt instanceof Response&&wt.status===200}(0,de.dispatchCallback)(O.progress_callback,{status:"download",name:J,file:Z});const K={status:"progress",name:J,file:Z};let be;return O.progress_callback?Te&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(be=new Uint8Array(await wt.arrayBuffer()),(0,de.dispatchCallback)(O.progress_callback,{...K,progress:100,loaded:be.length,total:be.length})):be=await ie(wt,Ie=>{(0,de.dispatchCallback)(O.progress_callback,{...K,...Ie})}):be=new Uint8Array(await wt.arrayBuffer()),ct&&Ne&&await G.match(Ne)===void 0&&await G.put(Ne,new Response(be,{headers:wt.headers})).catch(Ie=>{console.warn(`Unable to add response to browser cache: ${Ie}.`)}),(0,de.dispatchCallback)(O.progress_callback,{status:"done",name:J,file:Z}),be}async function N(J,Z,H=!0,O={}){let G=await we(J,Z,H,O);if(G===null)return{};let ye=new TextDecoder("utf-8").decode(G);return JSON.parse(ye)}async function ie(J,Z){const H=J.headers.get("Content-Length");H===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let O=parseInt(H??"0"),G=new Uint8Array(O),P=0;const ye=J.body.getReader();async function $e(){const{done:Fe,value:Ve}=await ye.read();if(Fe)return;let Ne=P+Ve.length;if(Ne>O){O=Ne;let ct=new Uint8Array(O);ct.set(G),G=ct}G.set(Ve,P),P=Ne;const _t=P/O*100;return Z({progress:_t,loaded:P,total:O}),$e()}return await $e(),G}function Me(...J){return J=J.map((Z,H)=>(H&&(Z=Z.replace(new RegExp("^/"),"")),H!==J.length-1&&(Z=Z.replace(new RegExp("/$"),"")),Z)),J.join("/")}},"./src/utils/image.js":(De,ae,z)=>{z.r(ae),z.d(ae,{RawImage:()=>xe});var F=z("./src/utils/hub.js"),ue=z("./src/env.js"),oe=z("./src/utils/tensor.js"),de=z("?2b25");const Ee=typeof self<"u",j=Ee&&self.constructor.name==="DedicatedWorkerGlobalScope";let I,M,R;if(Ee)I=(we,N)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(we,N)},R=self.createImageBitmap,M=self.ImageData;else if(de)R=async we=>{const ie=(await we.metadata()).channels,{data:Me,info:J}=await we.rotate().raw().toBuffer({resolveWithObject:!0}),Z=new xe(new Uint8ClampedArray(Me),J.width,J.height,J.channels);return ie!==void 0&&ie!==J.channels&&Z.convert(ie),Z};else throw new Error("Unable to load image processing library.");const Q={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},ne=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class xe{constructor(N,ie,Me,J){this.data=N,this.width=ie,this.height=Me,this.channels=J}get size(){return[this.width,this.height]}static async read(N){if(N instanceof xe)return N;if(typeof N=="string"||N instanceof URL)return await this.fromURL(N);throw new Error(`Unsupported input type: ${typeof N}`)}static fromCanvas(N){if(!Ee)throw new Error("fromCanvas() is only supported in browser environments.");const Me=N.getContext("2d").getImageData(0,0,N.width,N.height).data;return new xe(Me,N.width,N.height,4)}static async fromURL(N){const ie=await(0,F.getFile)(N);if(ie.status!==200)throw new Error(`Unable to read image from "${N}" (${ie.status} ${ie.statusText})`);const Me=await ie.blob();return this.fromBlob(Me)}static async fromBlob(N){if(Ee){const ie=await R(N),Me=I(ie.width,ie.height).getContext("2d");return Me.drawImage(ie,0,0),new this(Me.getImageData(0,0,ie.width,ie.height).data,ie.width,ie.height,4)}else{const ie=de(await N.arrayBuffer());return await R(ie)}}static fromTensor(N,ie="CHW"){if(N.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${N.dims.length} dimensions.`);if(ie==="CHW")N=N.transpose(1,2,0);else if(ie!=="HWC")throw new Error(`Unsupported channel format: ${ie}`);if(!(N.data instanceof Uint8ClampedArray||N.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${N.type}`);switch(N.dims[2]){case 1:case 2:case 3:case 4:return new xe(N.data,N.dims[1],N.dims[0],N.dims[2]);default:throw new Error(`Unsupported number of channels: ${N.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const N=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let ie=0,Me=0;ie<this.data.length;ie+=this.channels){const J=this.data[ie],Z=this.data[ie+1],H=this.data[ie+2];N[Me++]=Math.round(.2989*J+.587*Z+.114*H)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(N,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const N=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let ie=0,Me=0;ie<this.data.length;++ie)N[Me++]=this.data[ie],N[Me++]=this.data[ie],N[Me++]=this.data[ie];break;case 4:for(let ie=0,Me=0;ie<this.data.length;ie+=4)N[Me++]=this.data[ie],N[Me++]=this.data[ie+1],N[Me++]=this.data[ie+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(N,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const N=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let ie=0,Me=0;ie<this.data.length;++ie)N[Me++]=this.data[ie],N[Me++]=this.data[ie],N[Me++]=this.data[ie],N[Me++]=255;break;case 3:for(let ie=0,Me=0;ie<this.data.length;ie+=3)N[Me++]=this.data[ie],N[Me++]=this.data[ie+1],N[Me++]=this.data[ie+2],N[Me++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(N,this.width,this.height,4)}async resize(N,ie,{resample:Me=2}={}){let J=Q[Me]??Me;if(Ee){const Z=this.channels,H=this.toCanvas(),O=I(N,ie).getContext("2d");return O.drawImage(H,0,0,N,ie),new xe(O.getImageData(0,0,N,ie).data,N,ie,4).convert(Z)}else{let Z=this.toSharp();switch(J){case"box":case"hamming":(J==="box"||J==="hamming")&&(console.warn(`Resampling method ${J} is not yet supported. Using bilinear instead.`),J="bilinear");case"nearest":case"bilinear":case"bicubic":Z=Z.affine([N/this.width,0,0,ie/this.height],{interpolator:J});break;case"lanczos":Z=Z.resize({width:N,height:ie,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${J} is not supported.`)}return await R(Z)}}async pad([N,ie,Me,J]){if(N=Math.max(N,0),ie=Math.max(ie,0),Me=Math.max(Me,0),J=Math.max(J,0),N===0&&ie===0&&Me===0&&J===0)return this;if(Ee){const Z=this.channels,H=this.toCanvas(),O=this.width+N+ie,G=this.height+Me+J,P=I(O,G).getContext("2d");return P.drawImage(H,0,0,this.width,this.height,N,Me,O,G),new xe(P.getImageData(0,0,O,G).data,O,G,4).convert(Z)}else{const Z=this.toSharp().extend({left:N,right:ie,top:Me,bottom:J});return await R(Z)}}async crop([N,ie,Me,J]){if(N=Math.max(N,0),ie=Math.max(ie,0),Me=Math.min(Me,this.width-1),J=Math.min(J,this.height-1),N===0&&ie===0&&Me===this.width-1&&J===this.height-1)return this;const Z=Me-N+1,H=J-ie+1;if(Ee){const O=this.channels,G=this.toCanvas(),P=I(Z,H).getContext("2d");return P.drawImage(G,N,ie,Z,H,0,0,Z,H),new xe(P.getImageData(0,0,Z,H).data,Z,H,4).convert(O)}else{const O=this.toSharp().extract({left:N,top:ie,width:Z,height:H});return await R(O)}}async center_crop(N,ie){if(this.width===N&&this.height===ie)return this;const Me=(this.width-N)/2,J=(this.height-ie)/2;if(Ee){const Z=this.channels,H=this.toCanvas(),O=I(N,ie).getContext("2d");let G=0,P=0,ye=0,$e=0;return Me>=0?G=Me:ye=-Me,J>=0?P=J:$e=-J,O.drawImage(H,G,P,N,ie,ye,$e,N,ie),new xe(O.getImageData(0,0,N,ie).data,N,ie,4).convert(Z)}else{let Z=this.toSharp();if(Me>=0&&J>=0)Z=Z.extract({left:Math.floor(Me),top:Math.floor(J),width:N,height:ie});else if(Me<=0&&J<=0){const H=Math.floor(-J),O=Math.floor(-Me);Z=Z.extend({top:H,left:O,right:N-this.width-O,bottom:ie-this.height-H})}else{let H=[0,0],O=0;J<0?(H[0]=Math.floor(-J),H[1]=ie-this.height-H[0]):O=Math.floor(J);let G=[0,0],P=0;Me<0?(G[0]=Math.floor(-Me),G[1]=N-this.width-G[0]):P=Math.floor(Me),Z=Z.extend({top:H[0],bottom:H[1],left:G[0],right:G[1]}).extract({left:P,top:O,width:N,height:ie})}return await R(Z)}}async toBlob(N="image/png",ie=1){if(!Ee)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:N,quality:ie})}toTensor(N="CHW"){let ie=new oe.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(N!=="HWC")if(N==="CHW")ie=ie.permute(2,0,1);else throw new Error(`Unsupported channel format: ${N}`);return ie}toCanvas(){if(!Ee)throw new Error("toCanvas() is only supported in browser environments.");const N=this.clone().rgba(),ie=I(N.width,N.height),Me=new M(N.data,N.width,N.height);return ie.getContext("2d").putImageData(Me,0,0),ie}_update(N,ie,Me,J=null){return this.data=N,this.width=ie,this.height=Me,J!==null&&(this.channels=J),this}clone(){return new xe(this.data.slice(),this.width,this.height,this.channels)}convert(N){if(this.channels===N)return this;switch(N){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(N){if(Ee){if(j)throw new Error("Unable to save an image from a Web Worker.");const ie=N.split(".").pop().toLowerCase(),Me=ne.get(ie)??"image/png",J=await this.toBlob(Me),Z=URL.createObjectURL(J),H=document.createElement("a");H.href=Z,H.download=N,H.click(),H.remove()}else{if(ue.env.useFS)return await this.toSharp().toFile(N);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(Ee)throw new Error("toSharp() is only supported in server-side environments.");return de(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}},"./src/utils/maths.js":(De,ae,z)=>{z.r(ae),z.d(ae,{FFT:()=>we,bankers_round:()=>Me,cos_sim:()=>j,dot:()=>Ee,dynamic_time_warping:()=>J,interpolate_data:()=>F,log_softmax:()=>de,magnitude:()=>I,max:()=>R,medianFilter:()=>N,min:()=>M,permute_data:()=>ue,round:()=>ie,softmax:()=>oe});function F(Z,[H,O,G],[P,ye],$e="bilinear",Fe=!1){const Ve=ye/G,Ne=P/O,_t=new Z.constructor(P*ye*H),ct=O*G,wt=P*ye;for(let Te=0;Te<P;++Te)for(let K=0;K<ye;++K){const be=Te*ye+K,Ie=(K+.5)/Ve-.5,Ze=(Te+.5)/Ne-.5;let gt=Math.floor(Ie),ce=Math.floor(Ze);const Ge=Math.min(gt+1,G-1),pt=Math.min(ce+1,O-1);gt=Math.max(gt,0),ce=Math.max(ce,0);const qe=Ie-gt,yt=Ze-ce,$t=(1-qe)*(1-yt),st=qe*(1-yt),re=(1-qe)*yt,ze=qe*yt,Je=ce*G,lt=pt*G,Qe=Je+gt,Ke=Je+Ge,ft=lt+gt,bt=lt+Ge;for(let Ft=0;Ft<H;++Ft){const Pt=Ft*ct;_t[Ft*wt+be]=$t*Z[Pt+Qe]+st*Z[Pt+Ke]+re*Z[Pt+ft]+ze*Z[Pt+bt]}}return _t}function ue(Z,H,O){const G=new Array(O.length),P=new Array(O.length);for(let Fe=O.length-1,Ve=1;Fe>=0;--Fe)P[Fe]=Ve,G[Fe]=H[O[Fe]],Ve*=G[Fe];const ye=O.map((Fe,Ve)=>P[O.indexOf(Ve)]),$e=new Z.constructor(Z.length);for(let Fe=0;Fe<Z.length;++Fe){let Ve=0;for(let Ne=H.length-1,_t=Fe;Ne>=0;--Ne)Ve+=_t%H[Ne]*ye[Ne],_t=Math.floor(_t/H[Ne]);$e[Ve]=Z[Fe]}return[$e,G]}function oe(Z){const H=R(Z)[0],O=Z.map(ye=>Math.exp(ye-H)),G=O.reduce((ye,$e)=>ye+$e,0);return O.map(ye=>ye/G)}function de(Z){const H=R(Z)[0];let O=0;for(let ye=0;ye<Z.length;++ye)O+=Math.exp(Z[ye]-H);const G=Math.log(O);return Z.map(ye=>ye-H-G)}function Ee(Z,H){let O=0;for(let G=0;G<Z.length;++G)O+=Z[G]*H[G];return O}function j(Z,H){const O=Ee(Z,H),G=I(Z),P=I(H);return O/(G*P)}function I(Z){return Math.sqrt(Z.reduce((H,O)=>H+O*O,0))}function M(Z){if(Z.length===0)throw Error("Array must not be empty");let H=Z[0],O=0;for(let G=1;G<Z.length;++G)Z[G]<H&&(H=Z[G],O=G);return[H,O]}function R(Z){if(Z.length===0)throw Error("Array must not be empty");let H=Z[0],O=0;for(let G=1;G<Z.length;++G)Z[G]>H&&(H=Z[G],O=G);return[Number(H),O]}function Q(Z){return Z>0&&(Z&Z-1)===0}class ne{constructor(H){if(this.size=H|0,this.size<=1||!Q(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=H<<1,this.table=new Float64Array(this.size*2);for(let G=0;G<this.table.length;G+=2){const P=Math.PI*G/this.size;this.table[G]=Math.cos(P),this.table[G+1]=-Math.sin(P)}let O=0;for(let G=1;this.size>G;G<<=1)++O;this._width=O%2===0?O-1:O,this._bitrev=new Int32Array(1<<this._width);for(let G=0;G<this._bitrev.length;++G){this._bitrev[G]=0;for(let P=0;P<this._width;P+=2){const ye=this._width-P-2;this._bitrev[G]|=(G>>>P&3)<<ye}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(H,O){const G=O||new Array(H.length>>>1);for(let P=0;P<H.length;P+=2)G[P>>>1]=H[P];return G}toComplexArray(H,O){const G=O||this.createComplexArray();for(let P=0;P<G.length;P+=2)G[P]=H[P>>>1],G[P+1]=0;return G}transform(H,O){if(H===O)throw new Error("Input and output buffers must be different");this._transform4(H,O,1)}realTransform(H,O){if(H===O)throw new Error("Input and output buffers must be different");this._realTransform4(H,O,1)}inverseTransform(H,O){if(H===O)throw new Error("Input and output buffers must be different");this._transform4(H,O,-1);for(let G=0;G<H.length;++G)H[G]/=this.size}_transform4(H,O,G){const P=this._csize;let $e=1<<this._width,Fe=P/$e<<1,Ve,Ne;const _t=this._bitrev;if(Fe===4)for(Ve=0,Ne=0;Ve<P;Ve+=Fe,++Ne){const wt=_t[Ne];this._singleTransform2(O,H,Ve,wt,$e)}else for(Ve=0,Ne=0;Ve<P;Ve+=Fe,++Ne){const wt=_t[Ne];this._singleTransform4(O,H,Ve,wt,$e,G)}const ct=this.table;for($e>>=2;$e>=2;$e>>=2){Fe=P/$e<<1;const wt=Fe>>>2;for(Ve=0;Ve<P;Ve+=Fe){const Te=Ve+wt-1;for(let K=Ve,be=0;K<Te;K+=2,be+=$e){const Ie=K,Ze=Ie+wt,gt=Ze+wt,ce=gt+wt,Ge=H[Ie],pt=H[Ie+1],qe=H[Ze],yt=H[Ze+1],$t=H[gt],st=H[gt+1],re=H[ce],ze=H[ce+1],Je=ct[be],lt=G*ct[be+1],Qe=qe*Je-yt*lt,Ke=qe*lt+yt*Je,ft=ct[2*be],bt=G*ct[2*be+1],Ft=$t*ft-st*bt,Pt=$t*bt+st*ft,E=ct[3*be],Y=G*ct[3*be+1],A=re*E-ze*Y,ee=re*Y+ze*E,ve=Ge+Ft,ot=pt+Pt,at=Ge-Ft,Ut=pt-Pt,Mt=Qe+A,kt=Ke+ee,x=G*(Qe-A),d=G*(Ke-ee);H[Ie]=ve+Mt,H[Ie+1]=ot+kt,H[Ze]=at+d,H[Ze+1]=Ut-x,H[gt]=ve-Mt,H[gt+1]=ot-kt,H[ce]=at-d,H[ce+1]=Ut+x}}}}_singleTransform2(H,O,G,P,ye){const $e=H[P],Fe=H[P+1],Ve=H[P+ye],Ne=H[P+ye+1];O[G]=$e+Ve,O[G+1]=Fe+Ne,O[G+2]=$e-Ve,O[G+3]=Fe-Ne}_singleTransform4(H,O,G,P,ye,$e){const Fe=ye*2,Ve=ye*3,Ne=H[P],_t=H[P+1],ct=H[P+ye],wt=H[P+ye+1],Te=H[P+Fe],K=H[P+Fe+1],be=H[P+Ve],Ie=H[P+Ve+1],Ze=Ne+Te,gt=_t+K,ce=Ne-Te,Ge=_t-K,pt=ct+be,qe=wt+Ie,yt=$e*(ct-be),$t=$e*(wt-Ie);O[G]=Ze+pt,O[G+1]=gt+qe,O[G+2]=ce+$t,O[G+3]=Ge-yt,O[G+4]=Ze-pt,O[G+5]=gt-qe,O[G+6]=ce-$t,O[G+7]=Ge+yt}_realTransform4(H,O,G){const P=this._csize;let $e=1<<this._width,Fe=P/$e<<1,Ve,Ne;const _t=this._bitrev;if(Fe===4)for(Ve=0,Ne=0;Ve<P;Ve+=Fe,++Ne){const Te=_t[Ne];this._singleRealTransform2(O,H,Ve,Te>>>1,$e>>>1)}else for(Ve=0,Ne=0;Ve<P;Ve+=Fe,++Ne){const Te=_t[Ne];this._singleRealTransform4(O,H,Ve,Te>>>1,$e>>>1,G)}const ct=this.table;for($e>>=2;$e>=2;$e>>=2){Fe=P/$e<<1;const Te=Fe>>>1,K=Te>>>1,be=K>>>1;for(Ve=0;Ve<P;Ve+=Fe)for(let Ie=0,Ze=0;Ie<=be;Ie+=2,Ze+=$e){const gt=Ve+Ie,ce=gt+K,Ge=ce+K,pt=Ge+K,qe=H[gt],yt=H[gt+1],$t=H[ce],st=H[ce+1],re=H[Ge],ze=H[Ge+1],Je=H[pt],lt=H[pt+1],Qe=qe,Ke=yt,ft=ct[Ze],bt=G*ct[Ze+1],Ft=$t*ft-st*bt,Pt=$t*bt+st*ft,E=ct[2*Ze],Y=G*ct[2*Ze+1],A=re*E-ze*Y,ee=re*Y+ze*E,ve=ct[3*Ze],ot=G*ct[3*Ze+1],at=Je*ve-lt*ot,Ut=Je*ot+lt*ve,Mt=Qe+A,kt=Ke+ee,x=Qe-A,d=Ke-ee,f=Ft+at,V=Pt+Ut,fe=G*(Ft-at),Pe=G*(Pt-Ut);if(H[gt]=Mt+f,H[gt+1]=kt+V,H[ce]=x+Pe,H[ce+1]=d-fe,Ie===0){H[Ge]=Mt-f,H[Ge+1]=kt-V;continue}if(Ie===be)continue;const Xe=Ve+K-Ie,sr=Ve+Te-Ie;H[Xe]=x-G*Pe,H[Xe+1]=-d-G*fe,H[sr]=Mt-G*f,H[sr+1]=-kt+G*V}}const wt=P>>>1;for(let Te=2;Te<wt;Te+=2)H[P-Te]=H[Te],H[P-Te+1]=-H[Te+1]}_singleRealTransform2(H,O,G,P,ye){const $e=H[P],Fe=H[P+ye];O[G]=$e+Fe,O[G+1]=0,O[G+2]=$e-Fe,O[G+3]=0}_singleRealTransform4(H,O,G,P,ye,$e){const Fe=ye*2,Ve=ye*3,Ne=H[P],_t=H[P+ye],ct=H[P+Fe],wt=H[P+Ve],Te=Ne+ct,K=Ne-ct,be=_t+wt,Ie=$e*(_t-wt);O[G]=Te+be,O[G+1]=0,O[G+2]=K,O[G+3]=-Ie,O[G+4]=Te-be,O[G+5]=0,O[G+6]=K,O[G+7]=Ie}}class xe{constructor(H){const O=2*(H-1),G=2*(2*H-1),P=2**Math.ceil(Math.log2(G));this.bufferSize=P,this._a=O;const ye=new Float64Array(G),$e=new Float64Array(P);this._chirpBuffer=new Float64Array(P),this._buffer1=new Float64Array(P),this._buffer2=new Float64Array(P),this._outBuffer1=new Float64Array(P),this._outBuffer2=new Float64Array(P);const Fe=-2*Math.PI/H,Ve=Math.cos(Fe),Ne=Math.sin(Fe);for(let _t=0;_t<G>>1;++_t){const ct=(_t+1-H)**2/2,wt=Math.sqrt(Ve**2+Ne**2)**ct,Te=ct*Math.atan2(Ne,Ve),K=2*_t;ye[K]=wt*Math.cos(Te),ye[K+1]=wt*Math.sin(Te),$e[K]=ye[K],$e[K+1]=-ye[K+1]}this._slicedChirpBuffer=ye.subarray(O,G),this._f=new ne(P>>1),this._f.transform(this._chirpBuffer,$e)}_transform(H,O,G){const P=this._buffer1,ye=this._buffer2,$e=this._outBuffer1,Fe=this._outBuffer2,Ve=this._chirpBuffer,Ne=this._slicedChirpBuffer,_t=this._a;if(G)for(let ct=0;ct<Ne.length;ct+=2){const wt=ct+1,Te=ct>>1,K=O[Te];P[ct]=K*Ne[ct],P[wt]=K*Ne[wt]}else for(let ct=0;ct<Ne.length;ct+=2){const wt=ct+1;P[ct]=O[ct]*Ne[ct]-O[wt]*Ne[wt],P[wt]=O[ct]*Ne[wt]+O[wt]*Ne[ct]}this._f.transform($e,P);for(let ct=0;ct<Ve.length;ct+=2){const wt=ct+1;ye[ct]=$e[ct]*Ve[ct]-$e[wt]*Ve[wt],ye[wt]=$e[ct]*Ve[wt]+$e[wt]*Ve[ct]}this._f.inverseTransform(Fe,ye);for(let ct=0;ct<Fe.length;ct+=2){const wt=Fe[ct+_t],Te=Fe[ct+_t+1],K=Ne[ct],be=Ne[ct+1];H[ct]=wt*K-Te*be,H[ct+1]=wt*be+Te*K}}transform(H,O){this._transform(H,O,!1)}realTransform(H,O){this._transform(H,O,!0)}}class we{constructor(H){this.fft_length=H,this.isPowerOfTwo=Q(H),this.isPowerOfTwo?(this.fft=new ne(H),this.outputBufferSize=2*H):(this.fft=new xe(H),this.outputBufferSize=this.fft.bufferSize)}realTransform(H,O){this.fft.realTransform(H,O)}transform(H,O){this.fft.transform(H,O)}}function N(Z,H){if(H%2===0||H<=0)throw new Error("Window size must be a positive odd number");const O=new Z.constructor(Z.length),G=new Z.constructor(H),P=Math.floor(H/2);for(let ye=0;ye<Z.length;++ye){let $e=0;for(let Fe=-P;Fe<=P;++Fe){let Ve=ye+Fe;Ve<0?Ve=Math.abs(Ve):Ve>=Z.length&&(Ve=2*(Z.length-1)-Ve),G[$e++]=Z[Ve]}G.sort(),O[ye]=G[P]}return O}function ie(Z,H){const O=Math.pow(10,H);return Math.round(Z*O)/O}function Me(Z){const H=Math.round(Z);return Math.abs(Z)%1===.5?H%2===0?H:H-1:H}function J(Z){const H=Z.length,O=Z[0].length,G=[H+1,O+1],P=Array.from({length:G[0]},()=>Array(G[1]).fill(1/0));P[0][0]=0;const ye=Array.from({length:G[0]},()=>Array(G[1]).fill(-1));for(let _t=1;_t<G[1];++_t)for(let ct=1;ct<G[0];++ct){const wt=P[ct-1][_t-1],Te=P[ct-1][_t],K=P[ct][_t-1];let be,Ie;wt<Te&&wt<K?(be=wt,Ie=0):Te<wt&&Te<K?(be=Te,Ie=1):(be=K,Ie=2),P[ct][_t]=Z[ct-1][_t-1]+be,ye[ct][_t]=Ie}for(let _t=0;_t<G[1];++_t)ye[0][_t]=2;for(let _t=0;_t<G[0];++_t)ye[_t][0]=1;let $e=H,Fe=O,Ve=[],Ne=[];for(;$e>0||Fe>0;)switch(Ve.push($e-1),Ne.push(Fe-1),ye[$e][Fe]){case 0:--$e,--Fe;break;case 1:--$e;break;case 2:--Fe;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${$e}, ${Fe}]. Please file a bug report.`)}return Ve.reverse(),Ne.reverse(),[Ve,Ne]}},"./src/utils/tensor.js":(De,ae,z)=>{z.r(ae),z.d(ae,{Tensor:()=>Ee,cat:()=>Z,full:()=>$e,full_like:()=>Fe,interpolate:()=>M,interpolate_4d:()=>R,layer_norm:()=>N,matmul:()=>Q,mean:()=>G,mean_pooling:()=>we,ones:()=>Ve,ones_like:()=>Ne,permute:()=>I,quantize_embeddings:()=>wt,rfft:()=>ne,stack:()=>H,std_mean:()=>O,topk:()=>xe,zeros:()=>_t,zeros_like:()=>ct});var F=z("./src/utils/maths.js"),ue=z("./src/backends/onnx.js"),oe=z("./src/ops/registry.js");const de=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array});class Ee{constructor(...K){Se(this,"ort_tensor");return(0,ue.isONNXTensor)(K[0])?this.ort_tensor=K[0]:this.ort_tensor=new ue.Tensor(K[0],K[1],K[2]),new Proxy(this,{get:(be,Ie)=>{if(typeof Ie=="string"){let Ze=Number(Ie);if(Number.isInteger(Ze))return be._getitem(Ze)}return be[Ie]},set:(be,Ie,Ze)=>be[Ie]=Ze})}get dims(){return this.ort_tensor.dims}set dims(K){this.ort_tensor.dims=K}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[K,...be]=this.dims;if(be.length>0){const Ie=be.reduce((Ze,gt)=>Ze*gt);for(let Ze=0;Ze<K;++Ze)yield this._subarray(Ze,Ie,be)}else yield*this.data}_getitem(K){const[be,...Ie]=this.dims;if(K=J(K,be),Ie.length>0){const Ze=Ie.reduce((gt,ce)=>gt*ce);return this._subarray(K,Ze,Ie)}else return new Ee(this.type,[this.data[K]],Ie)}indexOf(K){const be=this.data;for(let Ie=0;Ie<be.length;++Ie)if(be[Ie]==K)return Ie;return-1}_subarray(K,be,Ie){const Ze=K*be,gt=(K+1)*be,ce="subarray"in this.data?this.data.subarray(Ze,gt):this.data.slice(Ze,gt);return new Ee(this.type,ce,Ie)}item(){const K=this.data;if(K.length!==1)throw new Error(`a Tensor with ${K.length} elements cannot be converted to Scalar`);return K[0]}tolist(){return j(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const K=this.data;for(let be=0;be<K.length;++be)K[be]=1/(1+Math.exp(-K[be]));return this}map(K){return this.clone().map_(K)}map_(K){const be=this.data;for(let Ie=0;Ie<be.length;++Ie)be[Ie]=K(be[Ie],Ie,be);return this}mul(K){return this.clone().mul_(K)}mul_(K){const be=this.data;for(let Ie=0;Ie<be.length;++Ie)be[Ie]*=K;return this}div(K){return this.clone().div_(K)}div_(K){const be=this.data;for(let Ie=0;Ie<be.length;++Ie)be[Ie]/=K;return this}add(K){return this.clone().add_(K)}add_(K){const be=this.data;for(let Ie=0;Ie<be.length;++Ie)be[Ie]+=K;return this}sub(K){return this.clone().sub_(K)}sub_(K){const be=this.data;for(let Ie=0;Ie<be.length;++Ie)be[Ie]-=K;return this}clone(){return new Ee(this.type,this.data.slice(),this.dims.slice())}slice(...K){const be=[],Ie=[];for(let qe=0;qe<this.dims.length;++qe){let yt=K[qe];if(yt==null)Ie.push([0,this.dims[qe]]),be.push(this.dims[qe]);else if(typeof yt=="number")yt=J(yt,this.dims[qe],qe),Ie.push([yt,yt+1]);else if(Array.isArray(yt)&&yt.length===2){let[$t,st]=yt;if($t=$t===null?0:J($t,this.dims[qe],qe,!1),st=st===null?this.dims[qe]:J(st,this.dims[qe],qe,!1),$t>st)throw new Error(`Invalid slice: ${yt}`);const re=[Math.max($t,0),Math.min(st,this.dims[qe])];Ie.push(re),be.push(re[1]-re[0])}else throw new Error(`Invalid slice: ${yt}`)}const Ze=Ie.map(([qe,yt])=>yt-qe),gt=Ze.reduce((qe,yt)=>qe*yt),ce=this.data,Ge=new ce.constructor(gt),pt=this.stride();for(let qe=0;qe<gt;++qe){let yt=0;for(let $t=Ze.length-1,st=qe;$t>=0;--$t){const re=Ze[$t];yt+=(st%re+Ie[$t][0])*pt[$t],st=Math.floor(st/re)}Ge[qe]=ce[yt]}return new Ee(this.type,Ge,be)}permute(...K){return I(this,K)}transpose(...K){return this.permute(...K)}sum(K=null,be=!1){return this.norm(1,K,be)}norm(K="fro",be=null,Ie=!1){if(K==="fro")K=2;else if(typeof K=="string")throw Error(`Unsupported norm: ${K}`);const Ze=this.data;if(be===null){let Ge=Ze.reduce((pt,qe)=>pt+qe**K,0)**(1/K);return new Ee(this.type,[Ge],[])}be=J(be,this.dims.length);const gt=this.dims.slice();gt[be]=1;const ce=new Ze.constructor(Ze.length/this.dims[be]);for(let Ge=0;Ge<Ze.length;++Ge){let pt=0;for(let qe=this.dims.length-1,yt=Ge,$t=1;qe>=0;--qe){const st=this.dims[qe];if(qe!==be){const re=yt%st;pt+=re*$t,$t*=gt[qe]}yt=Math.floor(yt/st)}ce[pt]+=Ze[Ge]**K}if(K!==1)for(let Ge=0;Ge<ce.length;++Ge)ce[Ge]=ce[Ge]**(1/K);return Ie||gt.splice(be,1),new Ee(this.type,ce,gt)}normalize_(K=2,be=1){be=J(be,this.dims.length);const Ie=this.norm(K,be,!0),Ze=this.data,gt=Ie.data;for(let ce=0;ce<Ze.length;++ce){let Ge=0;for(let pt=this.dims.length-1,qe=ce,yt=1;pt>=0;--pt){const $t=this.dims[pt];if(pt!==be){const st=qe%$t;Ge+=st*yt,yt*=this.dims[pt]}qe=Math.floor(qe/$t)}Ze[ce]/=gt[Ge]}return this}normalize(K=2,be=1){return this.clone().normalize_(K,be)}stride(){return P(this.dims)}squeeze(K=null){return new Ee(this.type,this.data,ie(this.dims,K))}squeeze_(K=null){return this.dims=ie(this.dims,K),this}unsqueeze(K=null){return new Ee(this.type,this.data,Me(this.dims,K))}unsqueeze_(K=null){return this.dims=Me(this.dims,K),this}flatten_(K=0,be=-1){be=(be+this.dims.length)%this.dims.length;let Ie=this.dims.slice(0,K),Ze=this.dims.slice(K,be+1),gt=this.dims.slice(be+1);return this.dims=[...Ie,Ze.reduce((ce,Ge)=>ce*Ge,1),...gt],this}flatten(K=0,be=-1){return this.clone().flatten_(K,be)}view(...K){let be=-1;for(let Ze=0;Ze<K.length;++Ze)if(K[Ze]===-1){if(be!==-1)throw new Error("Only one dimension can be inferred");be=Ze}const Ie=this.data;if(be!==-1){const Ze=K.reduce((gt,ce,Ge)=>Ge!==be?gt*ce:gt,1);K[be]=Ie.length/Ze}return new Ee(this.type,Ie,K)}neg_(){const K=this.data;for(let be=0;be<K.length;++be)K[be]=-K[be];return this}neg(){return this.clone().neg_()}clamp_(K,be){const Ie=this.data;for(let Ze=0;Ze<Ie.length;++Ze)Ie[Ze]=Math.min(Math.max(Ie[Ze],K),be);return this}clamp(K,be){return this.clone().clamp_(K,be)}round_(){const K=this.data;for(let be=0;be<K.length;++be)K[be]=Math.round(K[be]);return this}round(){return this.clone().round_()}mean(K=null,be=!1){return G(this,K,be)}to(K){if(this.type===K)return this;if(!de.hasOwnProperty(K))throw new Error(`Unsupported type: ${K}`);return new Ee(K,de[K].from(this.data),this.dims)}}function j(Te,K){const be=Te.length,Ie=K.reduce((gt,ce)=>gt*ce);if(be!==Ie)throw Error(`cannot reshape array of size ${be} into shape (${K})`);let Ze=Te;for(let gt=K.length-1;gt>=0;gt--)Ze=Ze.reduce((ce,Ge)=>{let pt=ce[ce.length-1];return pt.length<K[gt]?pt.push(Ge):ce.push([Ge]),ce},[[]]);return Ze[0]}function I(Te,K){const[be,Ie]=(0,F.permute_data)(Te.data,Te.dims,K);return new Ee(Te.type,be,Ie)}function M(Te,[K,be],Ie="bilinear",Ze=!1){const gt=Te.dims.at(-3)??1,ce=Te.dims.at(-2),Ge=Te.dims.at(-1);let pt=(0,F.interpolate_data)(Te.data,[gt,ce,Ge],[K,be],Ie,Ze);return new Ee(Te.type,pt,[gt,K,be])}async function R(Te,{size:K=null,mode:be="bilinear"}={}){if(Te.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!K)throw new Error("`interpolate_4d` requires a `size` argument.");let Ie;if(K.length===2)Ie=[...Te.dims.slice(0,2),...K];else if(K.length===3)Ie=[Te.dims[0],...K];else if(K.length===4)Ie=K;else throw new Error("`size` must be of length 2, 3, or 4.");let Ze;if(be==="bilinear")Ze=await oe.TensorOpRegistry.bilinear_interpolate_4d;else if(be==="bicubic")Ze=await oe.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${be}`);const gt=new Ee("int64",new BigInt64Array(Ie.map(BigInt)),[Ie.length]);return await Ze({x:Te,s:gt})}async function Q(Te,K){return await(await oe.TensorOpRegistry.matmul)({a:Te,b:K})}async function ne(Te,K){return await(await oe.TensorOpRegistry.rfft)({x:Te,a:K})}async function xe(Te,K){const be=await oe.TensorOpRegistry.top_k;return K===null?K=Te.dims.at(-1):K=Math.min(K,Te.dims.at(-1)),await be({x:Te,k:new Ee("int64",[BigInt(K)],[1])})}function we(Te,K){const be=Te.data,Ie=K.data,Ze=[Te.dims[0],Te.dims[2]],gt=new be.constructor(Ze[0]*Ze[1]),[ce,Ge,pt]=Te.dims;let qe=0;for(let yt=0;yt<ce;++yt){const $t=yt*pt*Ge;for(let st=0;st<pt;++st){let re=0,ze=0;const Je=yt*Ge,lt=$t+st;for(let Ke=0;Ke<Ge;++Ke){const ft=Number(Ie[Je+Ke]);ze+=ft,re+=be[lt+Ke*pt]*ft}const Qe=re/ze;gt[qe++]=Qe}}return new Ee(Te.type,gt,Ze)}function N(Te,K,{eps:be=1e-5}={}){if(Te.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[Ie,Ze]=Te.dims;if(K.length!==1&&K[0]!==Ze)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[gt,ce]=O(Te,1,0,!0),Ge=gt.data,pt=ce.data,qe=Te.data,yt=new qe.constructor(qe.length);for(let $t=0;$t<Ie;++$t){const st=$t*Ze;for(let re=0;re<Ze;++re){const ze=st+re;yt[ze]=(qe[ze]-pt[$t])/(Ge[$t]+be)}}return new Ee(Te.type,yt,Te.dims)}function ie(Te,K){return Te=Te.slice(),K===null?Te=Te.filter(be=>be!==1):typeof K=="number"?Te[K]===1&&Te.splice(K,1):Array.isArray(K)&&(Te=Te.filter((be,Ie)=>be!==1||!K.includes(Ie))),Te}function Me(Te,K){return K=J(K,Te.length+1),Te=Te.slice(),Te.splice(K,0,1),Te}function J(Te,K,be=null,Ie=!0){if(Ie&&(Te<-K||Te>=K))throw new Error(`IndexError: index ${Te} is out of bounds for dimension${be===null?"":" "+be} with size ${K}`);return Te<0&&(Te=(Te%K+K)%K),Te}function Z(Te,K=0){K=J(K,Te[0].dims.length);const be=Te[0].dims.slice();be[K]=Te.reduce((ce,Ge)=>ce+Ge.dims[K],0);const Ie=be.reduce((ce,Ge)=>ce*Ge,1),Ze=new Te[0].data.constructor(Ie),gt=Te[0].type;if(K===0){let ce=0;for(const Ge of Te){const pt=Ge.data;Ze.set(pt,ce),ce+=pt.length}}else{let ce=0;for(let Ge=0;Ge<Te.length;++Ge){const{data:pt,dims:qe}=Te[Ge];for(let yt=0;yt<pt.length;++yt){let $t=0;for(let st=qe.length-1,re=yt,ze=1;st>=0;--st){const Je=qe[st];let lt=re%Je;st===K&&(lt+=ce),$t+=lt*ze,ze*=be[st],re=Math.floor(re/Je)}Ze[$t]=pt[yt]}ce+=qe[K]}}return new Ee(gt,Ze,be)}function H(Te,K=0){return Z(Te.map(be=>be.unsqueeze(K)),K)}function O(Te,K=null,be=1,Ie=!1){const Ze=Te.data,gt=Te.dims;if(K===null){const st=Ze.reduce((lt,Qe)=>lt+Qe,0)/Ze.length,re=Math.sqrt(Ze.reduce((lt,Qe)=>lt+(Qe-st)**2,0)/(Ze.length-be)),ze=new Ee(Te.type,[st],[]);return[new Ee(Te.type,[re],[]),ze]}K=J(K,gt.length);const ce=G(Te,K,Ie),Ge=ce.data,pt=gt.slice();pt[K]=1;const qe=new Ze.constructor(Ze.length/gt[K]);for(let $t=0;$t<Ze.length;++$t){let st=0;for(let re=gt.length-1,ze=$t,Je=1;re>=0;--re){const lt=gt[re];if(re!==K){const Qe=ze%lt;st+=Qe*Je,Je*=pt[re]}ze=Math.floor(ze/lt)}qe[st]+=(Ze[$t]-Ge[st])**2}for(let $t=0;$t<qe.length;++$t)qe[$t]=Math.sqrt(qe[$t]/(gt[K]-be));return Ie||pt.splice(K,1),[new Ee(Te.type,qe,pt),ce]}function G(Te,K=null,be=!1){const Ie=Te.data;if(K===null){const Ge=Ie.reduce((pt,qe)=>pt+qe,0);return new Ee(Te.type,[Ge/Ie.length],[])}const Ze=Te.dims;K=J(K,Ze.length);const gt=Ze.slice();gt[K]=1;const ce=new Ie.constructor(Ie.length/Ze[K]);for(let Ge=0;Ge<Ie.length;++Ge){let pt=0;for(let qe=Ze.length-1,yt=Ge,$t=1;qe>=0;--qe){const st=Ze[qe];if(qe!==K){const re=yt%st;pt+=re*$t,$t*=gt[qe]}yt=Math.floor(yt/st)}ce[pt]+=Ie[Ge]}if(Ze[K]!==1)for(let Ge=0;Ge<ce.length;++Ge)ce[Ge]=ce[Ge]/Ze[K];return be||gt.splice(K,1),new Ee(Te.type,ce,gt)}function P(Te){const K=new Array(Te.length);for(let be=Te.length-1,Ie=1;be>=0;--be)K[be]=Ie,Ie*=Te[be];return K}function ye(Te,K,be,Ie){const Ze=Te.reduce((gt,ce)=>gt*ce,1);return new Ee(be,new Ie(Ze).fill(K),Te)}function $e(Te,K){let be,Ie;if(typeof K=="number")be="float32",Ie=Float32Array;else if(typeof K=="bigint")be="int64",Ie=BigInt64Array;else throw new Error(`Unsupported data type: ${typeof K}`);return ye(Te,K,be,Ie)}function Fe(Te,K){return $e(Te.dims,K)}function Ve(Te){return ye(Te,1n,"int64",BigInt64Array)}function Ne(Te){return Ve(Te.dims)}function _t(Te){return ye(Te,0n,"int64",BigInt64Array)}function ct(Te){return _t(Te.dims)}function wt(Te,K){if(Te.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(Te.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(K))throw new Error("The precision must be either 'binary' or 'ubinary'");const be=K==="binary",Ie=be?"int8":"uint8",Ze=be?Int8Array:Uint8Array,gt=Te.data,ce=new Ze(gt.length/8);for(let Ge=0;Ge<gt.length;++Ge){const pt=gt[Ge]>0?1:0,qe=Math.floor(Ge/8),yt=Ge%8;ce[qe]|=pt<<7-yt,be&&yt===0&&(ce[qe]-=128)}return new Ee(Ie,ce,[Te.dims[0],Te.dims[1]/8])}}},Dp={};function Qr(De){var ae=Dp[De];if(ae!==void 0)return ae.exports;var z=Dp[De]={exports:{}};return Bp[De](z,z.exports,Qr),z.exports}Qr.m=Bp,(()=>{var De=Object.getPrototypeOf?z=>Object.getPrototypeOf(z):z=>z.__proto__,ae;Qr.t=function(z,F){if(F&1&&(z=this(z)),F&8||typeof z=="object"&&z&&(F&4&&z.__esModule||F&16&&typeof z.then=="function"))return z;var ue=Object.create(null);Qr.r(ue);var oe={};ae=ae||[null,De({}),De([]),De(De)];for(var de=F&2&&z;typeof de=="object"&&!~ae.indexOf(de);de=De(de))Object.getOwnPropertyNames(de).forEach(Ee=>oe[Ee]=()=>z[Ee]);return oe.default=()=>z,Qr.d(ue,oe),ue}})(),Qr.d=(De,ae)=>{for(var z in ae)Qr.o(ae,z)&&!Qr.o(De,z)&&Object.defineProperty(De,z,{enumerable:!0,get:ae[z]})},Qr.o=(De,ae)=>Object.prototype.hasOwnProperty.call(De,ae),Qr.r=De=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(De,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(De,"__esModule",{value:!0})},(()=>{var De;if(typeof self.location.href=="string"&&(De=self.location.href),!De)throw new Error("Automatic publicPath is not supported in this browser");De=De.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),Qr.p=De})(),Qr.b=new URL("./",self.location.href);var h={};/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/Qr.r(h),Qr.d(h,{ASTFeatureExtractor:()=>ir.ASTFeatureExtractor,ASTForAudioClassification:()=>v.ASTForAudioClassification,ASTModel:()=>v.ASTModel,ASTPreTrainedModel:()=>v.ASTPreTrainedModel,AlbertForMaskedLM:()=>v.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>v.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>v.AlbertForSequenceClassification,AlbertModel:()=>v.AlbertModel,AlbertPreTrainedModel:()=>v.AlbertPreTrainedModel,AlbertTokenizer:()=>fr.AlbertTokenizer,AudioClassificationPipeline:()=>Yr.AudioClassificationPipeline,AutoConfig:()=>Bc.AutoConfig,AutoModel:()=>v.AutoModel,AutoModelForAudioClassification:()=>v.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>v.AutoModelForAudioFrameClassification,AutoModelForCTC:()=>v.AutoModelForCTC,AutoModelForCausalLM:()=>v.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>v.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>v.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>v.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>v.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>v.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>v.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>v.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>v.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>v.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>v.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>v.AutoModelForObjectDetection,AutoModelForQuestionAnswering:()=>v.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>v.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>v.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>v.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>v.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>v.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>v.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>v.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>v.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>v.AutoModelForVision2Seq,AutoModelForXVector:()=>v.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>v.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>ir.AutoProcessor,AutoTokenizer:()=>fr.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>Yr.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>v.BartForConditionalGeneration,BartForSequenceClassification:()=>v.BartForSequenceClassification,BartModel:()=>v.BartModel,BartPretrainedModel:()=>v.BartPretrainedModel,BartTokenizer:()=>fr.BartTokenizer,BaseModelOutput:()=>v.BaseModelOutput,BaseStreamer:()=>Dc.BaseStreamer,BeitFeatureExtractor:()=>ir.BeitFeatureExtractor,BeitForImageClassification:()=>v.BeitForImageClassification,BeitModel:()=>v.BeitModel,BeitPreTrainedModel:()=>v.BeitPreTrainedModel,BertForMaskedLM:()=>v.BertForMaskedLM,BertForQuestionAnswering:()=>v.BertForQuestionAnswering,BertForSequenceClassification:()=>v.BertForSequenceClassification,BertForTokenClassification:()=>v.BertForTokenClassification,BertModel:()=>v.BertModel,BertPreTrainedModel:()=>v.BertPreTrainedModel,BertTokenizer:()=>fr.BertTokenizer,BitImageProcessor:()=>ir.BitImageProcessor,BlenderbotForConditionalGeneration:()=>v.BlenderbotForConditionalGeneration,BlenderbotModel:()=>v.BlenderbotModel,BlenderbotPreTrainedModel:()=>v.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>v.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>v.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>v.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>fr.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>fr.BlenderbotTokenizer,BloomForCausalLM:()=>v.BloomForCausalLM,BloomModel:()=>v.BloomModel,BloomPreTrainedModel:()=>v.BloomPreTrainedModel,BloomTokenizer:()=>fr.BloomTokenizer,CLIPFeatureExtractor:()=>ir.CLIPFeatureExtractor,CLIPImageProcessor:()=>ir.CLIPImageProcessor,CLIPModel:()=>v.CLIPModel,CLIPPreTrainedModel:()=>v.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>v.CLIPSegForImageSegmentation,CLIPSegModel:()=>v.CLIPSegModel,CLIPSegPreTrainedModel:()=>v.CLIPSegPreTrainedModel,CLIPTextModel:()=>v.CLIPTextModel,CLIPTextModelWithProjection:()=>v.CLIPTextModelWithProjection,CLIPTokenizer:()=>fr.CLIPTokenizer,CLIPVisionModel:()=>v.CLIPVisionModel,CLIPVisionModelWithProjection:()=>v.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>v.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>v.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>v.CamembertForSequenceClassification,CamembertForTokenClassification:()=>v.CamembertForTokenClassification,CamembertModel:()=>v.CamembertModel,CamembertPreTrainedModel:()=>v.CamembertPreTrainedModel,CamembertTokenizer:()=>fr.CamembertTokenizer,CausalLMOutput:()=>v.CausalLMOutput,CausalLMOutputWithPast:()=>v.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>ir.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>v.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>v.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>v.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>ir.ClapFeatureExtractor,ClapModel:()=>v.ClapModel,ClapPreTrainedModel:()=>v.ClapPreTrainedModel,ClapTextModelWithProjection:()=>v.ClapTextModelWithProjection,CodeGenForCausalLM:()=>v.CodeGenForCausalLM,CodeGenModel:()=>v.CodeGenModel,CodeGenPreTrainedModel:()=>v.CodeGenPreTrainedModel,CodeGenTokenizer:()=>fr.CodeGenTokenizer,CodeLlamaTokenizer:()=>fr.CodeLlamaTokenizer,CohereForCausalLM:()=>v.CohereForCausalLM,CohereModel:()=>v.CohereModel,CoherePreTrainedModel:()=>v.CoherePreTrainedModel,CohereTokenizer:()=>fr.CohereTokenizer,ConvBertForMaskedLM:()=>v.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>v.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>v.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>v.ConvBertForTokenClassification,ConvBertModel:()=>v.ConvBertModel,ConvBertPreTrainedModel:()=>v.ConvBertPreTrainedModel,ConvBertTokenizer:()=>fr.ConvBertTokenizer,ConvNextFeatureExtractor:()=>ir.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>v.ConvNextForImageClassification,ConvNextImageProcessor:()=>ir.ConvNextImageProcessor,ConvNextModel:()=>v.ConvNextModel,ConvNextPreTrainedModel:()=>v.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>v.ConvNextV2ForImageClassification,ConvNextV2Model:()=>v.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>v.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>ir.DPTFeatureExtractor,DPTForDepthEstimation:()=>v.DPTForDepthEstimation,DPTImageProcessor:()=>ir.DPTImageProcessor,DPTModel:()=>v.DPTModel,DPTPreTrainedModel:()=>v.DPTPreTrainedModel,DebertaForMaskedLM:()=>v.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>v.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>v.DebertaForSequenceClassification,DebertaForTokenClassification:()=>v.DebertaForTokenClassification,DebertaModel:()=>v.DebertaModel,DebertaPreTrainedModel:()=>v.DebertaPreTrainedModel,DebertaTokenizer:()=>fr.DebertaTokenizer,DebertaV2ForMaskedLM:()=>v.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>v.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>v.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>v.DebertaV2ForTokenClassification,DebertaV2Model:()=>v.DebertaV2Model,DebertaV2PreTrainedModel:()=>v.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>fr.DebertaV2Tokenizer,DecisionTransformerModel:()=>v.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>v.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>ir.DeiTFeatureExtractor,DeiTForImageClassification:()=>v.DeiTForImageClassification,DeiTModel:()=>v.DeiTModel,DeiTPreTrainedModel:()=>v.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>v.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>v.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>Yr.DepthEstimationPipeline,DepthProForDepthEstimation:()=>v.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>v.DepthProPreTrainedModel,DetrFeatureExtractor:()=>ir.DetrFeatureExtractor,DetrForObjectDetection:()=>v.DetrForObjectDetection,DetrForSegmentation:()=>v.DetrForSegmentation,DetrModel:()=>v.DetrModel,DetrObjectDetectionOutput:()=>v.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>v.DetrPreTrainedModel,DetrSegmentationOutput:()=>v.DetrSegmentationOutput,Dinov2ForImageClassification:()=>v.Dinov2ForImageClassification,Dinov2Model:()=>v.Dinov2Model,Dinov2PreTrainedModel:()=>v.Dinov2PreTrainedModel,DistilBertForMaskedLM:()=>v.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>v.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>v.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>v.DistilBertForTokenClassification,DistilBertModel:()=>v.DistilBertModel,DistilBertPreTrainedModel:()=>v.DistilBertPreTrainedModel,DistilBertTokenizer:()=>fr.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>Yr.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>ir.DonutFeatureExtractor,DonutImageProcessor:()=>ir.DonutImageProcessor,DonutSwinModel:()=>v.DonutSwinModel,DonutSwinPreTrainedModel:()=>v.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>v.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>ir.EfficientNetImageProcessor,EfficientNetModel:()=>v.EfficientNetModel,EfficientNetPreTrainedModel:()=>v.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>v.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>v.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>v.ElectraForSequenceClassification,ElectraForTokenClassification:()=>v.ElectraForTokenClassification,ElectraModel:()=>v.ElectraModel,ElectraPreTrainedModel:()=>v.ElectraPreTrainedModel,ElectraTokenizer:()=>fr.ElectraTokenizer,EosTokenCriteria:()=>ya.EosTokenCriteria,EsmForMaskedLM:()=>v.EsmForMaskedLM,EsmForSequenceClassification:()=>v.EsmForSequenceClassification,EsmForTokenClassification:()=>v.EsmForTokenClassification,EsmModel:()=>v.EsmModel,EsmPreTrainedModel:()=>v.EsmPreTrainedModel,EsmTokenizer:()=>fr.EsmTokenizer,FFT:()=>Pn.FFT,FalconForCausalLM:()=>v.FalconForCausalLM,FalconModel:()=>v.FalconModel,FalconPreTrainedModel:()=>v.FalconPreTrainedModel,FalconTokenizer:()=>fr.FalconTokenizer,FastViTForImageClassification:()=>v.FastViTForImageClassification,FastViTModel:()=>v.FastViTModel,FastViTPreTrainedModel:()=>v.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>Yr.FeatureExtractionPipeline,FeatureExtractor:()=>ir.FeatureExtractor,FillMaskPipeline:()=>Yr.FillMaskPipeline,Florence2ForConditionalGeneration:()=>v.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>v.Florence2PreTrainedModel,Florence2Processor:()=>ir.Florence2Processor,GLPNFeatureExtractor:()=>ir.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>v.GLPNForDepthEstimation,GLPNModel:()=>v.GLPNModel,GLPNPreTrainedModel:()=>v.GLPNPreTrainedModel,GPT2LMHeadModel:()=>v.GPT2LMHeadModel,GPT2Model:()=>v.GPT2Model,GPT2PreTrainedModel:()=>v.GPT2PreTrainedModel,GPT2Tokenizer:()=>fr.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>v.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>v.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>v.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>v.GPTJForCausalLM,GPTJModel:()=>v.GPTJModel,GPTJPreTrainedModel:()=>v.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>v.GPTNeoForCausalLM,GPTNeoModel:()=>v.GPTNeoModel,GPTNeoPreTrainedModel:()=>v.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>v.GPTNeoXForCausalLM,GPTNeoXModel:()=>v.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>v.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>fr.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>v.Gemma2ForCausalLM,Gemma2Model:()=>v.Gemma2Model,Gemma2PreTrainedModel:()=>v.Gemma2PreTrainedModel,GemmaForCausalLM:()=>v.GemmaForCausalLM,GemmaModel:()=>v.GemmaModel,GemmaPreTrainedModel:()=>v.GemmaPreTrainedModel,GemmaTokenizer:()=>fr.GemmaTokenizer,GraniteForCausalLM:()=>v.GraniteForCausalLM,GraniteModel:()=>v.GraniteModel,GranitePreTrainedModel:()=>v.GranitePreTrainedModel,Grok1Tokenizer:()=>fr.Grok1Tokenizer,GroupViTModel:()=>v.GroupViTModel,GroupViTPreTrainedModel:()=>v.GroupViTPreTrainedModel,HerbertTokenizer:()=>fr.HerbertTokenizer,HieraForImageClassification:()=>v.HieraForImageClassification,HieraModel:()=>v.HieraModel,HieraPreTrainedModel:()=>v.HieraPreTrainedModel,HubertForCTC:()=>v.HubertForCTC,HubertForSequenceClassification:()=>v.HubertForSequenceClassification,HubertModel:()=>v.HubertModel,HubertPreTrainedModel:()=>v.HubertPreTrainedModel,ImageClassificationPipeline:()=>Yr.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>Yr.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>ir.ImageFeatureExtractor,ImageMattingOutput:()=>v.ImageMattingOutput,ImageSegmentationPipeline:()=>Yr.ImageSegmentationPipeline,ImageToImagePipeline:()=>Yr.ImageToImagePipeline,ImageToTextPipeline:()=>Yr.ImageToTextPipeline,InterruptableStoppingCriteria:()=>ya.InterruptableStoppingCriteria,JAISLMHeadModel:()=>v.JAISLMHeadModel,JAISModel:()=>v.JAISModel,JAISPreTrainedModel:()=>v.JAISPreTrainedModel,LlamaForCausalLM:()=>v.LlamaForCausalLM,LlamaModel:()=>v.LlamaModel,LlamaPreTrainedModel:()=>v.LlamaPreTrainedModel,LlamaTokenizer:()=>fr.LlamaTokenizer,LlavaForConditionalGeneration:()=>v.LlavaForConditionalGeneration,LlavaPreTrainedModel:()=>v.LlavaPreTrainedModel,LongT5ForConditionalGeneration:()=>v.LongT5ForConditionalGeneration,LongT5Model:()=>v.LongT5Model,LongT5PreTrainedModel:()=>v.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>v.M2M100ForConditionalGeneration,M2M100Model:()=>v.M2M100Model,M2M100PreTrainedModel:()=>v.M2M100PreTrainedModel,M2M100Tokenizer:()=>fr.M2M100Tokenizer,MBart50Tokenizer:()=>fr.MBart50Tokenizer,MBartForCausalLM:()=>v.MBartForCausalLM,MBartForConditionalGeneration:()=>v.MBartForConditionalGeneration,MBartForSequenceClassification:()=>v.MBartForSequenceClassification,MBartModel:()=>v.MBartModel,MBartPreTrainedModel:()=>v.MBartPreTrainedModel,MBartTokenizer:()=>fr.MBartTokenizer,MPNetForMaskedLM:()=>v.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>v.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>v.MPNetForSequenceClassification,MPNetForTokenClassification:()=>v.MPNetForTokenClassification,MPNetModel:()=>v.MPNetModel,MPNetPreTrainedModel:()=>v.MPNetPreTrainedModel,MPNetTokenizer:()=>fr.MPNetTokenizer,MT5ForConditionalGeneration:()=>v.MT5ForConditionalGeneration,MT5Model:()=>v.MT5Model,MT5PreTrainedModel:()=>v.MT5PreTrainedModel,MarianMTModel:()=>v.MarianMTModel,MarianModel:()=>v.MarianModel,MarianPreTrainedModel:()=>v.MarianPreTrainedModel,MarianTokenizer:()=>fr.MarianTokenizer,MaskFormerFeatureExtractor:()=>ir.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>v.MaskFormerForInstanceSegmentation,MaskFormerModel:()=>v.MaskFormerModel,MaskFormerPreTrainedModel:()=>v.MaskFormerPreTrainedModel,MaskedLMOutput:()=>v.MaskedLMOutput,MaxLengthCriteria:()=>ya.MaxLengthCriteria,MistralForCausalLM:()=>v.MistralForCausalLM,MistralModel:()=>v.MistralModel,MistralPreTrainedModel:()=>v.MistralPreTrainedModel,MobileBertForMaskedLM:()=>v.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>v.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>v.MobileBertForSequenceClassification,MobileBertModel:()=>v.MobileBertModel,MobileBertPreTrainedModel:()=>v.MobileBertPreTrainedModel,MobileBertTokenizer:()=>fr.MobileBertTokenizer,MobileNetV1FeatureExtractor:()=>ir.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>v.MobileNetV1ForImageClassification,MobileNetV1Model:()=>v.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>v.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>ir.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>v.MobileNetV2ForImageClassification,MobileNetV2Model:()=>v.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>v.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>ir.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>v.MobileNetV3ForImageClassification,MobileNetV3Model:()=>v.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>v.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>ir.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>v.MobileNetV4ForImageClassification,MobileNetV4Model:()=>v.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>v.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>ir.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>v.MobileViTForImageClassification,MobileViTImageProcessor:()=>ir.MobileViTImageProcessor,MobileViTModel:()=>v.MobileViTModel,MobileViTPreTrainedModel:()=>v.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>v.MobileViTV2ForImageClassification,MobileViTV2Model:()=>v.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>v.MobileViTV2PreTrainedModel,ModelOutput:()=>v.ModelOutput,Moondream1ForConditionalGeneration:()=>v.Moondream1ForConditionalGeneration,MptForCausalLM:()=>v.MptForCausalLM,MptModel:()=>v.MptModel,MptPreTrainedModel:()=>v.MptPreTrainedModel,MusicgenForCausalLM:()=>v.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>v.MusicgenForConditionalGeneration,MusicgenModel:()=>v.MusicgenModel,MusicgenPreTrainedModel:()=>v.MusicgenPreTrainedModel,NllbTokenizer:()=>fr.NllbTokenizer,NomicBertModel:()=>v.NomicBertModel,NomicBertPreTrainedModel:()=>v.NomicBertPreTrainedModel,NougatImageProcessor:()=>ir.NougatImageProcessor,NougatTokenizer:()=>fr.NougatTokenizer,OPTForCausalLM:()=>v.OPTForCausalLM,OPTModel:()=>v.OPTModel,OPTPreTrainedModel:()=>v.OPTPreTrainedModel,ObjectDetectionPipeline:()=>Yr.ObjectDetectionPipeline,OpenELMForCausalLM:()=>v.OpenELMForCausalLM,OpenELMModel:()=>v.OpenELMModel,OpenELMPreTrainedModel:()=>v.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>ir.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>v.OwlViTForObjectDetection,OwlViTModel:()=>v.OwlViTModel,OwlViTPreTrainedModel:()=>v.OwlViTPreTrainedModel,OwlViTProcessor:()=>ir.OwlViTProcessor,Owlv2ForObjectDetection:()=>v.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>ir.Owlv2ImageProcessor,Owlv2Model:()=>v.Owlv2Model,Owlv2PreTrainedModel:()=>v.Owlv2PreTrainedModel,Phi3ForCausalLM:()=>v.Phi3ForCausalLM,Phi3Model:()=>v.Phi3Model,Phi3PreTrainedModel:()=>v.Phi3PreTrainedModel,PhiForCausalLM:()=>v.PhiForCausalLM,PhiModel:()=>v.PhiModel,PhiPreTrainedModel:()=>v.PhiPreTrainedModel,Pipeline:()=>Yr.Pipeline,PreTrainedModel:()=>v.PreTrainedModel,PreTrainedTokenizer:()=>fr.PreTrainedTokenizer,PretrainedConfig:()=>Bc.PretrainedConfig,PretrainedMixin:()=>v.PretrainedMixin,Processor:()=>ir.Processor,PvtForImageClassification:()=>v.PvtForImageClassification,PvtImageProcessor:()=>ir.PvtImageProcessor,PvtModel:()=>v.PvtModel,PvtPreTrainedModel:()=>v.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>ir.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>v.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>v.PyAnnoteModel,PyAnnotePreTrainedModel:()=>v.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>ir.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>v.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>Yr.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>v.Qwen2ForCausalLM,Qwen2Model:()=>v.Qwen2Model,Qwen2PreTrainedModel:()=>v.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>fr.Qwen2Tokenizer,RTDetrForObjectDetection:()=>v.RTDetrForObjectDetection,RTDetrImageProcessor:()=>ir.RTDetrImageProcessor,RTDetrModel:()=>v.RTDetrModel,RTDetrObjectDetectionOutput:()=>v.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>v.RTDetrPreTrainedModel,RawImage:()=>fm.RawImage,ResNetForImageClassification:()=>v.ResNetForImageClassification,ResNetModel:()=>v.ResNetModel,ResNetPreTrainedModel:()=>v.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>v.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>v.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>v.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>v.RoFormerForTokenClassification,RoFormerModel:()=>v.RoFormerModel,RoFormerPreTrainedModel:()=>v.RoFormerPreTrainedModel,RoFormerTokenizer:()=>fr.RoFormerTokenizer,RobertaForMaskedLM:()=>v.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>v.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>v.RobertaForSequenceClassification,RobertaForTokenClassification:()=>v.RobertaForTokenClassification,RobertaModel:()=>v.RobertaModel,RobertaPreTrainedModel:()=>v.RobertaPreTrainedModel,RobertaTokenizer:()=>fr.RobertaTokenizer,SamImageProcessor:()=>ir.SamImageProcessor,SamImageSegmentationOutput:()=>v.SamImageSegmentationOutput,SamModel:()=>v.SamModel,SamPreTrainedModel:()=>v.SamPreTrainedModel,SamProcessor:()=>ir.SamProcessor,SapiensFeatureExtractor:()=>ir.SapiensFeatureExtractor,SapiensForDepthEstimation:()=>v.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>v.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>v.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>v.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>ir.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>ir.SegformerFeatureExtractor,SegformerForImageClassification:()=>v.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>v.SegformerForSemanticSegmentation,SegformerModel:()=>v.SegformerModel,SegformerPreTrainedModel:()=>v.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>v.Seq2SeqLMOutput,SequenceClassifierOutput:()=>v.SequenceClassifierOutput,SiglipImageProcessor:()=>ir.SiglipImageProcessor,SiglipModel:()=>v.SiglipModel,SiglipPreTrainedModel:()=>v.SiglipPreTrainedModel,SiglipTextModel:()=>v.SiglipTextModel,SiglipTokenizer:()=>fr.SiglipTokenizer,SiglipVisionModel:()=>v.SiglipVisionModel,SpeechT5FeatureExtractor:()=>ir.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>v.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>v.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>v.SpeechT5HifiGan,SpeechT5Model:()=>v.SpeechT5Model,SpeechT5PreTrainedModel:()=>v.SpeechT5PreTrainedModel,SpeechT5Processor:()=>ir.SpeechT5Processor,SpeechT5Tokenizer:()=>fr.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>v.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>v.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>v.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>v.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>v.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>fr.SqueezeBertTokenizer,StableLmForCausalLM:()=>v.StableLmForCausalLM,StableLmModel:()=>v.StableLmModel,StableLmPreTrainedModel:()=>v.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>v.Starcoder2ForCausalLM,Starcoder2Model:()=>v.Starcoder2Model,Starcoder2PreTrainedModel:()=>v.Starcoder2PreTrainedModel,StoppingCriteria:()=>ya.StoppingCriteria,StoppingCriteriaList:()=>ya.StoppingCriteriaList,SummarizationPipeline:()=>Yr.SummarizationPipeline,Swin2SRForImageSuperResolution:()=>v.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>ir.Swin2SRImageProcessor,Swin2SRModel:()=>v.Swin2SRModel,Swin2SRPreTrainedModel:()=>v.Swin2SRPreTrainedModel,SwinForImageClassification:()=>v.SwinForImageClassification,SwinModel:()=>v.SwinModel,SwinPreTrainedModel:()=>v.SwinPreTrainedModel,T5ForConditionalGeneration:()=>v.T5ForConditionalGeneration,T5Model:()=>v.T5Model,T5PreTrainedModel:()=>v.T5PreTrainedModel,T5Tokenizer:()=>fr.T5Tokenizer,TableTransformerForObjectDetection:()=>v.TableTransformerForObjectDetection,TableTransformerModel:()=>v.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>v.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>v.TableTransformerPreTrainedModel,Tensor:()=>un.Tensor,Text2TextGenerationPipeline:()=>Yr.Text2TextGenerationPipeline,TextClassificationPipeline:()=>Yr.TextClassificationPipeline,TextGenerationPipeline:()=>Yr.TextGenerationPipeline,TextStreamer:()=>Dc.TextStreamer,TextToAudioPipeline:()=>Yr.TextToAudioPipeline,TokenClassificationPipeline:()=>Yr.TokenClassificationPipeline,TokenClassifierOutput:()=>v.TokenClassifierOutput,TokenizerModel:()=>fr.TokenizerModel,TrOCRForCausalLM:()=>v.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>v.TrOCRPreTrainedModel,TranslationPipeline:()=>Yr.TranslationPipeline,UniSpeechForCTC:()=>v.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>v.UniSpeechForSequenceClassification,UniSpeechModel:()=>v.UniSpeechModel,UniSpeechPreTrainedModel:()=>v.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>v.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>v.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>v.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>v.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>v.UniSpeechSatPreTrainedModel,ViTFeatureExtractor:()=>ir.ViTFeatureExtractor,ViTForImageClassification:()=>v.ViTForImageClassification,ViTImageProcessor:()=>ir.ViTImageProcessor,ViTMAEModel:()=>v.ViTMAEModel,ViTMAEPreTrainedModel:()=>v.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>v.ViTMSNForImageClassification,ViTMSNModel:()=>v.ViTMSNModel,ViTMSNPreTrainedModel:()=>v.ViTMSNPreTrainedModel,ViTModel:()=>v.ViTModel,ViTPreTrainedModel:()=>v.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>v.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>v.VitMatteForImageMatting,VitMatteImageProcessor:()=>ir.VitMatteImageProcessor,VitMattePreTrainedModel:()=>v.VitMattePreTrainedModel,VitsModel:()=>v.VitsModel,VitsModelOutput:()=>v.VitsModelOutput,VitsPreTrainedModel:()=>v.VitsPreTrainedModel,VitsTokenizer:()=>fr.VitsTokenizer,Wav2Vec2BertForCTC:()=>v.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>v.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>v.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>v.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>fr.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>ir.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>v.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>v.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>v.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>v.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>v.Wav2Vec2PreTrainedModel,Wav2Vec2ProcessorWithLM:()=>ir.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>v.WavLMForAudioFrameClassification,WavLMForCTC:()=>v.WavLMForCTC,WavLMForSequenceClassification:()=>v.WavLMForSequenceClassification,WavLMForXVector:()=>v.WavLMForXVector,WavLMModel:()=>v.WavLMModel,WavLMPreTrainedModel:()=>v.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>ir.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>v.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>v.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>ir.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>v.WhisperForConditionalGeneration,WhisperModel:()=>v.WhisperModel,WhisperPreTrainedModel:()=>v.WhisperPreTrainedModel,WhisperProcessor:()=>ir.WhisperProcessor,WhisperTextStreamer:()=>Dc.WhisperTextStreamer,WhisperTokenizer:()=>fr.WhisperTokenizer,XLMForQuestionAnswering:()=>v.XLMForQuestionAnswering,XLMForSequenceClassification:()=>v.XLMForSequenceClassification,XLMForTokenClassification:()=>v.XLMForTokenClassification,XLMModel:()=>v.XLMModel,XLMPreTrainedModel:()=>v.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>v.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>v.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>v.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>v.XLMRobertaForTokenClassification,XLMRobertaModel:()=>v.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>v.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>fr.XLMRobertaTokenizer,XLMTokenizer:()=>fr.XLMTokenizer,XLMWithLMHeadModel:()=>v.XLMWithLMHeadModel,XVectorOutput:()=>v.XVectorOutput,YolosFeatureExtractor:()=>ir.YolosFeatureExtractor,YolosForObjectDetection:()=>v.YolosForObjectDetection,YolosModel:()=>v.YolosModel,YolosObjectDetectionOutput:()=>v.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>v.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>Yr.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>Yr.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>Yr.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>Yr.ZeroShotObjectDetectionPipeline,bankers_round:()=>Pn.bankers_round,cat:()=>un.cat,cos_sim:()=>Pn.cos_sim,dot:()=>Pn.dot,dynamic_time_warping:()=>Pn.dynamic_time_warping,env:()=>hm.env,full:()=>un.full,full_like:()=>un.full_like,getKeyValueShapes:()=>Bc.getKeyValueShapes,hamming:()=>Fs.hamming,hanning:()=>Fs.hanning,interpolate:()=>un.interpolate,interpolate_4d:()=>un.interpolate_4d,interpolate_data:()=>Pn.interpolate_data,is_chinese_char:()=>fr.is_chinese_char,layer_norm:()=>un.layer_norm,log_softmax:()=>Pn.log_softmax,magnitude:()=>Pn.magnitude,matmul:()=>un.matmul,max:()=>Pn.max,mean:()=>un.mean,mean_pooling:()=>un.mean_pooling,medianFilter:()=>Pn.medianFilter,mel_filter_bank:()=>Fs.mel_filter_bank,min:()=>Pn.min,ones:()=>un.ones,ones_like:()=>un.ones_like,permute:()=>un.permute,permute_data:()=>Pn.permute_data,pipeline:()=>Yr.pipeline,quantize_embeddings:()=>un.quantize_embeddings,read_audio:()=>Fs.read_audio,rfft:()=>un.rfft,round:()=>Pn.round,softmax:()=>Pn.softmax,spectrogram:()=>Fs.spectrogram,stack:()=>un.stack,std_mean:()=>un.std_mean,topk:()=>un.topk,window_function:()=>Fs.window_function,zeros:()=>un.zeros,zeros_like:()=>un.zeros_like});var hm=Qr("./src/env.js"),Yr=Qr("./src/pipelines.js"),v=Qr("./src/models.js"),fr=Qr("./src/tokenizers.js"),ir=Qr("./src/processors.js"),Bc=Qr("./src/configs.js"),Fs=Qr("./src/utils/audio.js"),fm=Qr("./src/utils/image.js"),un=Qr("./src/utils/tensor.js"),Pn=Qr("./src/utils/maths.js"),Dc=Qr("./src/generation/streamers.js"),ya=Qr("./src/generation/stopping_criteria.js");h.ASTFeatureExtractor,h.ASTForAudioClassification,h.ASTModel,h.ASTPreTrainedModel,h.AlbertForMaskedLM,h.AlbertForQuestionAnswering,h.AlbertForSequenceClassification,h.AlbertModel,h.AlbertPreTrainedModel,h.AlbertTokenizer,h.AudioClassificationPipeline,h.AutoConfig,h.AutoModel,h.AutoModelForAudioClassification,h.AutoModelForAudioFrameClassification,h.AutoModelForCTC,h.AutoModelForCausalLM,h.AutoModelForDepthEstimation,h.AutoModelForDocumentQuestionAnswering,h.AutoModelForImageClassification,h.AutoModelForImageFeatureExtraction,h.AutoModelForImageMatting,h.AutoModelForImageSegmentation,h.AutoModelForImageToImage,h.AutoModelForMaskGeneration,h.AutoModelForMaskedLM,h.AutoModelForNormalEstimation,h.AutoModelForObjectDetection,h.AutoModelForQuestionAnswering,h.AutoModelForSemanticSegmentation,h.AutoModelForSeq2SeqLM,h.AutoModelForSequenceClassification,h.AutoModelForSpeechSeq2Seq,h.AutoModelForTextToSpectrogram,h.AutoModelForTextToWaveform,h.AutoModelForTokenClassification,h.AutoModelForUniversalSegmentation,h.AutoModelForVision2Seq,h.AutoModelForXVector,h.AutoModelForZeroShotObjectDetection;var mm=h.AutoProcessor,_m=h.AutoTokenizer;h.AutomaticSpeechRecognitionPipeline,h.BartForConditionalGeneration,h.BartForSequenceClassification,h.BartModel,h.BartPretrainedModel,h.BartTokenizer,h.BaseModelOutput,h.BaseStreamer,h.BeitFeatureExtractor,h.BeitForImageClassification,h.BeitModel,h.BeitPreTrainedModel,h.BertForMaskedLM,h.BertForQuestionAnswering,h.BertForSequenceClassification,h.BertForTokenClassification,h.BertModel,h.BertPreTrainedModel,h.BertTokenizer,h.BitImageProcessor,h.BlenderbotForConditionalGeneration,h.BlenderbotModel,h.BlenderbotPreTrainedModel,h.BlenderbotSmallForConditionalGeneration,h.BlenderbotSmallModel,h.BlenderbotSmallPreTrainedModel,h.BlenderbotSmallTokenizer,h.BlenderbotTokenizer,h.BloomForCausalLM,h.BloomModel,h.BloomPreTrainedModel,h.BloomTokenizer,h.CLIPFeatureExtractor,h.CLIPImageProcessor,h.CLIPModel,h.CLIPPreTrainedModel,h.CLIPSegForImageSegmentation,h.CLIPSegModel,h.CLIPSegPreTrainedModel,h.CLIPTextModel,h.CLIPTextModelWithProjection,h.CLIPTokenizer,h.CLIPVisionModel,h.CLIPVisionModelWithProjection,h.CamembertForMaskedLM,h.CamembertForQuestionAnswering,h.CamembertForSequenceClassification,h.CamembertForTokenClassification,h.CamembertModel,h.CamembertPreTrainedModel,h.CamembertTokenizer,h.CausalLMOutput,h.CausalLMOutputWithPast,h.ChineseCLIPFeatureExtractor,h.ChineseCLIPModel,h.ChineseCLIPPreTrainedModel,h.ClapAudioModelWithProjection,h.ClapFeatureExtractor,h.ClapModel,h.ClapPreTrainedModel,h.ClapTextModelWithProjection,h.CodeGenForCausalLM,h.CodeGenModel,h.CodeGenPreTrainedModel,h.CodeGenTokenizer,h.CodeLlamaTokenizer,h.CohereForCausalLM,h.CohereModel,h.CoherePreTrainedModel,h.CohereTokenizer,h.ConvBertForMaskedLM,h.ConvBertForQuestionAnswering,h.ConvBertForSequenceClassification,h.ConvBertForTokenClassification,h.ConvBertModel,h.ConvBertPreTrainedModel,h.ConvBertTokenizer,h.ConvNextFeatureExtractor,h.ConvNextForImageClassification,h.ConvNextImageProcessor,h.ConvNextModel,h.ConvNextPreTrainedModel,h.ConvNextV2ForImageClassification,h.ConvNextV2Model,h.ConvNextV2PreTrainedModel,h.DPTFeatureExtractor,h.DPTForDepthEstimation,h.DPTImageProcessor,h.DPTModel,h.DPTPreTrainedModel,h.DebertaForMaskedLM,h.DebertaForQuestionAnswering,h.DebertaForSequenceClassification,h.DebertaForTokenClassification,h.DebertaModel,h.DebertaPreTrainedModel,h.DebertaTokenizer,h.DebertaV2ForMaskedLM,h.DebertaV2ForQuestionAnswering,h.DebertaV2ForSequenceClassification,h.DebertaV2ForTokenClassification,h.DebertaV2Model,h.DebertaV2PreTrainedModel,h.DebertaV2Tokenizer,h.DecisionTransformerModel,h.DecisionTransformerPreTrainedModel,h.DeiTFeatureExtractor,h.DeiTForImageClassification,h.DeiTModel,h.DeiTPreTrainedModel,h.DepthAnythingForDepthEstimation,h.DepthAnythingPreTrainedModel,h.DepthEstimationPipeline,h.DepthProForDepthEstimation,h.DepthProPreTrainedModel,h.DetrFeatureExtractor,h.DetrForObjectDetection,h.DetrForSegmentation,h.DetrModel,h.DetrObjectDetectionOutput,h.DetrPreTrainedModel,h.DetrSegmentationOutput,h.Dinov2ForImageClassification,h.Dinov2Model,h.Dinov2PreTrainedModel,h.DistilBertForMaskedLM,h.DistilBertForQuestionAnswering,h.DistilBertForSequenceClassification,h.DistilBertForTokenClassification,h.DistilBertModel,h.DistilBertPreTrainedModel,h.DistilBertTokenizer,h.DocumentQuestionAnsweringPipeline,h.DonutFeatureExtractor,h.DonutImageProcessor,h.DonutSwinModel,h.DonutSwinPreTrainedModel,h.EfficientNetForImageClassification,h.EfficientNetImageProcessor,h.EfficientNetModel,h.EfficientNetPreTrainedModel,h.ElectraForMaskedLM,h.ElectraForQuestionAnswering,h.ElectraForSequenceClassification,h.ElectraForTokenClassification,h.ElectraModel,h.ElectraPreTrainedModel,h.ElectraTokenizer,h.EosTokenCriteria,h.EsmForMaskedLM,h.EsmForSequenceClassification,h.EsmForTokenClassification,h.EsmModel,h.EsmPreTrainedModel,h.EsmTokenizer,h.FFT,h.FalconForCausalLM,h.FalconModel,h.FalconPreTrainedModel,h.FalconTokenizer,h.FastViTForImageClassification,h.FastViTModel,h.FastViTPreTrainedModel,h.FeatureExtractionPipeline,h.FeatureExtractor,h.FillMaskPipeline,h.Florence2ForConditionalGeneration,h.Florence2PreTrainedModel,h.Florence2Processor,h.GLPNFeatureExtractor,h.GLPNForDepthEstimation,h.GLPNModel,h.GLPNPreTrainedModel,h.GPT2LMHeadModel,h.GPT2Model,h.GPT2PreTrainedModel,h.GPT2Tokenizer,h.GPTBigCodeForCausalLM,h.GPTBigCodeModel,h.GPTBigCodePreTrainedModel,h.GPTJForCausalLM,h.GPTJModel,h.GPTJPreTrainedModel,h.GPTNeoForCausalLM,h.GPTNeoModel,h.GPTNeoPreTrainedModel,h.GPTNeoXForCausalLM,h.GPTNeoXModel,h.GPTNeoXPreTrainedModel,h.GPTNeoXTokenizer,h.Gemma2ForCausalLM,h.Gemma2Model,h.Gemma2PreTrainedModel,h.GemmaForCausalLM,h.GemmaModel,h.GemmaPreTrainedModel,h.GemmaTokenizer,h.GraniteForCausalLM,h.GraniteModel,h.GranitePreTrainedModel,h.Grok1Tokenizer,h.GroupViTModel,h.GroupViTPreTrainedModel,h.HerbertTokenizer,h.HieraForImageClassification,h.HieraModel,h.HieraPreTrainedModel,h.HubertForCTC,h.HubertForSequenceClassification,h.HubertModel,h.HubertPreTrainedModel,h.ImageClassificationPipeline,h.ImageFeatureExtractionPipeline,h.ImageFeatureExtractor,h.ImageMattingOutput,h.ImageSegmentationPipeline,h.ImageToImagePipeline,h.ImageToTextPipeline,h.InterruptableStoppingCriteria,h.JAISLMHeadModel,h.JAISModel,h.JAISPreTrainedModel,h.LlamaForCausalLM,h.LlamaModel,h.LlamaPreTrainedModel,h.LlamaTokenizer,h.LlavaForConditionalGeneration,h.LlavaPreTrainedModel,h.LongT5ForConditionalGeneration,h.LongT5Model,h.LongT5PreTrainedModel,h.M2M100ForConditionalGeneration,h.M2M100Model,h.M2M100PreTrainedModel,h.M2M100Tokenizer,h.MBart50Tokenizer,h.MBartForCausalLM,h.MBartForConditionalGeneration,h.MBartForSequenceClassification,h.MBartModel,h.MBartPreTrainedModel,h.MBartTokenizer,h.MPNetForMaskedLM,h.MPNetForQuestionAnswering,h.MPNetForSequenceClassification,h.MPNetForTokenClassification,h.MPNetModel,h.MPNetPreTrainedModel,h.MPNetTokenizer,h.MT5ForConditionalGeneration,h.MT5Model,h.MT5PreTrainedModel,h.MarianMTModel,h.MarianModel,h.MarianPreTrainedModel,h.MarianTokenizer,h.MaskFormerFeatureExtractor,h.MaskFormerForInstanceSegmentation,h.MaskFormerModel,h.MaskFormerPreTrainedModel,h.MaskedLMOutput,h.MaxLengthCriteria,h.MistralForCausalLM,h.MistralModel,h.MistralPreTrainedModel,h.MobileBertForMaskedLM,h.MobileBertForQuestionAnswering,h.MobileBertForSequenceClassification,h.MobileBertModel,h.MobileBertPreTrainedModel,h.MobileBertTokenizer,h.MobileNetV1FeatureExtractor,h.MobileNetV1ForImageClassification,h.MobileNetV1Model,h.MobileNetV1PreTrainedModel,h.MobileNetV2FeatureExtractor,h.MobileNetV2ForImageClassification,h.MobileNetV2Model,h.MobileNetV2PreTrainedModel,h.MobileNetV3FeatureExtractor,h.MobileNetV3ForImageClassification,h.MobileNetV3Model,h.MobileNetV3PreTrainedModel,h.MobileNetV4FeatureExtractor,h.MobileNetV4ForImageClassification,h.MobileNetV4Model,h.MobileNetV4PreTrainedModel,h.MobileViTFeatureExtractor,h.MobileViTForImageClassification,h.MobileViTImageProcessor,h.MobileViTModel,h.MobileViTPreTrainedModel,h.MobileViTV2ForImageClassification,h.MobileViTV2Model,h.MobileViTV2PreTrainedModel,h.ModelOutput,h.Moondream1ForConditionalGeneration,h.MptForCausalLM,h.MptModel,h.MptPreTrainedModel,h.MusicgenForCausalLM,h.MusicgenForConditionalGeneration,h.MusicgenModel,h.MusicgenPreTrainedModel,h.NllbTokenizer,h.NomicBertModel,h.NomicBertPreTrainedModel,h.NougatImageProcessor,h.NougatTokenizer,h.OPTForCausalLM,h.OPTModel,h.OPTPreTrainedModel,h.ObjectDetectionPipeline,h.OpenELMForCausalLM,h.OpenELMModel,h.OpenELMPreTrainedModel,h.OwlViTFeatureExtractor,h.OwlViTForObjectDetection,h.OwlViTModel,h.OwlViTPreTrainedModel,h.OwlViTProcessor,h.Owlv2ForObjectDetection,h.Owlv2ImageProcessor,h.Owlv2Model,h.Owlv2PreTrainedModel,h.Phi3ForCausalLM,h.Phi3Model,h.Phi3PreTrainedModel,h.PhiForCausalLM,h.PhiModel,h.PhiPreTrainedModel,h.Pipeline,h.PreTrainedModel,h.PreTrainedTokenizer,h.PretrainedConfig,h.PretrainedMixin,h.Processor,h.PvtForImageClassification,h.PvtImageProcessor,h.PvtModel,h.PvtPreTrainedModel,h.PyAnnoteFeatureExtractor,h.PyAnnoteForAudioFrameClassification,h.PyAnnoteModel,h.PyAnnotePreTrainedModel,h.PyAnnoteProcessor,h.QuestionAnsweringModelOutput,h.QuestionAnsweringPipeline,h.Qwen2ForCausalLM,h.Qwen2Model,h.Qwen2PreTrainedModel,h.Qwen2Tokenizer,h.RTDetrForObjectDetection,h.RTDetrImageProcessor,h.RTDetrModel,h.RTDetrObjectDetectionOutput,h.RTDetrPreTrainedModel,h.RawImage,h.ResNetForImageClassification,h.ResNetModel,h.ResNetPreTrainedModel,h.RoFormerForMaskedLM,h.RoFormerForQuestionAnswering,h.RoFormerForSequenceClassification,h.RoFormerForTokenClassification,h.RoFormerModel,h.RoFormerPreTrainedModel,h.RoFormerTokenizer,h.RobertaForMaskedLM,h.RobertaForQuestionAnswering,h.RobertaForSequenceClassification,h.RobertaForTokenClassification,h.RobertaModel,h.RobertaPreTrainedModel,h.RobertaTokenizer,h.SamImageProcessor,h.SamImageSegmentationOutput,h.SamModel,h.SamPreTrainedModel,h.SamProcessor,h.SapiensFeatureExtractor,h.SapiensForDepthEstimation,h.SapiensForNormalEstimation,h.SapiensForSemanticSegmentation,h.SapiensPreTrainedModel,h.SeamlessM4TFeatureExtractor,h.SegformerFeatureExtractor,h.SegformerForImageClassification,h.SegformerForSemanticSegmentation,h.SegformerModel,h.SegformerPreTrainedModel,h.Seq2SeqLMOutput,h.SequenceClassifierOutput,h.SiglipImageProcessor,h.SiglipModel,h.SiglipPreTrainedModel,h.SiglipTextModel,h.SiglipTokenizer,h.SiglipVisionModel,h.SpeechT5FeatureExtractor,h.SpeechT5ForSpeechToText,h.SpeechT5ForTextToSpeech,h.SpeechT5HifiGan,h.SpeechT5Model,h.SpeechT5PreTrainedModel,h.SpeechT5Processor,h.SpeechT5Tokenizer,h.SqueezeBertForMaskedLM,h.SqueezeBertForQuestionAnswering,h.SqueezeBertForSequenceClassification,h.SqueezeBertModel,h.SqueezeBertPreTrainedModel,h.SqueezeBertTokenizer,h.StableLmForCausalLM,h.StableLmModel,h.StableLmPreTrainedModel,h.Starcoder2ForCausalLM,h.Starcoder2Model,h.Starcoder2PreTrainedModel,h.StoppingCriteria,h.StoppingCriteriaList,h.SummarizationPipeline,h.Swin2SRForImageSuperResolution,h.Swin2SRImageProcessor,h.Swin2SRModel,h.Swin2SRPreTrainedModel,h.SwinForImageClassification,h.SwinModel,h.SwinPreTrainedModel,h.T5ForConditionalGeneration,h.T5Model,h.T5PreTrainedModel,h.T5Tokenizer,h.TableTransformerForObjectDetection,h.TableTransformerModel,h.TableTransformerObjectDetectionOutput,h.TableTransformerPreTrainedModel,h.Tensor,h.Text2TextGenerationPipeline,h.TextClassificationPipeline,h.TextGenerationPipeline;var gm=h.TextStreamer;h.TextToAudioPipeline,h.TokenClassificationPipeline,h.TokenClassifierOutput,h.TokenizerModel,h.TrOCRForCausalLM,h.TrOCRPreTrainedModel,h.TranslationPipeline,h.UniSpeechForCTC,h.UniSpeechForSequenceClassification,h.UniSpeechModel,h.UniSpeechPreTrainedModel,h.UniSpeechSatForAudioFrameClassification,h.UniSpeechSatForCTC,h.UniSpeechSatForSequenceClassification,h.UniSpeechSatModel,h.UniSpeechSatPreTrainedModel,h.ViTFeatureExtractor,h.ViTForImageClassification,h.ViTImageProcessor,h.ViTMAEModel,h.ViTMAEPreTrainedModel,h.ViTMSNForImageClassification,h.ViTMSNModel,h.ViTMSNPreTrainedModel,h.ViTModel,h.ViTPreTrainedModel,h.VisionEncoderDecoderModel,h.VitMatteForImageMatting,h.VitMatteImageProcessor,h.VitMattePreTrainedModel,h.VitsModel,h.VitsModelOutput,h.VitsPreTrainedModel,h.VitsTokenizer,h.Wav2Vec2BertForCTC,h.Wav2Vec2BertForSequenceClassification,h.Wav2Vec2BertModel,h.Wav2Vec2BertPreTrainedModel,h.Wav2Vec2CTCTokenizer,h.Wav2Vec2FeatureExtractor,h.Wav2Vec2ForAudioFrameClassification,h.Wav2Vec2ForCTC,h.Wav2Vec2ForSequenceClassification,h.Wav2Vec2Model,h.Wav2Vec2PreTrainedModel,h.Wav2Vec2ProcessorWithLM,h.WavLMForAudioFrameClassification,h.WavLMForCTC,h.WavLMForSequenceClassification,h.WavLMForXVector,h.WavLMModel,h.WavLMPreTrainedModel,h.WeSpeakerFeatureExtractor,h.WeSpeakerResNetModel,h.WeSpeakerResNetPreTrainedModel,h.WhisperFeatureExtractor;var wm=h.WhisperForConditionalGeneration;h.WhisperModel,h.WhisperPreTrainedModel,h.WhisperProcessor,h.WhisperTextStreamer,h.WhisperTokenizer,h.XLMForQuestionAnswering,h.XLMForSequenceClassification,h.XLMForTokenClassification,h.XLMModel,h.XLMPreTrainedModel,h.XLMRobertaForMaskedLM,h.XLMRobertaForQuestionAnswering,h.XLMRobertaForSequenceClassification,h.XLMRobertaForTokenClassification,h.XLMRobertaModel,h.XLMRobertaPreTrainedModel,h.XLMRobertaTokenizer,h.XLMTokenizer,h.XLMWithLMHeadModel,h.XVectorOutput,h.YolosFeatureExtractor,h.YolosForObjectDetection,h.YolosModel,h.YolosObjectDetectionOutput,h.YolosPreTrainedModel,h.ZeroShotAudioClassificationPipeline,h.ZeroShotClassificationPipeline,h.ZeroShotImageClassificationPipeline,h.ZeroShotObjectDetectionPipeline,h.bankers_round,h.cat,h.cos_sim,h.dot,h.dynamic_time_warping,h.env;var ym=h.full;h.full_like,h.getKeyValueShapes,h.hamming,h.hanning,h.interpolate,h.interpolate_4d,h.interpolate_data,h.is_chinese_char,h.layer_norm,h.log_softmax,h.magnitude,h.matmul,h.max,h.mean,h.mean_pooling,h.medianFilter,h.mel_filter_bank,h.min,h.ones,h.ones_like,h.permute,h.permute_data,h.pipeline,h.quantize_embeddings,h.read_audio,h.rfft,h.round,h.softmax,h.spectrogram,h.stack,h.std_mean,h.topk,h.window_function,h.zeros,h.zeros_like;const bm=64;class Os{static async getInstance(ae=null){return this.model_id="onnx-community/whisper-tiny",this.tokenizer??(this.tokenizer=_m.from_pretrained(this.model_id,{progress_callback:ae})),this.processor??(this.processor=mm.from_pretrained(this.model_id,{progress_callback:ae})),this.model??(this.model=wm.from_pretrained(this.model_id,{dtype:{encoder_model:"q4",decoder_model_merged:"q4"},device:"webgpu",progress_callback:ae})),Promise.all([this.tokenizer,this.processor,this.model])}}Se(Os,"model_id",null),Se(Os,"tokenizer",null),Se(Os,"processor",null),Se(Os,"model",null);let Lc=!1;async function Mm({audio:De,language:ae}){if(Lc)return;Lc=!0,self.postMessage({status:"start"});const[z,F,ue]=await Os.getInstance();let oe,de=0;const Ee=Q=>{oe??(oe=performance.now());let ne;de++>0&&(ne=de/(performance.now()-oe)*1e3),self.postMessage({status:"update",output:Q,tps:ne,numTokens:de})},j=new gm(z,{skip_prompt:!0,skip_special_tokens:!0,callback_function:Ee}),I=await F(De),M=await ue.generate({...I,max_new_tokens:bm,language:ae,streamer:j}),R=z.batch_decode(M,{skip_special_tokens:!0});self.postMessage({status:"complete",output:R}),Lc=!1}async function vm(){self.postMessage({status:"loading",data:"Loading model..."}),console.log("* [whisper-worker] loading speech-to-text model ...");const[De,ae,z]=await Os.getInstance(F=>{self.postMessage(F)});self.postMessage({status:"loading",data:"Compiling shaders and warming up model..."}),await z.generate({input_features:ym([1,80,3e3],0),max_new_tokens:1,language:"en"}),console.log("* [whisper-worker] loaded speech-to-text model"),self.postMessage({status:"ready"})}self.addEventListener("message",async De=>{const{type:ae,data:z}=De.data;switch(ae){case"load":vm();break;case"generate":Mm(z);break}})})();
